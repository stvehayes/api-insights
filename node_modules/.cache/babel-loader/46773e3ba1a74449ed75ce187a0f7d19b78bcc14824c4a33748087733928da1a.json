{"ast":null,"code":"import React, { Children, useRef, useState, useEffect } from 'react';\nimport sx from '../sx.js';\nimport { useProvidedRefOrCreate } from '../hooks/useProvidedRefOrCreate.js';\nimport '@primer/behaviors/utils';\nimport { getAnchoredPosition } from '@primer/behaviors';\nimport { useId } from '../hooks/useId.js';\nimport { invariant } from '../utils/invariant.js';\nimport { warning } from '../utils/warning.js';\nimport styled from 'styled-components';\nimport { get } from '../constants.js';\nimport { isSupported, apply } from '@oddbird/popover-polyfill/fn';\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nconst animationStyles = `\n  animation-name: tooltip-appear;\n  animation-duration: 0.1s;\n  animation-fill-mode: forwards;\n  animation-timing-function: ease-in;\n  animation-delay: 0s;\n`;\nconst StyledTooltip = styled.div.withConfig({\n  displayName: \"Tooltip__StyledTooltip\",\n  componentId: \"sc-e45c7z-0\"\n})([\"display:none;&[popover]{position:absolute;padding:0.5em 0.75em;width:max-content;margin:auto;clip:auto;white-space:normal;font:normal normal 11px/1.5 \", \";-webkit-font-smoothing:subpixel-antialiased;color:\", \";text-align:center;word-wrap:break-word;background:\", \";border-radius:\", \";border:0;opacity:0;max-width:250px;inset:auto;overflow:visible;}&[popover]:popover-open{display:block;}&[popover].\\\\:popover-open{display:block;}@media (forced-colors:active){outline:1px solid transparent;}&::after{position:absolute;display:block;right:0;left:0;height:8px;content:'';}&[data-direction='n']::after,&[data-direction='ne']::after,&[data-direction='nw']::after{top:100%;}&[data-direction='s']::after,&[data-direction='se']::after,&[data-direction='sw']::after{bottom:100%;}&[data-direction='w']::after{position:absolute;display:block;height:100%;width:8px;content:'';bottom:0;left:100%;}&[data-direction='e']::after{position:absolute;display:block;height:100%;width:8px;content:'';bottom:0;right:100%;margin-left:-8px;}@keyframes tooltip-appear{from{opacity:0;}to{opacity:1;}}&:popover-open,&:popover-open::before{\", \"}&.\\\\:popover-open,&.\\\\:popover-open::before{\", \"}\", \";\"], get('fonts.normal'), get('colors.fg.onEmphasis'), get('colors.neutral.emphasisPlus'), get('radii.2'), animationStyles, animationStyles, sx);\n// map tooltip direction to anchoredPosition props\nconst directionToPosition = {\n  nw: {\n    side: 'outside-top',\n    align: 'end'\n  },\n  n: {\n    side: 'outside-top',\n    align: 'center'\n  },\n  ne: {\n    side: 'outside-top',\n    align: 'start'\n  },\n  e: {\n    side: 'outside-right',\n    align: 'center'\n  },\n  se: {\n    side: 'outside-bottom',\n    align: 'start'\n  },\n  s: {\n    side: 'outside-bottom',\n    align: 'center'\n  },\n  sw: {\n    side: 'outside-bottom',\n    align: 'end'\n  },\n  w: {\n    side: 'outside-left',\n    align: 'center'\n  }\n};\n\n// map anchoredPosition props to tooltip direction\nconst positionToDirection = {\n  'outside-top-end': 'nw',\n  'outside-top-center': 'n',\n  'outside-top-start': 'ne',\n  'outside-right-center': 'e',\n  'outside-bottom-start': 'se',\n  'outside-bottom-center': 's',\n  'outside-bottom-end': 'sw',\n  'outside-left-center': 'w'\n};\n\n// The list is from GitHub's custom-axe-rules https://github.com/github/github/blob/master/app/assets/modules/github/axe-custom-rules.ts#L3\nconst interactiveElements = ['a[href]', 'button:not(:disabled)', 'summary', 'select', 'input:not([type=hidden])', 'textarea'];\nconst isInteractive = element => {\n  return interactiveElements.some(selector => element.matches(selector)) || element.hasAttribute('role') && element.getAttribute('role') === 'button';\n};\nconst TooltipContext = /*#__PURE__*/React.createContext({});\nconst Tooltip = /*#__PURE__*/React.forwardRef(({\n  direction = 's',\n  text,\n  type = 'description',\n  children,\n  id,\n  ...rest\n}, forwardedRef) => {\n  const tooltipId = useId(id);\n  const child = Children.only(children);\n  const triggerRef = useProvidedRefOrCreate(forwardedRef);\n  const tooltipElRef = useRef(null);\n  const [calculatedDirection, setCalculatedDirection] = useState(direction);\n  const openTooltip = () => {\n    if (tooltipElRef.current && triggerRef.current && !tooltipElRef.current.matches(':popover-open')) {\n      tooltipElRef.current.showPopover();\n    }\n  };\n  const closeTooltip = () => {\n    if (tooltipElRef.current && triggerRef.current && tooltipElRef.current.matches(':popover-open')) {\n      tooltipElRef.current.hidePopover();\n    }\n  };\n  useEffect(() => {\n    if (!tooltipElRef.current || !triggerRef.current) return;\n    /*\n     * ACCESSIBILITY CHECKS\n     */\n    // Has trigger element or any of its children interactive elements?\n    const isTriggerInteractive = isInteractive(triggerRef.current);\n    const triggerChildren = triggerRef.current.childNodes;\n    const hasInteractiveChild = Array.from(triggerChildren).some(child => {\n      return child instanceof HTMLElement && isInteractive(child);\n    });\n    !(isTriggerInteractive || hasInteractiveChild) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'The `Tooltip` component expects a single React element that contains interactive content. Consider using a `<button>` or equivalent interactive element instead.') : invariant(false) : void 0;\n    // If the tooltip is used for labelling the interactive element, the trigger element or any of its children should not have aria-label\n    if (type === 'label') {\n      const hasAriaLabel = triggerRef.current.hasAttribute('aria-label');\n      const hasAriaLabelInChildren = Array.from(triggerRef.current.childNodes).some(child => child instanceof HTMLElement && child.hasAttribute('aria-label'));\n      process.env.NODE_ENV !== \"production\" ? warning(hasAriaLabel || hasAriaLabelInChildren, 'The label type `Tooltip` is going to be used here to label the trigger element. Please remove the aria-label from the trigger element.') : void 0;\n    }\n\n    // SSR safe polyfill apply\n    if (typeof window !== 'undefined') {\n      if (!isSupported()) {\n        apply();\n      }\n    }\n\n    /*\n     * TOOLTIP POSITIONING\n     */\n    const tooltip = tooltipElRef.current;\n    const trigger = triggerRef.current;\n    tooltip.setAttribute('popover', 'auto');\n    const settings = {\n      side: directionToPosition[direction].side,\n      align: directionToPosition[direction].align\n    };\n    const positionSet = () => {\n      const {\n        top,\n        left,\n        anchorAlign,\n        anchorSide\n      } = getAnchoredPosition(tooltip, trigger, settings);\n      tooltip.style.top = `${top}px`;\n      tooltip.style.left = `${left}px`;\n      // This is required to make sure the popover is positioned correctly i.e. when there is not enough space on the specified direction, we set a new direction to position the ::after\n      const calculatedDirection = positionToDirection[`${anchorSide}-${anchorAlign}`];\n      setCalculatedDirection(calculatedDirection);\n    };\n    tooltip.addEventListener('toggle', positionSet);\n    return () => {\n      tooltip.removeEventListener('toggle', positionSet);\n    };\n  }, [tooltipElRef, triggerRef, direction, type]);\n  return /*#__PURE__*/React.createElement(TooltipContext.Provider, {\n    value: {\n      tooltipId\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.isValidElement(child) && /*#__PURE__*/React.cloneElement(child, {\n    ref: triggerRef,\n    // If it is a type description, we use tooltip to describe the trigger\n    'aria-describedby': type === 'description' ? tooltipId : child.props['aria-describedby'],\n    // If it is a label type, we use tooltip to label the trigger\n    'aria-labelledby': type === 'label' ? tooltipId : child.props['aria-labelledby'],\n    onBlur: event => {\n      var _child$props$onBlur, _child$props;\n      closeTooltip();\n      (_child$props$onBlur = (_child$props = child.props).onBlur) === null || _child$props$onBlur === void 0 ? void 0 : _child$props$onBlur.call(_child$props, event);\n    },\n    onFocus: event => {\n      var _child$props$onFocus, _child$props2;\n      openTooltip();\n      (_child$props$onFocus = (_child$props2 = child.props).onFocus) === null || _child$props$onFocus === void 0 ? void 0 : _child$props$onFocus.call(_child$props2, event);\n    },\n    onMouseEnter: event => {\n      var _child$props$onMouseE, _child$props3;\n      openTooltip();\n      (_child$props$onMouseE = (_child$props3 = child.props).onMouseEnter) === null || _child$props$onMouseE === void 0 ? void 0 : _child$props$onMouseE.call(_child$props3, event);\n    },\n    onMouseLeave: event => {\n      var _child$props$onMouseL, _child$props4;\n      closeTooltip();\n      (_child$props$onMouseL = (_child$props4 = child.props).onMouseLeave) === null || _child$props$onMouseL === void 0 ? void 0 : _child$props$onMouseL.call(_child$props4, event);\n    }\n  }), /*#__PURE__*/React.createElement(StyledTooltip, _extends({\n    ref: tooltipElRef,\n    \"data-direction\": calculatedDirection\n  }, rest, {\n    // Only need tooltip role if the tooltip is a description for supplementary information\n    role: type === 'description' ? 'tooltip' : undefined\n    // stop AT from announcing the tooltip twice when it is a label type because it will be announced with \"aria-labelledby\"\n    ,\n\n    \"aria-hidden\": type === 'label' ? true : undefined,\n    id: tooltipId\n    // mouse leave and enter on the tooltip itself is needed to keep the tooltip open when the mouse is over the tooltip\n    ,\n\n    onMouseEnter: openTooltip,\n    onMouseLeave: closeTooltip\n  }), text)));\n});\nexport { Tooltip, TooltipContext };","map":{"version":3,"names":["React","Children","useRef","useState","useEffect","sx","useProvidedRefOrCreate","getAnchoredPosition","useId","invariant","warning","styled","get","isSupported","apply","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","animationStyles","StyledTooltip","div","withConfig","displayName","componentId","directionToPosition","nw","side","align","n","ne","e","se","s","sw","w","positionToDirection","interactiveElements","isInteractive","element","some","selector","matches","hasAttribute","getAttribute","TooltipContext","createContext","Tooltip","forwardRef","direction","text","type","children","id","rest","forwardedRef","tooltipId","child","only","triggerRef","tooltipElRef","calculatedDirection","setCalculatedDirection","openTooltip","current","showPopover","closeTooltip","hidePopover","isTriggerInteractive","triggerChildren","childNodes","hasInteractiveChild","Array","from","HTMLElement","process","env","NODE_ENV","hasAriaLabel","hasAriaLabelInChildren","window","tooltip","trigger","setAttribute","settings","positionSet","top","left","anchorAlign","anchorSide","style","addEventListener","removeEventListener","createElement","Provider","value","Fragment","isValidElement","cloneElement","ref","props","onBlur","event","_child$props$onBlur","_child$props","onFocus","_child$props$onFocus","_child$props2","onMouseEnter","_child$props$onMouseE","_child$props3","onMouseLeave","_child$props$onMouseL","_child$props4","role","undefined"],"sources":["/Users/steve/Documents/repos/github/licensing/node_modules/@primer/react/lib-esm/TooltipV2/Tooltip.js"],"sourcesContent":["import React, { Children, useRef, useState, useEffect } from 'react';\nimport sx from '../sx.js';\nimport { useProvidedRefOrCreate } from '../hooks/useProvidedRefOrCreate.js';\nimport '@primer/behaviors/utils';\nimport { getAnchoredPosition } from '@primer/behaviors';\nimport { useId } from '../hooks/useId.js';\nimport { invariant } from '../utils/invariant.js';\nimport { warning } from '../utils/warning.js';\nimport styled from 'styled-components';\nimport { get } from '../constants.js';\nimport { isSupported, apply } from '@oddbird/popover-polyfill/fn';\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nconst animationStyles = `\n  animation-name: tooltip-appear;\n  animation-duration: 0.1s;\n  animation-fill-mode: forwards;\n  animation-timing-function: ease-in;\n  animation-delay: 0s;\n`;\nconst StyledTooltip = styled.div.withConfig({\n  displayName: \"Tooltip__StyledTooltip\",\n  componentId: \"sc-e45c7z-0\"\n})([\"display:none;&[popover]{position:absolute;padding:0.5em 0.75em;width:max-content;margin:auto;clip:auto;white-space:normal;font:normal normal 11px/1.5 \", \";-webkit-font-smoothing:subpixel-antialiased;color:\", \";text-align:center;word-wrap:break-word;background:\", \";border-radius:\", \";border:0;opacity:0;max-width:250px;inset:auto;overflow:visible;}&[popover]:popover-open{display:block;}&[popover].\\\\:popover-open{display:block;}@media (forced-colors:active){outline:1px solid transparent;}&::after{position:absolute;display:block;right:0;left:0;height:8px;content:'';}&[data-direction='n']::after,&[data-direction='ne']::after,&[data-direction='nw']::after{top:100%;}&[data-direction='s']::after,&[data-direction='se']::after,&[data-direction='sw']::after{bottom:100%;}&[data-direction='w']::after{position:absolute;display:block;height:100%;width:8px;content:'';bottom:0;left:100%;}&[data-direction='e']::after{position:absolute;display:block;height:100%;width:8px;content:'';bottom:0;right:100%;margin-left:-8px;}@keyframes tooltip-appear{from{opacity:0;}to{opacity:1;}}&:popover-open,&:popover-open::before{\", \"}&.\\\\:popover-open,&.\\\\:popover-open::before{\", \"}\", \";\"], get('fonts.normal'), get('colors.fg.onEmphasis'), get('colors.neutral.emphasisPlus'), get('radii.2'), animationStyles, animationStyles, sx);\n// map tooltip direction to anchoredPosition props\nconst directionToPosition = {\n  nw: {\n    side: 'outside-top',\n    align: 'end'\n  },\n  n: {\n    side: 'outside-top',\n    align: 'center'\n  },\n  ne: {\n    side: 'outside-top',\n    align: 'start'\n  },\n  e: {\n    side: 'outside-right',\n    align: 'center'\n  },\n  se: {\n    side: 'outside-bottom',\n    align: 'start'\n  },\n  s: {\n    side: 'outside-bottom',\n    align: 'center'\n  },\n  sw: {\n    side: 'outside-bottom',\n    align: 'end'\n  },\n  w: {\n    side: 'outside-left',\n    align: 'center'\n  }\n};\n\n// map anchoredPosition props to tooltip direction\nconst positionToDirection = {\n  'outside-top-end': 'nw',\n  'outside-top-center': 'n',\n  'outside-top-start': 'ne',\n  'outside-right-center': 'e',\n  'outside-bottom-start': 'se',\n  'outside-bottom-center': 's',\n  'outside-bottom-end': 'sw',\n  'outside-left-center': 'w'\n};\n\n// The list is from GitHub's custom-axe-rules https://github.com/github/github/blob/master/app/assets/modules/github/axe-custom-rules.ts#L3\nconst interactiveElements = ['a[href]', 'button:not(:disabled)', 'summary', 'select', 'input:not([type=hidden])', 'textarea'];\nconst isInteractive = element => {\n  return interactiveElements.some(selector => element.matches(selector)) || element.hasAttribute('role') && element.getAttribute('role') === 'button';\n};\nconst TooltipContext = /*#__PURE__*/React.createContext({});\nconst Tooltip = /*#__PURE__*/React.forwardRef(({\n  direction = 's',\n  text,\n  type = 'description',\n  children,\n  id,\n  ...rest\n}, forwardedRef) => {\n  const tooltipId = useId(id);\n  const child = Children.only(children);\n  const triggerRef = useProvidedRefOrCreate(forwardedRef);\n  const tooltipElRef = useRef(null);\n  const [calculatedDirection, setCalculatedDirection] = useState(direction);\n  const openTooltip = () => {\n    if (tooltipElRef.current && triggerRef.current && !tooltipElRef.current.matches(':popover-open')) {\n      tooltipElRef.current.showPopover();\n    }\n  };\n  const closeTooltip = () => {\n    if (tooltipElRef.current && triggerRef.current && tooltipElRef.current.matches(':popover-open')) {\n      tooltipElRef.current.hidePopover();\n    }\n  };\n  useEffect(() => {\n    if (!tooltipElRef.current || !triggerRef.current) return;\n    /*\n     * ACCESSIBILITY CHECKS\n     */\n    // Has trigger element or any of its children interactive elements?\n    const isTriggerInteractive = isInteractive(triggerRef.current);\n    const triggerChildren = triggerRef.current.childNodes;\n    const hasInteractiveChild = Array.from(triggerChildren).some(child => {\n      return child instanceof HTMLElement && isInteractive(child);\n    });\n    !(isTriggerInteractive || hasInteractiveChild) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'The `Tooltip` component expects a single React element that contains interactive content. Consider using a `<button>` or equivalent interactive element instead.') : invariant(false) : void 0;\n    // If the tooltip is used for labelling the interactive element, the trigger element or any of its children should not have aria-label\n    if (type === 'label') {\n      const hasAriaLabel = triggerRef.current.hasAttribute('aria-label');\n      const hasAriaLabelInChildren = Array.from(triggerRef.current.childNodes).some(child => child instanceof HTMLElement && child.hasAttribute('aria-label'));\n      process.env.NODE_ENV !== \"production\" ? warning(hasAriaLabel || hasAriaLabelInChildren, 'The label type `Tooltip` is going to be used here to label the trigger element. Please remove the aria-label from the trigger element.') : void 0;\n    }\n\n    // SSR safe polyfill apply\n    if (typeof window !== 'undefined') {\n      if (!isSupported()) {\n        apply();\n      }\n    }\n\n    /*\n     * TOOLTIP POSITIONING\n     */\n    const tooltip = tooltipElRef.current;\n    const trigger = triggerRef.current;\n    tooltip.setAttribute('popover', 'auto');\n    const settings = {\n      side: directionToPosition[direction].side,\n      align: directionToPosition[direction].align\n    };\n    const positionSet = () => {\n      const {\n        top,\n        left,\n        anchorAlign,\n        anchorSide\n      } = getAnchoredPosition(tooltip, trigger, settings);\n      tooltip.style.top = `${top}px`;\n      tooltip.style.left = `${left}px`;\n      // This is required to make sure the popover is positioned correctly i.e. when there is not enough space on the specified direction, we set a new direction to position the ::after\n      const calculatedDirection = positionToDirection[`${anchorSide}-${anchorAlign}`];\n      setCalculatedDirection(calculatedDirection);\n    };\n    tooltip.addEventListener('toggle', positionSet);\n    return () => {\n      tooltip.removeEventListener('toggle', positionSet);\n    };\n  }, [tooltipElRef, triggerRef, direction, type]);\n  return /*#__PURE__*/React.createElement(TooltipContext.Provider, {\n    value: {\n      tooltipId\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.isValidElement(child) && /*#__PURE__*/React.cloneElement(child, {\n    ref: triggerRef,\n    // If it is a type description, we use tooltip to describe the trigger\n    'aria-describedby': type === 'description' ? tooltipId : child.props['aria-describedby'],\n    // If it is a label type, we use tooltip to label the trigger\n    'aria-labelledby': type === 'label' ? tooltipId : child.props['aria-labelledby'],\n    onBlur: event => {\n      var _child$props$onBlur, _child$props;\n      closeTooltip();\n      (_child$props$onBlur = (_child$props = child.props).onBlur) === null || _child$props$onBlur === void 0 ? void 0 : _child$props$onBlur.call(_child$props, event);\n    },\n    onFocus: event => {\n      var _child$props$onFocus, _child$props2;\n      openTooltip();\n      (_child$props$onFocus = (_child$props2 = child.props).onFocus) === null || _child$props$onFocus === void 0 ? void 0 : _child$props$onFocus.call(_child$props2, event);\n    },\n    onMouseEnter: event => {\n      var _child$props$onMouseE, _child$props3;\n      openTooltip();\n      (_child$props$onMouseE = (_child$props3 = child.props).onMouseEnter) === null || _child$props$onMouseE === void 0 ? void 0 : _child$props$onMouseE.call(_child$props3, event);\n    },\n    onMouseLeave: event => {\n      var _child$props$onMouseL, _child$props4;\n      closeTooltip();\n      (_child$props$onMouseL = (_child$props4 = child.props).onMouseLeave) === null || _child$props$onMouseL === void 0 ? void 0 : _child$props$onMouseL.call(_child$props4, event);\n    }\n  }), /*#__PURE__*/React.createElement(StyledTooltip, _extends({\n    ref: tooltipElRef,\n    \"data-direction\": calculatedDirection\n  }, rest, {\n    // Only need tooltip role if the tooltip is a description for supplementary information\n    role: type === 'description' ? 'tooltip' : undefined\n    // stop AT from announcing the tooltip twice when it is a label type because it will be announced with \"aria-labelledby\"\n    ,\n    \"aria-hidden\": type === 'label' ? true : undefined,\n    id: tooltipId\n    // mouse leave and enter on the tooltip itself is needed to keep the tooltip open when the mouse is over the tooltip\n    ,\n    onMouseEnter: openTooltip,\n    onMouseLeave: closeTooltip\n  }), text)));\n});\n\nexport { Tooltip, TooltipContext };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}