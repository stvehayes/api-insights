{"ast":null,"code":"import { useEffect } from 'react';\n\n/**\n * Updates all links in the container to open a new tab and call `onLinkClick` on click.\n */\nconst useLinkInterception = ({\n  htmlContainer,\n  onLinkClick,\n  openLinksInNewTab\n}) => {\n  useEffect(() => {\n    const clickHandler = event => {\n      const link = event.target.closest('a');\n      if (!link) return;\n      onLinkClick === null || onLinkClick === void 0 ? void 0 : onLinkClick(event);\n      if (!event.defaultPrevented && openLinksInNewTab && link.href) {\n        window.open(link.href, '_blank', 'noopener noreferrer');\n        event.preventDefault();\n      }\n    };\n    if (!htmlContainer) return;\n    htmlContainer.addEventListener('click', clickHandler);\n    return () => {\n      htmlContainer.removeEventListener('click', clickHandler);\n    };\n  }, [htmlContainer, onLinkClick, openLinksInNewTab]);\n};\nexport { useLinkInterception };","map":{"version":3,"names":["useEffect","useLinkInterception","htmlContainer","onLinkClick","openLinksInNewTab","clickHandler","event","link","target","closest","defaultPrevented","href","window","open","preventDefault","addEventListener","removeEventListener"],"sources":["/Users/steve/Documents/repos/github/api-insights/node_modules/@primer/react/lib-esm/drafts/MarkdownViewer/_useLinkInterception.js"],"sourcesContent":["import { useEffect } from 'react';\n\n/**\n * Updates all links in the container to open a new tab and call `onLinkClick` on click.\n */\nconst useLinkInterception = ({\n  htmlContainer,\n  onLinkClick,\n  openLinksInNewTab\n}) => {\n  useEffect(() => {\n    const clickHandler = event => {\n      const link = event.target.closest('a');\n      if (!link) return;\n      onLinkClick === null || onLinkClick === void 0 ? void 0 : onLinkClick(event);\n      if (!event.defaultPrevented && openLinksInNewTab && link.href) {\n        window.open(link.href, '_blank', 'noopener noreferrer');\n        event.preventDefault();\n      }\n    };\n    if (!htmlContainer) return;\n    htmlContainer.addEventListener('click', clickHandler);\n    return () => {\n      htmlContainer.removeEventListener('click', clickHandler);\n    };\n  }, [htmlContainer, onLinkClick, openLinksInNewTab]);\n};\n\nexport { useLinkInterception };\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,OAAO;;AAEjC;AACA;AACA;AACA,MAAMC,mBAAmB,GAAGA,CAAC;EAC3BC,aAAa;EACbC,WAAW;EACXC;AACF,CAAC,KAAK;EACJJ,SAAS,CAAC,MAAM;IACd,MAAMK,YAAY,GAAGC,KAAK,IAAI;MAC5B,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,OAAO,CAAC,GAAG,CAAC;MACtC,IAAI,CAACF,IAAI,EAAE;MACXJ,WAAW,KAAK,IAAI,IAAIA,WAAW,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,WAAW,CAACG,KAAK,CAAC;MAC5E,IAAI,CAACA,KAAK,CAACI,gBAAgB,IAAIN,iBAAiB,IAAIG,IAAI,CAACI,IAAI,EAAE;QAC7DC,MAAM,CAACC,IAAI,CAACN,IAAI,CAACI,IAAI,EAAE,QAAQ,EAAE,qBAAqB,CAAC;QACvDL,KAAK,CAACQ,cAAc,CAAC,CAAC;MACxB;IACF,CAAC;IACD,IAAI,CAACZ,aAAa,EAAE;IACpBA,aAAa,CAACa,gBAAgB,CAAC,OAAO,EAAEV,YAAY,CAAC;IACrD,OAAO,MAAM;MACXH,aAAa,CAACc,mBAAmB,CAAC,OAAO,EAAEX,YAAY,CAAC;IAC1D,CAAC;EACH,CAAC,EAAE,CAACH,aAAa,EAAEC,WAAW,EAAEC,iBAAiB,CAAC,CAAC;AACrD,CAAC;AAED,SAASH,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}