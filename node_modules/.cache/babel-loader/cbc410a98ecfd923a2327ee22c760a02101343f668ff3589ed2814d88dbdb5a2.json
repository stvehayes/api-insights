{"ast":null,"code":"var _jsxFileName = \"/Users/steve/Documents/repos/github/api-insights/src/components/DataChart/DataChart.js\",\n  _s = $RefreshSig$();\nimport Chart from 'chart.js/auto';\nimport { CategoryScale } from 'chart.js';\nimport { useState } from 'react';\nimport { Box, Text } from '@primer/react';\nimport { Data } from '../../data/Data';\nimport { LineChart } from '../Charts/LineChart/LineChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(CategoryScale);\nexport function DataChart() {\n  _s();\n  const [chartData, setChartData] = useState({\n    labels: Data.map(data => data.time),\n    datasets: [{\n      label: 'Requests',\n      data: Data.map(data => data.requests),\n      // backgroundColor: ['#DAFBE1', 'red'],\n      backgroundColor: context => {\n        const bgColor = ['rgba(255, 26, 104, 0.2)', 'rgba(255, 26, 104,0.5)'];\n        if (!context.chart.chartArea) {\n          return;\n        }\n        const {\n          ctx,\n          data,\n          chartArea: {\n            top,\n            bottom\n          }\n        } = context.chart;\n        const gradientBg = ctx.createLinearGradient(0, top, 0, bottom);\n        gradientBg.addColorStop(0, bgColor[0]);\n        gradientBg.addColorStop(0.5, bgColor[1]);\n        gradientBg.addColorStop(1, bgColor[2]);\n      },\n      borderColor: '#2DA44E',\n      borderWidth: 1,\n      fill: true\n    }]\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      px: 3,\n      py: 3,\n      textAlign: 'center',\n      mb: 3,\n      borderRadius: 2,\n      border: '1px solid',\n      borderColor: 'border.default',\n      height: '360px'\n    },\n    children: /*#__PURE__*/_jsxDEV(LineChart, {\n      chartData: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(DataChart, \"ZEhQ/s/tbHZVkiNpi3wv1MvJd9I=\");\n_c = DataChart;\nvar _c;\n$RefreshReg$(_c, \"DataChart\");","map":{"version":3,"names":["Chart","CategoryScale","useState","Box","Text","Data","LineChart","jsxDEV","_jsxDEV","register","DataChart","_s","chartData","setChartData","labels","map","data","time","datasets","label","requests","backgroundColor","context","bgColor","chart","chartArea","ctx","top","bottom","gradientBg","createLinearGradient","addColorStop","borderColor","borderWidth","fill","sx","px","py","textAlign","mb","borderRadius","border","height","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/steve/Documents/repos/github/api-insights/src/components/DataChart/DataChart.js"],"sourcesContent":["import Chart from 'chart.js/auto';\nimport { CategoryScale } from 'chart.js';\nimport { useState } from 'react';\nimport { Box, Text } from '@primer/react';\nimport { Data } from '../../data/Data';\nimport { LineChart } from '../Charts/LineChart/LineChart';\n\nChart.register(CategoryScale);\n\nexport function DataChart() {\n  const [chartData, setChartData] = useState({\n    labels: Data.map((data) => data.time),\n    datasets: [\n      {\n        label: 'Requests',\n        data: Data.map((data) => data.requests),\n        // backgroundColor: ['#DAFBE1', 'red'],\n        backgroundColor: (context) => {\n          const bgColor = ['rgba(255, 26, 104, 0.2)', 'rgba(255, 26, 104,0.5)'];\n          if (!context.chart.chartArea) {\n            return;\n          }\n\n          const {\n            ctx,\n            data,\n            chartArea: { top, bottom },\n          } = context.chart;\n          const gradientBg = ctx.createLinearGradient(0, top, 0, bottom);\n          gradientBg.addColorStop(0, bgColor[0]);\n          gradientBg.addColorStop(0.5, bgColor[1]);\n          gradientBg.addColorStop(1, bgColor[2]);\n        },\n        borderColor: '#2DA44E',\n        borderWidth: 1,\n        fill: true,\n      },\n    ],\n  });\n\n  return (\n    <Box\n      sx={{\n        px: 3,\n        py: 3,\n        textAlign: 'center',\n        mb: 3,\n        borderRadius: 2,\n        border: '1px solid',\n        borderColor: 'border.default',\n        height: '360px',\n      }}\n    >\n      <LineChart chartData={chartData} />\n    </Box>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,eAAe;AACjC,SAASC,aAAa,QAAQ,UAAU;AACxC,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,GAAG,EAAEC,IAAI,QAAQ,eAAe;AACzC,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SAASC,SAAS,QAAQ,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1DR,KAAK,CAACS,QAAQ,CAACR,aAAa,CAAC;AAE7B,OAAO,SAASS,SAASA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC;IACzCY,MAAM,EAAET,IAAI,CAACU,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,CAAC;IACrCC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,UAAU;MACjBH,IAAI,EAAEX,IAAI,CAACU,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACI,QAAQ,CAAC;MACvC;MACAC,eAAe,EAAGC,OAAO,IAAK;QAC5B,MAAMC,OAAO,GAAG,CAAC,yBAAyB,EAAE,wBAAwB,CAAC;QACrE,IAAI,CAACD,OAAO,CAACE,KAAK,CAACC,SAAS,EAAE;UAC5B;QACF;QAEA,MAAM;UACJC,GAAG;UACHV,IAAI;UACJS,SAAS,EAAE;YAAEE,GAAG;YAAEC;UAAO;QAC3B,CAAC,GAAGN,OAAO,CAACE,KAAK;QACjB,MAAMK,UAAU,GAAGH,GAAG,CAACI,oBAAoB,CAAC,CAAC,EAAEH,GAAG,EAAE,CAAC,EAAEC,MAAM,CAAC;QAC9DC,UAAU,CAACE,YAAY,CAAC,CAAC,EAAER,OAAO,CAAC,CAAC,CAAC,CAAC;QACtCM,UAAU,CAACE,YAAY,CAAC,GAAG,EAAER,OAAO,CAAC,CAAC,CAAC,CAAC;QACxCM,UAAU,CAACE,YAAY,CAAC,CAAC,EAAER,OAAO,CAAC,CAAC,CAAC,CAAC;MACxC,CAAC;MACDS,WAAW,EAAE,SAAS;MACtBC,WAAW,EAAE,CAAC;MACdC,IAAI,EAAE;IACR,CAAC;EAEL,CAAC,CAAC;EAEF,oBACE1B,OAAA,CAACL,GAAG;IACFgC,EAAE,EAAE;MACFC,EAAE,EAAE,CAAC;MACLC,EAAE,EAAE,CAAC;MACLC,SAAS,EAAE,QAAQ;MACnBC,EAAE,EAAE,CAAC;MACLC,YAAY,EAAE,CAAC;MACfC,MAAM,EAAE,WAAW;MACnBT,WAAW,EAAE,gBAAgB;MAC7BU,MAAM,EAAE;IACV,CAAE;IAAAC,QAAA,eAEFnC,OAAA,CAACF,SAAS;MAACM,SAAS,EAAEA;IAAU;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEV;AAACpC,EAAA,CA/CeD,SAAS;AAAAsC,EAAA,GAATtC,SAAS;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}