{"ast":null,"code":"import React from 'react';\nimport { createPortal } from 'react-dom';\nimport useIsomorphicLayoutEffect from '../utils/useIsomorphicLayoutEffect.js';\nconst PRIMER_PORTAL_ROOT_ID = '__primerPortalRoot__';\nconst DEFAULT_PORTAL_CONTAINER_NAME = '__default__';\nconst portalRootRegistry = {};\n\n/**\n * Register a container to serve as a portal root.\n * @param root The element that will be the root for portals created in this container\n * @param name The name of the container, to be used with the `containerName` prop on the Portal Component.\n * If name is not specified, registers the default portal root.\n */\nfunction registerPortalRoot(root, name = DEFAULT_PORTAL_CONTAINER_NAME) {\n  portalRootRegistry[name] = root;\n}\n\n// Ensures that a default portal root exists and is registered. If a DOM element exists\n// with id __primerPortalRoot__, allow that element to serve as the default portal root.\n// Otherwise, create that element and attach it to the end of document.body.\nfunction ensureDefaultPortal() {\n  const existingDefaultPortalContainer = portalRootRegistry[DEFAULT_PORTAL_CONTAINER_NAME];\n  if (!existingDefaultPortalContainer || !document.body.contains(existingDefaultPortalContainer)) {\n    let defaultPortalContainer = document.getElementById(PRIMER_PORTAL_ROOT_ID);\n    if (!(defaultPortalContainer instanceof Element)) {\n      defaultPortalContainer = document.createElement('div');\n      defaultPortalContainer.setAttribute('id', PRIMER_PORTAL_ROOT_ID);\n      defaultPortalContainer.style.position = 'absolute';\n      defaultPortalContainer.style.top = '0';\n      defaultPortalContainer.style.left = '0';\n      const suitablePortalRoot = document.querySelector('[data-portal-root]');\n      if (suitablePortalRoot) {\n        suitablePortalRoot.appendChild(defaultPortalContainer);\n      } else {\n        document.body.appendChild(defaultPortalContainer);\n      }\n    }\n    registerPortalRoot(defaultPortalContainer);\n  }\n}\n/**\n * Creates a React Portal, placing all children in a separate physical DOM root node.\n * @see https://reactjs.org/docs/portals.html\n */\nconst Portal = ({\n  children,\n  onMount,\n  containerName: _containerName\n}) => {\n  const elementRef = React.useRef(null);\n  if (!elementRef.current) {\n    const div = document.createElement('div');\n    // Portaled content should get their own stacking context so they don't interfere\n    // with each other in unexpected ways. One should never find themselves tempted\n    // to change the zIndex to a value other than \"1\".\n    div.style.position = 'relative';\n    div.style.zIndex = '1';\n    elementRef.current = div;\n  }\n  const element = elementRef.current;\n  useIsomorphicLayoutEffect(() => {\n    let containerName = _containerName;\n    if (containerName === undefined) {\n      containerName = DEFAULT_PORTAL_CONTAINER_NAME;\n      ensureDefaultPortal();\n    }\n    const parentElement = portalRootRegistry[containerName];\n    if (!parentElement) {\n      throw new Error(`Portal container '${_containerName}' is not yet registered. Container must be registered with registerPortal before use.`);\n    }\n    parentElement.appendChild(element);\n    onMount === null || onMount === void 0 ? void 0 : onMount();\n    return () => {\n      parentElement.removeChild(element);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [element]);\n  return /*#__PURE__*/createPortal(children, element);\n};\nexport { Portal, registerPortalRoot };","map":{"version":3,"names":["React","createPortal","useIsomorphicLayoutEffect","PRIMER_PORTAL_ROOT_ID","DEFAULT_PORTAL_CONTAINER_NAME","portalRootRegistry","registerPortalRoot","root","name","ensureDefaultPortal","existingDefaultPortalContainer","document","body","contains","defaultPortalContainer","getElementById","Element","createElement","setAttribute","style","position","top","left","suitablePortalRoot","querySelector","appendChild","Portal","children","onMount","containerName","_containerName","elementRef","useRef","current","div","zIndex","element","undefined","parentElement","Error","removeChild"],"sources":["/Users/steve/Documents/repos/github/billing-usage/node_modules/@primer/react/lib-esm/Portal/Portal.js"],"sourcesContent":["import React from 'react';\nimport { createPortal } from 'react-dom';\nimport useIsomorphicLayoutEffect from '../utils/useIsomorphicLayoutEffect.js';\n\nconst PRIMER_PORTAL_ROOT_ID = '__primerPortalRoot__';\nconst DEFAULT_PORTAL_CONTAINER_NAME = '__default__';\nconst portalRootRegistry = {};\n\n/**\n * Register a container to serve as a portal root.\n * @param root The element that will be the root for portals created in this container\n * @param name The name of the container, to be used with the `containerName` prop on the Portal Component.\n * If name is not specified, registers the default portal root.\n */\nfunction registerPortalRoot(root, name = DEFAULT_PORTAL_CONTAINER_NAME) {\n  portalRootRegistry[name] = root;\n}\n\n// Ensures that a default portal root exists and is registered. If a DOM element exists\n// with id __primerPortalRoot__, allow that element to serve as the default portal root.\n// Otherwise, create that element and attach it to the end of document.body.\nfunction ensureDefaultPortal() {\n  const existingDefaultPortalContainer = portalRootRegistry[DEFAULT_PORTAL_CONTAINER_NAME];\n  if (!existingDefaultPortalContainer || !document.body.contains(existingDefaultPortalContainer)) {\n    let defaultPortalContainer = document.getElementById(PRIMER_PORTAL_ROOT_ID);\n    if (!(defaultPortalContainer instanceof Element)) {\n      defaultPortalContainer = document.createElement('div');\n      defaultPortalContainer.setAttribute('id', PRIMER_PORTAL_ROOT_ID);\n      defaultPortalContainer.style.position = 'absolute';\n      defaultPortalContainer.style.top = '0';\n      defaultPortalContainer.style.left = '0';\n      const suitablePortalRoot = document.querySelector('[data-portal-root]');\n      if (suitablePortalRoot) {\n        suitablePortalRoot.appendChild(defaultPortalContainer);\n      } else {\n        document.body.appendChild(defaultPortalContainer);\n      }\n    }\n    registerPortalRoot(defaultPortalContainer);\n  }\n}\n/**\n * Creates a React Portal, placing all children in a separate physical DOM root node.\n * @see https://reactjs.org/docs/portals.html\n */\nconst Portal = ({\n  children,\n  onMount,\n  containerName: _containerName\n}) => {\n  const elementRef = React.useRef(null);\n  if (!elementRef.current) {\n    const div = document.createElement('div');\n    // Portaled content should get their own stacking context so they don't interfere\n    // with each other in unexpected ways. One should never find themselves tempted\n    // to change the zIndex to a value other than \"1\".\n    div.style.position = 'relative';\n    div.style.zIndex = '1';\n    elementRef.current = div;\n  }\n  const element = elementRef.current;\n  useIsomorphicLayoutEffect(() => {\n    let containerName = _containerName;\n    if (containerName === undefined) {\n      containerName = DEFAULT_PORTAL_CONTAINER_NAME;\n      ensureDefaultPortal();\n    }\n    const parentElement = portalRootRegistry[containerName];\n    if (!parentElement) {\n      throw new Error(`Portal container '${_containerName}' is not yet registered. Container must be registered with registerPortal before use.`);\n    }\n    parentElement.appendChild(element);\n    onMount === null || onMount === void 0 ? void 0 : onMount();\n    return () => {\n      parentElement.removeChild(element);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [element]);\n  return /*#__PURE__*/createPortal(children, element);\n};\n\nexport { Portal, registerPortalRoot };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}