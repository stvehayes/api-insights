{"ast":null,"code":"import { ReplyIcon } from '@primer/octicons-react';\nimport React, { createContext, useContext, useImperativeHandle, useState, useEffect } from 'react';\nimport { SelectPanel } from '../../SelectPanel/SelectPanel.js';\nimport { ToolbarButton } from './_ToolbarButton.js';\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n// SavedRepliesContext is separate from MarkdownEditorContext because the saved replies array is practically guarunteed to change\n// on every render. If it was provided in the MarkdownEditorContext, it would cause the whole editor to rerender on every render.\nconst SavedRepliesContext = /*#__PURE__*/createContext(null);\nconst SavedRepliesButton = () => {\n  const context = useContext(SavedRepliesContext);\n  useImperativeHandle(context === null || context === void 0 ? void 0 : context.ref, () => ({\n    openMenu: () => {\n      setOpen(true);\n    }\n  }));\n  const [open, setOpen] = useState(false);\n  useEffect(() => setFilter(''), [open]);\n  const [filter, setFilter] = useState('');\n\n  // there's not much point in memoizing this since the savedReplies array is likely to change on every render\n  const items = context === null || context === void 0 ? void 0 : context.savedReplies.filter(({\n    name\n  }) => name.toLowerCase().includes(filter.toLowerCase())).map((reply, i) => ({\n    text: reply.name,\n    description: reply.content,\n    descriptionVariant: 'block',\n    trailingVisual: i < 9 ? `Ctrl + ${i + 1}` : undefined,\n    sx: {\n      // hide the leading visual container since we don't use the checkboxes\n      '& [class*=BaseVisualContainer]:first-child': {\n        display: 'none'\n      },\n      '& [class*=DescriptionContainer]': {\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        maxWidth: '100%'\n      }\n    }\n  }));\n  const onSelectItem = item => {\n    setOpen(false);\n    const reply = context === null || context === void 0 ? void 0 : context.savedReplies.find(({\n      name\n    }) => name === (item === null || item === void 0 ? void 0 : item.text));\n    if (reply) context === null || context === void 0 ? void 0 : context.onSelect(reply);\n  };\n  const onKeyDown = event => {\n    const keyInt = parseInt(event.key, 10);\n    if (items && event.ctrlKey && !Number.isNaN(keyInt) && keyInt >= 1 && keyInt <= 9) {\n      event.stopPropagation();\n      event.preventDefault();\n      onSelectItem(items[keyInt - 1]);\n    }\n  };\n  return items ? /*#__PURE__*/React.createElement(SelectPanel, {\n    renderAnchor: props => /*#__PURE__*/React.createElement(ToolbarButton, _extends({}, props, {\n      icon: ReplyIcon,\n      \"aria-label\": \"Add saved reply (Ctrl + .)\",\n      \"aria-labelledby\": undefined\n    })),\n    open: open,\n    onOpenChange: setOpen,\n    items: items,\n    filterValue: filter,\n    onFilterChange: setFilter,\n    placeholderText: \"Search saved replies\",\n    selected: undefined,\n    onSelectedChange: selection => {\n      onSelectItem(Array.isArray(selection) ? selection[0] : selection);\n    },\n    overlayProps: {\n      width: 'small',\n      maxHeight: 'small',\n      anchorSide: 'outside-right',\n      onKeyDown\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null);\n};\nexport { SavedRepliesButton, SavedRepliesContext };","map":{"version":3,"names":["ReplyIcon","React","createContext","useContext","useImperativeHandle","useState","useEffect","SelectPanel","ToolbarButton","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","SavedRepliesContext","SavedRepliesButton","context","ref","openMenu","setOpen","open","setFilter","filter","items","savedReplies","name","toLowerCase","includes","map","reply","text","description","content","descriptionVariant","trailingVisual","undefined","sx","display","whiteSpace","overflow","textOverflow","maxWidth","onSelectItem","item","find","onSelect","onKeyDown","event","keyInt","parseInt","ctrlKey","Number","isNaN","stopPropagation","preventDefault","createElement","renderAnchor","props","icon","onOpenChange","filterValue","onFilterChange","placeholderText","selected","onSelectedChange","selection","Array","isArray","overlayProps","width","maxHeight","anchorSide","Fragment"],"sources":["/Users/steve/Documents/repos/github/api-insights/node_modules/@primer/react/lib-esm/drafts/MarkdownEditor/_SavedReplies.js"],"sourcesContent":["import { ReplyIcon } from '@primer/octicons-react';\nimport React, { createContext, useContext, useImperativeHandle, useState, useEffect } from 'react';\nimport { SelectPanel } from '../../SelectPanel/SelectPanel.js';\nimport { ToolbarButton } from './_ToolbarButton.js';\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n// SavedRepliesContext is separate from MarkdownEditorContext because the saved replies array is practically guarunteed to change\n// on every render. If it was provided in the MarkdownEditorContext, it would cause the whole editor to rerender on every render.\nconst SavedRepliesContext = /*#__PURE__*/createContext(null);\nconst SavedRepliesButton = () => {\n  const context = useContext(SavedRepliesContext);\n  useImperativeHandle(context === null || context === void 0 ? void 0 : context.ref, () => ({\n    openMenu: () => {\n      setOpen(true);\n    }\n  }));\n  const [open, setOpen] = useState(false);\n  useEffect(() => setFilter(''), [open]);\n  const [filter, setFilter] = useState('');\n\n  // there's not much point in memoizing this since the savedReplies array is likely to change on every render\n  const items = context === null || context === void 0 ? void 0 : context.savedReplies.filter(({\n    name\n  }) => name.toLowerCase().includes(filter.toLowerCase())).map((reply, i) => ({\n    text: reply.name,\n    description: reply.content,\n    descriptionVariant: 'block',\n    trailingVisual: i < 9 ? `Ctrl + ${i + 1}` : undefined,\n    sx: {\n      // hide the leading visual container since we don't use the checkboxes\n      '& [class*=BaseVisualContainer]:first-child': {\n        display: 'none'\n      },\n      '& [class*=DescriptionContainer]': {\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        maxWidth: '100%'\n      }\n    }\n  }));\n  const onSelectItem = item => {\n    setOpen(false);\n    const reply = context === null || context === void 0 ? void 0 : context.savedReplies.find(({\n      name\n    }) => name === (item === null || item === void 0 ? void 0 : item.text));\n    if (reply) context === null || context === void 0 ? void 0 : context.onSelect(reply);\n  };\n  const onKeyDown = event => {\n    const keyInt = parseInt(event.key, 10);\n    if (items && event.ctrlKey && !Number.isNaN(keyInt) && keyInt >= 1 && keyInt <= 9) {\n      event.stopPropagation();\n      event.preventDefault();\n      onSelectItem(items[keyInt - 1]);\n    }\n  };\n  return items ? /*#__PURE__*/React.createElement(SelectPanel, {\n    renderAnchor: props => /*#__PURE__*/React.createElement(ToolbarButton, _extends({}, props, {\n      icon: ReplyIcon,\n      \"aria-label\": \"Add saved reply (Ctrl + .)\",\n      \"aria-labelledby\": undefined\n    })),\n    open: open,\n    onOpenChange: setOpen,\n    items: items,\n    filterValue: filter,\n    onFilterChange: setFilter,\n    placeholderText: \"Search saved replies\",\n    selected: undefined,\n    onSelectedChange: selection => {\n      onSelectItem(Array.isArray(selection) ? selection[0] : selection);\n    },\n    overlayProps: {\n      width: 'small',\n      maxHeight: 'small',\n      anchorSide: 'outside-right',\n      onKeyDown\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null);\n};\n\nexport { SavedRepliesButton, SavedRepliesContext };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}