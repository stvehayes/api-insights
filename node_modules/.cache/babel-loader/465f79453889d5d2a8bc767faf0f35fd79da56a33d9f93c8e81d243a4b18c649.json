{"ast":null,"code":"import React from 'react';\nimport styled from 'styled-components';\nimport sx from '../sx.js';\nimport { ActionListContainerContext } from './ActionListContainerContext.js';\nimport { defaultSxProp } from '../utils/defaultSxProp.js';\nimport { useSlots } from '../hooks/useSlots.js';\nimport { Heading } from './Heading.js';\nimport { useId } from '../hooks/useId.js';\nimport { ListContext } from './shared.js';\nimport merge from 'deepmerge';\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nconst ListBox = styled.ul.withConfig({\n  displayName: \"List__ListBox\",\n  componentId: \"sc-1x7olzq-0\"\n})(sx);\nconst List = /*#__PURE__*/React.forwardRef(({\n  variant = 'inset',\n  selectionVariant,\n  showDividers = false,\n  role,\n  sx: sxProp = defaultSxProp,\n  ...props\n}, forwardedRef) => {\n  var _slots$heading$props$;\n  const styles = {\n    margin: 0,\n    paddingInlineStart: 0,\n    // reset ul styles\n    paddingY: variant === 'inset' ? 2 : 0\n  };\n  const [slots, childrenWithoutSlots] = useSlots(props.children, {\n    heading: Heading\n  });\n  const headingId = useId();\n\n  /** if list is inside a Menu, it will get a role from the Menu */\n  const {\n    listRole,\n    listLabelledBy,\n    selectionVariant: containerSelectionVariant // TODO: Remove after DropdownMenu2 deprecation\n  } = React.useContext(ActionListContainerContext);\n  const ariaLabelledBy = slots.heading ? (_slots$heading$props$ = slots.heading.props.id) !== null && _slots$heading$props$ !== void 0 ? _slots$heading$props$ : headingId : listLabelledBy;\n  return /*#__PURE__*/React.createElement(ListContext.Provider, {\n    value: {\n      variant,\n      selectionVariant: selectionVariant || containerSelectionVariant,\n      showDividers,\n      role: role || listRole,\n      headingId\n    }\n  }, slots.heading, /*#__PURE__*/React.createElement(ListBox, _extends({\n    sx: merge(styles, sxProp),\n    role: role || listRole,\n    \"aria-labelledby\": ariaLabelledBy\n  }, props, {\n    ref: forwardedRef\n  }), childrenWithoutSlots));\n});\nList.displayName = 'ActionList';\nexport { List };","map":{"version":3,"names":["React","styled","sx","ActionListContainerContext","defaultSxProp","useSlots","Heading","useId","ListContext","merge","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","ListBox","ul","withConfig","displayName","componentId","List","forwardRef","variant","selectionVariant","showDividers","role","sxProp","props","forwardedRef","_slots$heading$props$","styles","margin","paddingInlineStart","paddingY","slots","childrenWithoutSlots","children","heading","headingId","listRole","listLabelledBy","containerSelectionVariant","useContext","ariaLabelledBy","id","createElement","Provider","value","ref"],"sources":["/Users/steve/Documents/repos/github/licensing/node_modules/@primer/react/lib-esm/ActionList/List.js"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport sx from '../sx.js';\nimport { ActionListContainerContext } from './ActionListContainerContext.js';\nimport { defaultSxProp } from '../utils/defaultSxProp.js';\nimport { useSlots } from '../hooks/useSlots.js';\nimport { Heading } from './Heading.js';\nimport { useId } from '../hooks/useId.js';\nimport { ListContext } from './shared.js';\nimport merge from 'deepmerge';\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nconst ListBox = styled.ul.withConfig({\n  displayName: \"List__ListBox\",\n  componentId: \"sc-1x7olzq-0\"\n})(sx);\nconst List = /*#__PURE__*/React.forwardRef(({\n  variant = 'inset',\n  selectionVariant,\n  showDividers = false,\n  role,\n  sx: sxProp = defaultSxProp,\n  ...props\n}, forwardedRef) => {\n  var _slots$heading$props$;\n  const styles = {\n    margin: 0,\n    paddingInlineStart: 0,\n    // reset ul styles\n    paddingY: variant === 'inset' ? 2 : 0\n  };\n  const [slots, childrenWithoutSlots] = useSlots(props.children, {\n    heading: Heading\n  });\n  const headingId = useId();\n\n  /** if list is inside a Menu, it will get a role from the Menu */\n  const {\n    listRole,\n    listLabelledBy,\n    selectionVariant: containerSelectionVariant // TODO: Remove after DropdownMenu2 deprecation\n  } = React.useContext(ActionListContainerContext);\n  const ariaLabelledBy = slots.heading ? (_slots$heading$props$ = slots.heading.props.id) !== null && _slots$heading$props$ !== void 0 ? _slots$heading$props$ : headingId : listLabelledBy;\n  return /*#__PURE__*/React.createElement(ListContext.Provider, {\n    value: {\n      variant,\n      selectionVariant: selectionVariant || containerSelectionVariant,\n      showDividers,\n      role: role || listRole,\n      headingId\n    }\n  }, slots.heading, /*#__PURE__*/React.createElement(ListBox, _extends({\n    sx: merge(styles, sxProp),\n    role: role || listRole,\n    \"aria-labelledby\": ariaLabelledBy\n  }, props, {\n    ref: forwardedRef\n  }), childrenWithoutSlots));\n});\nList.displayName = 'ActionList';\n\nexport { List };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}