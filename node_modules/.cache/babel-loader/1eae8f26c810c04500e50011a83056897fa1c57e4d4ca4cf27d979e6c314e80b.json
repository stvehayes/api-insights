{"ast":null,"code":"export function scrollIntoView(child, viewingArea, {\n  direction = 'vertical',\n  startMargin = 0,\n  endMargin = 0,\n  behavior = 'smooth'\n} = {}) {\n  const startSide = direction === 'vertical' ? 'top' : 'left';\n  const endSide = direction === 'vertical' ? 'bottom' : 'right';\n  const scrollSide = direction === 'vertical' ? 'scrollTop' : 'scrollLeft';\n  const {\n    [startSide]: childStart,\n    [endSide]: childEnd\n  } = child.getBoundingClientRect();\n  const {\n    [startSide]: viewingAreaStart,\n    [endSide]: viewingAreaEnd\n  } = viewingArea.getBoundingClientRect();\n  const isChildStartAboveViewingArea = childStart < viewingAreaStart + startMargin;\n  const isChildBottomBelowViewingArea = childEnd > viewingAreaEnd - endMargin;\n  if (isChildStartAboveViewingArea) {\n    const scrollHeightToChildStart = childStart - viewingAreaStart + viewingArea[scrollSide];\n    viewingArea.scrollTo({\n      behavior,\n      [startSide]: scrollHeightToChildStart - startMargin\n    });\n  } else if (isChildBottomBelowViewingArea) {\n    const scrollHeightToChildBottom = childEnd - viewingAreaEnd + viewingArea[scrollSide];\n    viewingArea.scrollTo({\n      behavior,\n      [startSide]: scrollHeightToChildBottom + endMargin\n    });\n  }\n}","map":{"version":3,"names":["scrollIntoView","child","viewingArea","direction","startMargin","endMargin","behavior","startSide","endSide","scrollSide","childStart","childEnd","getBoundingClientRect","viewingAreaStart","viewingAreaEnd","isChildStartAboveViewingArea","isChildBottomBelowViewingArea","scrollHeightToChildStart","scrollTo","scrollHeightToChildBottom"],"sources":["/Users/steve/Documents/repos/github/licensing/node_modules/@primer/behaviors/dist/esm/scroll-into-view.js"],"sourcesContent":["export function scrollIntoView(child, viewingArea, { direction = 'vertical', startMargin = 0, endMargin = 0, behavior = 'smooth' } = {}) {\n    const startSide = direction === 'vertical' ? 'top' : 'left';\n    const endSide = direction === 'vertical' ? 'bottom' : 'right';\n    const scrollSide = direction === 'vertical' ? 'scrollTop' : 'scrollLeft';\n    const { [startSide]: childStart, [endSide]: childEnd } = child.getBoundingClientRect();\n    const { [startSide]: viewingAreaStart, [endSide]: viewingAreaEnd } = viewingArea.getBoundingClientRect();\n    const isChildStartAboveViewingArea = childStart < viewingAreaStart + startMargin;\n    const isChildBottomBelowViewingArea = childEnd > viewingAreaEnd - endMargin;\n    if (isChildStartAboveViewingArea) {\n        const scrollHeightToChildStart = childStart - viewingAreaStart + viewingArea[scrollSide];\n        viewingArea.scrollTo({ behavior, [startSide]: scrollHeightToChildStart - startMargin });\n    }\n    else if (isChildBottomBelowViewingArea) {\n        const scrollHeightToChildBottom = childEnd - viewingAreaEnd + viewingArea[scrollSide];\n        viewingArea.scrollTo({ behavior, [startSide]: scrollHeightToChildBottom + endMargin });\n    }\n}\n"],"mappings":"AAAA,OAAO,SAASA,cAAcA,CAACC,KAAK,EAAEC,WAAW,EAAE;EAAEC,SAAS,GAAG,UAAU;EAAEC,WAAW,GAAG,CAAC;EAAEC,SAAS,GAAG,CAAC;EAAEC,QAAQ,GAAG;AAAS,CAAC,GAAG,CAAC,CAAC,EAAE;EACrI,MAAMC,SAAS,GAAGJ,SAAS,KAAK,UAAU,GAAG,KAAK,GAAG,MAAM;EAC3D,MAAMK,OAAO,GAAGL,SAAS,KAAK,UAAU,GAAG,QAAQ,GAAG,OAAO;EAC7D,MAAMM,UAAU,GAAGN,SAAS,KAAK,UAAU,GAAG,WAAW,GAAG,YAAY;EACxE,MAAM;IAAE,CAACI,SAAS,GAAGG,UAAU;IAAE,CAACF,OAAO,GAAGG;EAAS,CAAC,GAAGV,KAAK,CAACW,qBAAqB,CAAC,CAAC;EACtF,MAAM;IAAE,CAACL,SAAS,GAAGM,gBAAgB;IAAE,CAACL,OAAO,GAAGM;EAAe,CAAC,GAAGZ,WAAW,CAACU,qBAAqB,CAAC,CAAC;EACxG,MAAMG,4BAA4B,GAAGL,UAAU,GAAGG,gBAAgB,GAAGT,WAAW;EAChF,MAAMY,6BAA6B,GAAGL,QAAQ,GAAGG,cAAc,GAAGT,SAAS;EAC3E,IAAIU,4BAA4B,EAAE;IAC9B,MAAME,wBAAwB,GAAGP,UAAU,GAAGG,gBAAgB,GAAGX,WAAW,CAACO,UAAU,CAAC;IACxFP,WAAW,CAACgB,QAAQ,CAAC;MAAEZ,QAAQ;MAAE,CAACC,SAAS,GAAGU,wBAAwB,GAAGb;IAAY,CAAC,CAAC;EAC3F,CAAC,MACI,IAAIY,6BAA6B,EAAE;IACpC,MAAMG,yBAAyB,GAAGR,QAAQ,GAAGG,cAAc,GAAGZ,WAAW,CAACO,UAAU,CAAC;IACrFP,WAAW,CAACgB,QAAQ,CAAC;MAAEZ,QAAQ;MAAE,CAACC,SAAS,GAAGY,yBAAyB,GAAGd;IAAU,CAAC,CAAC;EAC1F;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}