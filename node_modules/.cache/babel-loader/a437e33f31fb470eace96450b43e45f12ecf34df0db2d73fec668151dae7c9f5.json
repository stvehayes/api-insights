{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { width } from 'styled-system';\nimport { get } from '../constants.js';\nimport sx from '../sx.js';\nimport { warning } from '../utils/warning.js';\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nconst shimmer = keyframes([\"from{mask-position:200%;}to{mask-position:0%;}\"]);\nconst Item = styled.span.withConfig({\n  displayName: \"ProgressBar__Item\",\n  componentId: \"sc-1jz8j7n-0\"\n})([\"width:\", \";background-color:\", \";@media (prefers-reduced-motion:no-preference){&[data-animated='true']{mask-image:linear-gradient(75deg,#000 30%,rgba(0,0,0,0.65) 80%);mask-size:200%;animation:\", \";animation-duration:1s;animation-iteration-count:infinite;}}\", \";\"], props => props.progress ? `${props.progress}%` : 0, get('colors.success.emphasis'), shimmer, sx);\nItem.displayName = 'ProgressBar.Item';\nconst sizeMap = {\n  small: '5px',\n  large: '10px',\n  default: '8px'\n};\nconst ProgressContainer = styled.span.withConfig({\n  displayName: \"ProgressBar__ProgressContainer\",\n  componentId: \"sc-1jz8j7n-1\"\n})([\"display:\", \";overflow:hidden;background-color:\", \";border-radius:\", \";height:\", \";\", \" \", \";\"], props => props.inline ? 'inline-flex' : 'flex', get('colors.border.default'), get('radii.1'), props => sizeMap[props.barSize || 'default'], width, sx);\nconst ProgressBar = /*#__PURE__*/forwardRef(({\n  animated,\n  progress,\n  bg = 'success.emphasis',\n  barSize = 'default',\n  children,\n  ...rest\n}, forwardRef) => {\n  if (children && progress) {\n    throw new Error('You should pass `progress` or children, not both.');\n  }\n  process.env.NODE_ENV !== \"production\" ? warning(children && typeof rest['aria-valuenow'] === 'undefined' && typeof rest['aria-valuetext'] === 'undefined', 'Expected `aria-valuenow` or `aria-valuetext` to be provided to <ProgressBar>. Provide one of these values so screen reader users can determine the current progress. This warning will become an error in the next major release.') : void 0;\n  const progressAsNumber = typeof progress === 'string' ? parseInt(progress, 10) : progress;\n  const ariaAttributes = {\n    'aria-valuenow': progressAsNumber ? Math.round(progressAsNumber) : undefined,\n    'aria-valuemin': 0,\n    'aria-valuemax': 100,\n    'aria-busy': progressAsNumber ? progressAsNumber !== 100 : false\n  };\n  return /*#__PURE__*/React.createElement(ProgressContainer, _extends({\n    ref: forwardRef,\n    role: \"progressbar\",\n    barSize: barSize\n  }, ariaAttributes, rest), children !== null && children !== void 0 ? children : /*#__PURE__*/React.createElement(Item, {\n    \"data-animated\": animated,\n    progress: progress,\n    sx: {\n      backgroundColor: bg\n    }\n  }));\n});\nProgressBar.displayName = 'ProgressBar';\nexport { Item, ProgressBar };","map":{"version":3,"names":["React","forwardRef","styled","keyframes","width","get","sx","warning","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","shimmer","Item","span","withConfig","displayName","componentId","props","progress","sizeMap","small","large","default","ProgressContainer","inline","barSize","ProgressBar","animated","bg","children","rest","Error","process","env","NODE_ENV","progressAsNumber","parseInt","ariaAttributes","Math","round","undefined","createElement","ref","role","backgroundColor"],"sources":["/Users/steve/Documents/repos/github/api-insights/node_modules/@primer/react/lib-esm/ProgressBar/ProgressBar.js"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { width } from 'styled-system';\nimport { get } from '../constants.js';\nimport sx from '../sx.js';\nimport { warning } from '../utils/warning.js';\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nconst shimmer = keyframes([\"from{mask-position:200%;}to{mask-position:0%;}\"]);\nconst Item = styled.span.withConfig({\n  displayName: \"ProgressBar__Item\",\n  componentId: \"sc-1jz8j7n-0\"\n})([\"width:\", \";background-color:\", \";@media (prefers-reduced-motion:no-preference){&[data-animated='true']{mask-image:linear-gradient(75deg,#000 30%,rgba(0,0,0,0.65) 80%);mask-size:200%;animation:\", \";animation-duration:1s;animation-iteration-count:infinite;}}\", \";\"], props => props.progress ? `${props.progress}%` : 0, get('colors.success.emphasis'), shimmer, sx);\nItem.displayName = 'ProgressBar.Item';\nconst sizeMap = {\n  small: '5px',\n  large: '10px',\n  default: '8px'\n};\nconst ProgressContainer = styled.span.withConfig({\n  displayName: \"ProgressBar__ProgressContainer\",\n  componentId: \"sc-1jz8j7n-1\"\n})([\"display:\", \";overflow:hidden;background-color:\", \";border-radius:\", \";height:\", \";\", \" \", \";\"], props => props.inline ? 'inline-flex' : 'flex', get('colors.border.default'), get('radii.1'), props => sizeMap[props.barSize || 'default'], width, sx);\nconst ProgressBar = /*#__PURE__*/forwardRef(({\n  animated,\n  progress,\n  bg = 'success.emphasis',\n  barSize = 'default',\n  children,\n  ...rest\n}, forwardRef) => {\n  if (children && progress) {\n    throw new Error('You should pass `progress` or children, not both.');\n  }\n  process.env.NODE_ENV !== \"production\" ? warning(children && typeof rest['aria-valuenow'] === 'undefined' && typeof rest['aria-valuetext'] === 'undefined', 'Expected `aria-valuenow` or `aria-valuetext` to be provided to <ProgressBar>. Provide one of these values so screen reader users can determine the current progress. This warning will become an error in the next major release.') : void 0;\n  const progressAsNumber = typeof progress === 'string' ? parseInt(progress, 10) : progress;\n  const ariaAttributes = {\n    'aria-valuenow': progressAsNumber ? Math.round(progressAsNumber) : undefined,\n    'aria-valuemin': 0,\n    'aria-valuemax': 100,\n    'aria-busy': progressAsNumber ? progressAsNumber !== 100 : false\n  };\n  return /*#__PURE__*/React.createElement(ProgressContainer, _extends({\n    ref: forwardRef,\n    role: \"progressbar\",\n    barSize: barSize\n  }, ariaAttributes, rest), children !== null && children !== void 0 ? children : /*#__PURE__*/React.createElement(Item, {\n    \"data-animated\": animated,\n    progress: progress,\n    sx: {\n      backgroundColor: bg\n    }\n  }));\n});\nProgressBar.displayName = 'ProgressBar';\n\nexport { Item, ProgressBar };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}