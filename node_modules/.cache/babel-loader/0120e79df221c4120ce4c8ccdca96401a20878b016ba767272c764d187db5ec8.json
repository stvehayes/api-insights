{"ast":null,"code":"var _jsxFileName = \"/Users/steve/Documents/repos/github/api-insights/src/components/Charts/LineChart/LineChart.js\";\nimport { Box } from '@primer/react';\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Data } from '../../../data/Data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function LineChart() {\n  const data = {\n    labels: Data.map(data => data.time),\n    datasets: [{\n      label: 'Requests',\n      data: Data.map(data => data.requests),\n      fill: true,\n      backgroundColor: 'rgba(45, 164, 78, 0.1)',\n      borderColor: '#2DA44E',\n      borderWidth: 1\n    }]\n  };\n  const options = {\n    maintainAspectRatio: false,\n    height: '340px',\n    responsive: true,\n    scales: {\n      y: {\n        beginAtZero: true,\n        ticks: {\n          callback: val => {\n            return val / 1000 + 'k';\n          }\n        }\n      },\n      x: {\n        grid: {\n          borderDash: [5, 5] // Set the border dash pattern to create dashed line\n        }\n      }\n    },\n    plugins: {\n      title: {\n        display: false,\n        text: 'Total requests made by this organization'\n      },\n      legend: {\n        display: false\n      },\n      datalabels: {\n        formatter: (value, context) => {\n          if (value > 1000) {\n            return value / 1000 + 'k';\n          }\n          return value;\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      position: 'relative',\n      height: '320px',\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: data,\n      options: {\n        maintainAspectRatio: false,\n        height: '340px',\n        responsive: true,\n        scales: {\n          y: {\n            beginAtZero: true,\n            ticks: {\n              callback: val => {\n                return val / 1000 + 'k';\n              }\n            }\n          },\n          x\n        },\n        plugins: {\n          title: {\n            display: false,\n            text: 'Total requests made by this organization'\n          },\n          legend: {\n            display: false\n          },\n          datalabels: {\n            formatter: (value, context) => {\n              if (value > 1000) {\n                return value / 1000 + 'k';\n              }\n              return value;\n            }\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_c = LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["Box","React","Line","Data","jsxDEV","_jsxDEV","LineChart","data","labels","map","time","datasets","label","requests","fill","backgroundColor","borderColor","borderWidth","options","maintainAspectRatio","height","responsive","scales","y","beginAtZero","ticks","callback","val","x","grid","borderDash","plugins","title","display","text","legend","datalabels","formatter","value","context","sx","position","width","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/steve/Documents/repos/github/api-insights/src/components/Charts/LineChart/LineChart.js"],"sourcesContent":["import { Box } from '@primer/react';\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Data } from '../../../data/Data';\n\nexport function LineChart() {\n  const data = {\n    labels: Data.map((data) => data.time),\n    datasets: [\n      {\n        label: 'Requests',\n        data: Data.map((data) => data.requests),\n        fill: true,\n        backgroundColor: 'rgba(45, 164, 78, 0.1)',\n        borderColor: '#2DA44E',\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const options = {\n    maintainAspectRatio: false,\n    height: '340px',\n    responsive: true,\n    scales: {\n      y: {\n        beginAtZero: true,\n        ticks: {\n          callback: (val) => {\n            return val / 1000 + 'k';\n          },\n        },\n      },\n      x: {\n        grid: {\n          borderDash: [5, 5], // Set the border dash pattern to create dashed line\n        },\n      },\n    },\n    plugins: {\n      title: {\n        display: false,\n        text: 'Total requests made by this organization',\n      },\n      legend: {\n        display: false,\n      },\n      datalabels: {\n        formatter: (value, context) => {\n          if (value > 1000) {\n            return value / 1000 + 'k';\n          }\n          return value;\n        },\n      },\n    },\n  };\n\n  return (\n    <Box\n      sx={{\n        position: 'relative',\n        height: '320px',\n        width: '100%',\n      }}\n    >\n      <Line\n        data={data}\n        options={{\n          maintainAspectRatio: false,\n          height: '340px',\n          responsive: true,\n          scales: {\n            y: {\n              beginAtZero: true,\n              ticks: {\n                callback: (val) => {\n                  return val / 1000 + 'k';\n                },\n              },\n            },\n            x,\n          },\n          plugins: {\n            title: {\n              display: false,\n              text: 'Total requests made by this organization',\n            },\n            legend: {\n              display: false,\n            },\n            datalabels: {\n              formatter: (value, context) => {\n                if (value > 1000) {\n                  return value / 1000 + 'k';\n                }\n                return value;\n              },\n            },\n          },\n        }}\n      />\n    </Box>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}