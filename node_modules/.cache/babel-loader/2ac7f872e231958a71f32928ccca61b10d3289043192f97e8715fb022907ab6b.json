{"ast":null,"code":"import React from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { TYPOGRAPHY, COMMON } from './constants.js';\nimport { useTheme } from './ThemeProvider.js';\nimport 'focus-visible';\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nconst GlobalStyle = createGlobalStyle([\"*{box-sizing:border-box;}body{margin:0;}table{border-collapse:collapse;}input{color-scheme:\", \";}[role=\\\"button\\\"]:focus:not(:focus-visible):not(.focus-visible),[role=\\\"tabpanel\\\"][tabindex=\\\"0\\\"]:focus:not(:focus-visible):not(.focus-visible),button:focus:not(:focus-visible):not(.focus-visible),summary:focus:not(:focus-visible):not(.focus-visible),a:focus:not(:focus-visible):not(.focus-visible){outline:none;box-shadow:none;}[tabindex=\\\"0\\\"]:focus:not(:focus-visible):not(.focus-visible),details-dialog:focus:not(:focus-visible):not(.focus-visible){outline:none;}\"], props => props.colorScheme);\nconst Base = styled.div.withConfig({\n  displayName: \"BaseStyles__Base\",\n  componentId: \"sc-nfjs56-0\"\n})([\"\", \";\", \";\"], TYPOGRAPHY, COMMON);\nfunction BaseStyles(props) {\n  const {\n    children,\n    color = 'fg.default',\n    fontFamily = 'normal',\n    lineHeight = 'default',\n    ...rest\n  } = props;\n  const {\n    colorScheme,\n    dayScheme,\n    nightScheme\n  } = useTheme();\n\n  /**\n   * We need to map valid primer/react color modes onto valid color modes for primer/primitives\n   * valid color modes for primer/primitives: auto | light | dark\n   * valid color modes for primer/primer: auto | day | night | light | dark\n   */\n\n  return /*#__PURE__*/React.createElement(Base, _extends({}, rest, {\n    color: color,\n    fontFamily: fontFamily,\n    lineHeight: lineHeight,\n    \"data-portal-root\": true,\n    \"data-color-mode\": colorScheme !== null && colorScheme !== void 0 && colorScheme.includes('dark') ? 'dark' : 'light',\n    \"data-light-theme\": dayScheme,\n    \"data-dark-theme\": nightScheme\n  }), /*#__PURE__*/React.createElement(GlobalStyle, {\n    colorScheme: colorScheme !== null && colorScheme !== void 0 && colorScheme.includes('dark') ? 'dark' : 'light'\n  }), children);\n}\nBaseStyles.displayName = \"BaseStyles\";\nexport { BaseStyles as default };","map":{"version":3,"names":["React","styled","createGlobalStyle","TYPOGRAPHY","COMMON","useTheme","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","GlobalStyle","props","colorScheme","Base","div","withConfig","displayName","componentId","BaseStyles","children","color","fontFamily","lineHeight","rest","dayScheme","nightScheme","createElement","includes","default"],"sources":["/Users/steve/Documents/repos/github/api-insights/node_modules/@primer/react/lib-esm/BaseStyles.js"],"sourcesContent":["import React from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { TYPOGRAPHY, COMMON } from './constants.js';\nimport { useTheme } from './ThemeProvider.js';\nimport 'focus-visible';\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nconst GlobalStyle = createGlobalStyle([\"*{box-sizing:border-box;}body{margin:0;}table{border-collapse:collapse;}input{color-scheme:\", \";}[role=\\\"button\\\"]:focus:not(:focus-visible):not(.focus-visible),[role=\\\"tabpanel\\\"][tabindex=\\\"0\\\"]:focus:not(:focus-visible):not(.focus-visible),button:focus:not(:focus-visible):not(.focus-visible),summary:focus:not(:focus-visible):not(.focus-visible),a:focus:not(:focus-visible):not(.focus-visible){outline:none;box-shadow:none;}[tabindex=\\\"0\\\"]:focus:not(:focus-visible):not(.focus-visible),details-dialog:focus:not(:focus-visible):not(.focus-visible){outline:none;}\"], props => props.colorScheme);\nconst Base = styled.div.withConfig({\n  displayName: \"BaseStyles__Base\",\n  componentId: \"sc-nfjs56-0\"\n})([\"\", \";\", \";\"], TYPOGRAPHY, COMMON);\nfunction BaseStyles(props) {\n  const {\n    children,\n    color = 'fg.default',\n    fontFamily = 'normal',\n    lineHeight = 'default',\n    ...rest\n  } = props;\n  const {\n    colorScheme,\n    dayScheme,\n    nightScheme\n  } = useTheme();\n\n  /**\n   * We need to map valid primer/react color modes onto valid color modes for primer/primitives\n   * valid color modes for primer/primitives: auto | light | dark\n   * valid color modes for primer/primer: auto | day | night | light | dark\n   */\n\n  return /*#__PURE__*/React.createElement(Base, _extends({}, rest, {\n    color: color,\n    fontFamily: fontFamily,\n    lineHeight: lineHeight,\n    \"data-portal-root\": true,\n    \"data-color-mode\": colorScheme !== null && colorScheme !== void 0 && colorScheme.includes('dark') ? 'dark' : 'light',\n    \"data-light-theme\": dayScheme,\n    \"data-dark-theme\": nightScheme\n  }), /*#__PURE__*/React.createElement(GlobalStyle, {\n    colorScheme: colorScheme !== null && colorScheme !== void 0 && colorScheme.includes('dark') ? 'dark' : 'light'\n  }), children);\n}\nBaseStyles.displayName = \"BaseStyles\";\n\nexport { BaseStyles as default };\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,IAAIC,iBAAiB,QAAQ,mBAAmB;AAC7D,SAASC,UAAU,EAAEC,MAAM,QAAQ,gBAAgB;AACnD,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,OAAO,eAAe;AAEtB,SAASC,QAAQA,CAAA,EAAG;EAAEA,QAAQ,GAAGC,MAAM,CAACC,MAAM,GAAGD,MAAM,CAACC,MAAM,CAACC,IAAI,CAAC,CAAC,GAAG,UAAUC,MAAM,EAAE;IAAE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;MAAE,IAAIG,MAAM,GAAGF,SAAS,CAACD,CAAC,CAAC;MAAE,KAAK,IAAII,GAAG,IAAID,MAAM,EAAE;QAAE,IAAIP,MAAM,CAACS,SAAS,CAACC,cAAc,CAACC,IAAI,CAACJ,MAAM,EAAEC,GAAG,CAAC,EAAE;UAAEL,MAAM,CAACK,GAAG,CAAC,GAAGD,MAAM,CAACC,GAAG,CAAC;QAAE;MAAE;IAAE;IAAE,OAAOL,MAAM;EAAE,CAAC;EAAE,OAAOJ,QAAQ,CAACa,KAAK,CAAC,IAAI,EAAEP,SAAS,CAAC;AAAE;AAClV,MAAMQ,WAAW,GAAGlB,iBAAiB,CAAC,CAAC,6FAA6F,EAAE,ydAAyd,CAAC,EAAEmB,KAAK,IAAIA,KAAK,CAACC,WAAW,CAAC;AAC7nB,MAAMC,IAAI,GAAGtB,MAAM,CAACuB,GAAG,CAACC,UAAU,CAAC;EACjCC,WAAW,EAAE,kBAAkB;EAC/BC,WAAW,EAAE;AACf,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EAAExB,UAAU,EAAEC,MAAM,CAAC;AACtC,SAASwB,UAAUA,CAACP,KAAK,EAAE;EACzB,MAAM;IACJQ,QAAQ;IACRC,KAAK,GAAG,YAAY;IACpBC,UAAU,GAAG,QAAQ;IACrBC,UAAU,GAAG,SAAS;IACtB,GAAGC;EACL,CAAC,GAAGZ,KAAK;EACT,MAAM;IACJC,WAAW;IACXY,SAAS;IACTC;EACF,CAAC,GAAG9B,QAAQ,CAAC,CAAC;;EAEd;AACF;AACA;AACA;AACA;;EAEE,OAAO,aAAaL,KAAK,CAACoC,aAAa,CAACb,IAAI,EAAEjB,QAAQ,CAAC,CAAC,CAAC,EAAE2B,IAAI,EAAE;IAC/DH,KAAK,EAAEA,KAAK;IACZC,UAAU,EAAEA,UAAU;IACtBC,UAAU,EAAEA,UAAU;IACtB,kBAAkB,EAAE,IAAI;IACxB,iBAAiB,EAAEV,WAAW,KAAK,IAAI,IAAIA,WAAW,KAAK,KAAK,CAAC,IAAIA,WAAW,CAACe,QAAQ,CAAC,MAAM,CAAC,GAAG,MAAM,GAAG,OAAO;IACpH,kBAAkB,EAAEH,SAAS;IAC7B,iBAAiB,EAAEC;EACrB,CAAC,CAAC,EAAE,aAAanC,KAAK,CAACoC,aAAa,CAAChB,WAAW,EAAE;IAChDE,WAAW,EAAEA,WAAW,KAAK,IAAI,IAAIA,WAAW,KAAK,KAAK,CAAC,IAAIA,WAAW,CAACe,QAAQ,CAAC,MAAM,CAAC,GAAG,MAAM,GAAG;EACzG,CAAC,CAAC,EAAER,QAAQ,CAAC;AACf;AACAD,UAAU,CAACF,WAAW,GAAG,YAAY;AAErC,SAASE,UAAU,IAAIU,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}