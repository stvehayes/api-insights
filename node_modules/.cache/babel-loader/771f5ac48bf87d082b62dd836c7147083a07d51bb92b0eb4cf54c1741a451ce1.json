{"ast":null,"code":"import { subscribe } from '@github/paste-markdown';\nimport React, { forwardRef, useState, useMemo, useRef, useEffect } from 'react';\nimport { useDynamicTextareaHeight } from '../hooks/useDynamicTextareaHeight.js';\nimport InlineAutocomplete from '../InlineAutocomplete/InlineAutocomplete.js';\nimport Textarea from '../../Textarea/Textarea.js';\nimport { useEmojiSuggestions } from './suggestions/_useEmojiSuggestions.js';\nimport { useMentionSuggestions } from './suggestions/_useMentionSuggestions.js';\nimport { useReferenceSuggestions } from './suggestions/_useReferenceSuggestions.js';\nimport '@primer/behaviors/utils';\nimport '@primer/behaviors';\nimport { useRefObjectAsForwardedRef } from '../../hooks/useRefObjectAsForwardedRef.js';\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nconst emptyArray = []; // constant reference to avoid re-running effects\n\nconst MarkdownInput = /*#__PURE__*/forwardRef(({\n  value,\n  onChange,\n  disabled,\n  placeholder,\n  id,\n  maxLength,\n  onKeyDown,\n  fullHeight,\n  isDraggedOver,\n  emojiSuggestions,\n  mentionSuggestions,\n  referenceSuggestions,\n  minHeightLines,\n  maxHeightLines,\n  visible,\n  monospace,\n  pasteUrlsAsPlainText,\n  ...props\n}, forwardedRef) => {\n  const [suggestions, setSuggestions] = useState(null);\n  const [event, setEvent] = useState(null);\n  const {\n    trigger: emojiTrigger,\n    calculateSuggestions: calculateEmojiSuggestions\n  } = useEmojiSuggestions(emojiSuggestions !== null && emojiSuggestions !== void 0 ? emojiSuggestions : emptyArray);\n  const {\n    trigger: mentionsTrigger,\n    calculateSuggestions: calculateMentionSuggestions\n  } = useMentionSuggestions(mentionSuggestions !== null && mentionSuggestions !== void 0 ? mentionSuggestions : emptyArray);\n  const {\n    trigger: referencesTrigger,\n    calculateSuggestions: calculateReferenceSuggestions\n  } = useReferenceSuggestions(referenceSuggestions !== null && referenceSuggestions !== void 0 ? referenceSuggestions : emptyArray);\n  const triggers = useMemo(() => [mentionsTrigger, referencesTrigger, emojiTrigger], [mentionsTrigger, referencesTrigger, emojiTrigger]);\n  const lastEventRef = useRef(null);\n  const onHideSuggestions = () => {\n    setEvent(null);\n    setSuggestions(null); // the effect would do this anyway, but this allows React to batch the update\n  };\n\n  // running the calculation in an effect (rather than in the onShowSuggestions handler) allows us\n  // to automatically recalculate if the suggestions change while the menu is open\n  useEffect(() => {\n    if (!event) {\n      setSuggestions(null);\n      return;\n    }\n    (async function () {\n      lastEventRef.current = event;\n      setSuggestions('loading');\n      if (event.trigger.triggerChar === emojiTrigger.triggerChar) {\n        setSuggestions(await calculateEmojiSuggestions(event.query));\n      } else if (event.trigger.triggerChar === mentionsTrigger.triggerChar) {\n        setSuggestions(await calculateMentionSuggestions(event.query));\n      } else if (event.trigger.triggerChar === referencesTrigger.triggerChar) {\n        setSuggestions(await calculateReferenceSuggestions(event.query));\n      }\n    })();\n  }, [event, calculateEmojiSuggestions, calculateMentionSuggestions, calculateReferenceSuggestions,\n  // The triggers never actually change because they are statically defined\n  emojiTrigger, mentionsTrigger, referencesTrigger]);\n  const ref = useRef(null);\n  useRefObjectAsForwardedRef(forwardedRef, ref);\n  useEffect(() => {\n    const subscription = ref.current && subscribe(ref.current, {\n      defaultPlainTextPaste: {\n        urlLinks: pasteUrlsAsPlainText\n      }\n    });\n    return subscription === null || subscription === void 0 ? void 0 : subscription.unsubscribe;\n  }, [pasteUrlsAsPlainText]);\n  const heightStyles = useDynamicTextareaHeight({\n    // if fullHeight is enabled, there is no need to compute a dynamic height (for perfs reasons)\n    disabled: fullHeight,\n    maxHeightLines,\n    minHeightLines,\n    elementRef: ref,\n    value\n  });\n  return /*#__PURE__*/React.createElement(InlineAutocomplete, {\n    triggers: triggers,\n    suggestions: suggestions,\n    onShowSuggestions: setEvent,\n    onHideSuggestions: onHideSuggestions,\n    sx: {\n      flex: 'auto'\n    },\n    tabInsertsSuggestions: true\n  }, /*#__PURE__*/React.createElement(Textarea, _extends({\n    id: id,\n    ref: ref,\n    placeholder: placeholder,\n    maxLength: maxLength,\n    value: value,\n    onKeyDown: onKeyDown,\n    disabled: disabled,\n    \"aria-label\": \"Markdown value\",\n    onChange: onChange,\n    sx: {\n      borderStyle: 'none',\n      boxShadow: 'none',\n      height: fullHeight ? '100%' : undefined,\n      outline: theme => {\n        return isDraggedOver ? `dashed 2px ${theme.colors.border.muted}` : undefined;\n      },\n      outlineOffset: '-4px',\n      display: visible ? undefined : 'none',\n      '&: focus-within': {\n        boxShadow: 'none',\n        outline: 'none'\n      },\n      '& textarea': {\n        lineHeight: 'var(--text-body-lineHeight-medium, 1.4285)',\n        resize: fullHeight ? 'none' : 'vertical',\n        p: 3,\n        fontFamily: monospace ? 'mono' : 'normal',\n        ...heightStyles\n      }\n    }\n  }, props)));\n});\nMarkdownInput.displayName = 'MarkdownInput';\nexport { MarkdownInput };","map":{"version":3,"names":["subscribe","React","forwardRef","useState","useMemo","useRef","useEffect","useDynamicTextareaHeight","InlineAutocomplete","Textarea","useEmojiSuggestions","useMentionSuggestions","useReferenceSuggestions","useRefObjectAsForwardedRef","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","emptyArray","MarkdownInput","value","onChange","disabled","placeholder","id","maxLength","onKeyDown","fullHeight","isDraggedOver","emojiSuggestions","mentionSuggestions","referenceSuggestions","minHeightLines","maxHeightLines","visible","monospace","pasteUrlsAsPlainText","props","forwardedRef","suggestions","setSuggestions","event","setEvent","trigger","emojiTrigger","calculateSuggestions","calculateEmojiSuggestions","mentionsTrigger","calculateMentionSuggestions","referencesTrigger","calculateReferenceSuggestions","triggers","lastEventRef","onHideSuggestions","current","triggerChar","query","ref","subscription","defaultPlainTextPaste","urlLinks","unsubscribe","heightStyles","elementRef","createElement","onShowSuggestions","sx","flex","tabInsertsSuggestions","borderStyle","boxShadow","height","undefined","outline","theme","colors","border","muted","outlineOffset","display","lineHeight","resize","p","fontFamily","displayName"],"sources":["/Users/steve/Documents/repos/github/api-insights/node_modules/@primer/react/lib-esm/drafts/MarkdownEditor/_MarkdownInput.js"],"sourcesContent":["import { subscribe } from '@github/paste-markdown';\nimport React, { forwardRef, useState, useMemo, useRef, useEffect } from 'react';\nimport { useDynamicTextareaHeight } from '../hooks/useDynamicTextareaHeight.js';\nimport InlineAutocomplete from '../InlineAutocomplete/InlineAutocomplete.js';\nimport Textarea from '../../Textarea/Textarea.js';\nimport { useEmojiSuggestions } from './suggestions/_useEmojiSuggestions.js';\nimport { useMentionSuggestions } from './suggestions/_useMentionSuggestions.js';\nimport { useReferenceSuggestions } from './suggestions/_useReferenceSuggestions.js';\nimport '@primer/behaviors/utils';\nimport '@primer/behaviors';\nimport { useRefObjectAsForwardedRef } from '../../hooks/useRefObjectAsForwardedRef.js';\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nconst emptyArray = []; // constant reference to avoid re-running effects\n\nconst MarkdownInput = /*#__PURE__*/forwardRef(({\n  value,\n  onChange,\n  disabled,\n  placeholder,\n  id,\n  maxLength,\n  onKeyDown,\n  fullHeight,\n  isDraggedOver,\n  emojiSuggestions,\n  mentionSuggestions,\n  referenceSuggestions,\n  minHeightLines,\n  maxHeightLines,\n  visible,\n  monospace,\n  pasteUrlsAsPlainText,\n  ...props\n}, forwardedRef) => {\n  const [suggestions, setSuggestions] = useState(null);\n  const [event, setEvent] = useState(null);\n  const {\n    trigger: emojiTrigger,\n    calculateSuggestions: calculateEmojiSuggestions\n  } = useEmojiSuggestions(emojiSuggestions !== null && emojiSuggestions !== void 0 ? emojiSuggestions : emptyArray);\n  const {\n    trigger: mentionsTrigger,\n    calculateSuggestions: calculateMentionSuggestions\n  } = useMentionSuggestions(mentionSuggestions !== null && mentionSuggestions !== void 0 ? mentionSuggestions : emptyArray);\n  const {\n    trigger: referencesTrigger,\n    calculateSuggestions: calculateReferenceSuggestions\n  } = useReferenceSuggestions(referenceSuggestions !== null && referenceSuggestions !== void 0 ? referenceSuggestions : emptyArray);\n  const triggers = useMemo(() => [mentionsTrigger, referencesTrigger, emojiTrigger], [mentionsTrigger, referencesTrigger, emojiTrigger]);\n  const lastEventRef = useRef(null);\n  const onHideSuggestions = () => {\n    setEvent(null);\n    setSuggestions(null); // the effect would do this anyway, but this allows React to batch the update\n  };\n\n  // running the calculation in an effect (rather than in the onShowSuggestions handler) allows us\n  // to automatically recalculate if the suggestions change while the menu is open\n  useEffect(() => {\n    if (!event) {\n      setSuggestions(null);\n      return;\n    }\n    (async function () {\n      lastEventRef.current = event;\n      setSuggestions('loading');\n      if (event.trigger.triggerChar === emojiTrigger.triggerChar) {\n        setSuggestions(await calculateEmojiSuggestions(event.query));\n      } else if (event.trigger.triggerChar === mentionsTrigger.triggerChar) {\n        setSuggestions(await calculateMentionSuggestions(event.query));\n      } else if (event.trigger.triggerChar === referencesTrigger.triggerChar) {\n        setSuggestions(await calculateReferenceSuggestions(event.query));\n      }\n    })();\n  }, [event, calculateEmojiSuggestions, calculateMentionSuggestions, calculateReferenceSuggestions,\n  // The triggers never actually change because they are statically defined\n  emojiTrigger, mentionsTrigger, referencesTrigger]);\n  const ref = useRef(null);\n  useRefObjectAsForwardedRef(forwardedRef, ref);\n  useEffect(() => {\n    const subscription = ref.current && subscribe(ref.current, {\n      defaultPlainTextPaste: {\n        urlLinks: pasteUrlsAsPlainText\n      }\n    });\n    return subscription === null || subscription === void 0 ? void 0 : subscription.unsubscribe;\n  }, [pasteUrlsAsPlainText]);\n  const heightStyles = useDynamicTextareaHeight({\n    // if fullHeight is enabled, there is no need to compute a dynamic height (for perfs reasons)\n    disabled: fullHeight,\n    maxHeightLines,\n    minHeightLines,\n    elementRef: ref,\n    value\n  });\n  return /*#__PURE__*/React.createElement(InlineAutocomplete, {\n    triggers: triggers,\n    suggestions: suggestions,\n    onShowSuggestions: setEvent,\n    onHideSuggestions: onHideSuggestions,\n    sx: {\n      flex: 'auto'\n    },\n    tabInsertsSuggestions: true\n  }, /*#__PURE__*/React.createElement(Textarea, _extends({\n    id: id,\n    ref: ref,\n    placeholder: placeholder,\n    maxLength: maxLength,\n    value: value,\n    onKeyDown: onKeyDown,\n    disabled: disabled,\n    \"aria-label\": \"Markdown value\",\n    onChange: onChange,\n    sx: {\n      borderStyle: 'none',\n      boxShadow: 'none',\n      height: fullHeight ? '100%' : undefined,\n      outline: theme => {\n        return isDraggedOver ? `dashed 2px ${theme.colors.border.muted}` : undefined;\n      },\n      outlineOffset: '-4px',\n      display: visible ? undefined : 'none',\n      '&: focus-within': {\n        boxShadow: 'none',\n        outline: 'none'\n      },\n      '& textarea': {\n        lineHeight: 'var(--text-body-lineHeight-medium, 1.4285)',\n        resize: fullHeight ? 'none' : 'vertical',\n        p: 3,\n        fontFamily: monospace ? 'mono' : 'normal',\n        ...heightStyles\n      }\n    }\n  }, props)));\n});\nMarkdownInput.displayName = 'MarkdownInput';\n\nexport { MarkdownInput };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}