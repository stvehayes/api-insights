{"ast":null,"code":"function insertText(textarea, text) {\n  var _a, _b, _c;\n  const before = textarea.value.slice(0, (_a = textarea.selectionStart) !== null && _a !== void 0 ? _a : undefined);\n  const after = textarea.value.slice((_b = textarea.selectionEnd) !== null && _b !== void 0 ? _b : undefined);\n  let canInsertText = true;\n  textarea.contentEditable = 'true';\n  try {\n    canInsertText = document.execCommand('insertText', false, text);\n  } catch (error) {\n    canInsertText = false;\n  }\n  textarea.contentEditable = 'false';\n  if (canInsertText && !textarea.value.slice(0, (_c = textarea.selectionStart) !== null && _c !== void 0 ? _c : undefined).endsWith(text)) {\n    canInsertText = false;\n  }\n  if (!canInsertText) {\n    try {\n      document.execCommand('ms-beginUndoUnit');\n    } catch (e) {}\n    textarea.value = before + text + after;\n    try {\n      document.execCommand('ms-endUndoUnit');\n    } catch (e) {}\n    textarea.dispatchEvent(new CustomEvent('change', {\n      bubbles: true,\n      cancelable: true\n    }));\n  }\n}\nconst skipFormattingMap = new WeakMap();\nfunction setSkipFormattingFlag(event) {\n  const {\n    currentTarget: el\n  } = event;\n  const isSkipFormattingKeys = event.code === 'KeyV' && (event.ctrlKey || event.metaKey) && event.shiftKey;\n  if (isSkipFormattingKeys || isSkipFormattingKeys && event.altKey) {\n    skipFormattingMap.set(el, true);\n  }\n}\nfunction unsetSkipFormattedFlag(event) {\n  const {\n    currentTarget: el\n  } = event;\n  skipFormattingMap.delete(el);\n}\nfunction shouldSkipFormatting(el) {\n  var _a;\n  const shouldSkipFormattingState = (_a = skipFormattingMap.get(el)) !== null && _a !== void 0 ? _a : false;\n  return shouldSkipFormattingState;\n}\nfunction installAround(el, installCallbacks, optionConfig) {\n  el.addEventListener('keydown', setSkipFormattingFlag);\n  for (const installCallback of installCallbacks) {\n    installCallback(el, optionConfig);\n  }\n  el.addEventListener('paste', unsetSkipFormattedFlag);\n}\nfunction uninstall$5(el) {\n  el.removeEventListener('keydown', setSkipFormattingFlag);\n  el.removeEventListener('paste', unsetSkipFormattedFlag);\n}\nfunction install$4(el) {\n  el.addEventListener('paste', onPaste$4);\n}\nfunction uninstall$4(el) {\n  el.removeEventListener('paste', onPaste$4);\n}\nfunction onPaste$4(event) {\n  const transfer = event.clipboardData;\n  const {\n    currentTarget: el\n  } = event;\n  if (shouldSkipFormatting(el)) return;\n  if (!transfer || !hasHTML(transfer)) return;\n  const field = event.currentTarget;\n  if (!(field instanceof HTMLTextAreaElement)) return;\n  if (isWithinUserMention(field)) {\n    return;\n  }\n  let plaintext = transfer.getData('text/plain');\n  const textHTML = transfer.getData('text/html');\n  const textHTMLClean = textHTML.replace(/\\u00A0/g, ' ').replace(/\\uC2A0/g, ' ');\n  if (!textHTML) return;\n  plaintext = plaintext.trim();\n  if (!plaintext) return;\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(textHTMLClean, 'text/html');\n  const walker = doc.createTreeWalker(doc.body, NodeFilter.SHOW_ELEMENT, node => node.parentNode && isLink(node.parentNode) ? NodeFilter.FILTER_REJECT : NodeFilter.FILTER_ACCEPT);\n  const markdown = convertToMarkdown(plaintext, walker);\n  if (markdown === plaintext) return;\n  event.stopPropagation();\n  event.preventDefault();\n  insertText(field, markdown);\n}\nfunction convertToMarkdown(plaintext, walker) {\n  var _a;\n  let currentNode = walker.firstChild();\n  let markdown = plaintext;\n  let markdownIgnoreBeforeIndex = 0;\n  let index = 0;\n  const NODE_LIMIT = 10000;\n  while (currentNode && index < NODE_LIMIT) {\n    index++;\n    const text = isLink(currentNode) ? (currentNode.textContent || '').replace(/[\\t\\n\\r ]+/g, ' ') : ((_a = currentNode.firstChild) === null || _a === void 0 ? void 0 : _a.wholeText) || '';\n    if (isEmptyString(text)) {\n      currentNode = walker.nextNode();\n      continue;\n    }\n    const markdownFoundIndex = markdown.indexOf(text, markdownIgnoreBeforeIndex);\n    if (markdownFoundIndex >= 0) {\n      if (isLink(currentNode)) {\n        const markdownLink = linkify$2(currentNode, text);\n        markdown = markdown.slice(0, markdownFoundIndex) + markdownLink + markdown.slice(markdownFoundIndex + text.length);\n        markdownIgnoreBeforeIndex = markdownFoundIndex + markdownLink.length;\n      } else {\n        markdownIgnoreBeforeIndex = markdownFoundIndex + text.length;\n      }\n    }\n    currentNode = walker.nextNode();\n  }\n  return index === NODE_LIMIT ? plaintext : markdown;\n}\nfunction isWithinUserMention(textarea) {\n  const selectionStart = textarea.selectionStart || 0;\n  if (selectionStart === 0) {\n    return false;\n  }\n  const previousChar = textarea.value.substring(selectionStart - 1, selectionStart);\n  return previousChar === '@';\n}\nfunction isEmptyString(text) {\n  return !text || (text === null || text === void 0 ? void 0 : text.trim().length) === 0;\n}\nfunction isLink(node) {\n  var _a;\n  return ((_a = node.tagName) === null || _a === void 0 ? void 0 : _a.toLowerCase()) === 'a' && node.hasAttribute('href');\n}\nfunction hasHTML(transfer) {\n  return transfer.types.includes('text/html');\n}\nfunction linkify$2(element, label) {\n  const url = element.href || '';\n  let markdown = '';\n  if (isUserMention(element)) {\n    markdown = label;\n  } else if (isSpecialLink(element) || areEqualLinks(url, label)) {\n    markdown = url;\n  } else {\n    markdown = `[${label}](${url})`;\n  }\n  return markdown;\n}\nfunction isSpecialLink(link) {\n  return link.className.indexOf('commit-link') >= 0 || !!link.getAttribute('data-hovercard-type') && link.getAttribute('data-hovercard-type') !== 'user';\n}\nfunction areEqualLinks(link1, link2) {\n  link1 = link1.slice(-1) === '/' ? link1.slice(0, -1) : link1;\n  link2 = link2.slice(-1) === '/' ? link2.slice(0, -1) : link2;\n  return link1.toLowerCase() === link2.toLowerCase();\n}\nfunction isUserMention(link) {\n  var _a;\n  return ((_a = link.textContent) === null || _a === void 0 ? void 0 : _a.slice(0, 1)) === '@' && link.getAttribute('data-hovercard-type') === 'user';\n}\nfunction install$3(el) {\n  el.addEventListener('dragover', onDragover$1);\n  el.addEventListener('drop', onDrop$1);\n  el.addEventListener('paste', onPaste$3);\n}\nfunction uninstall$3(el) {\n  el.removeEventListener('dragover', onDragover$1);\n  el.removeEventListener('drop', onDrop$1);\n  el.removeEventListener('paste', onPaste$3);\n}\nfunction onDrop$1(event) {\n  const transfer = event.dataTransfer;\n  if (!transfer) return;\n  if (hasFile$1(transfer)) return;\n  if (!hasLink(transfer)) return;\n  const links = extractLinks(transfer);\n  if (!links.some(isImageLink)) return;\n  event.stopPropagation();\n  event.preventDefault();\n  const field = event.currentTarget;\n  if (!(field instanceof HTMLTextAreaElement)) return;\n  insertText(field, links.map(linkify$1).join(''));\n}\nfunction onDragover$1(event) {\n  const transfer = event.dataTransfer;\n  if (transfer) transfer.dropEffect = 'link';\n}\nfunction onPaste$3(event) {\n  const {\n    currentTarget: el\n  } = event;\n  if (shouldSkipFormatting(el)) return;\n  const transfer = event.clipboardData;\n  if (!transfer || !hasLink(transfer)) return;\n  const links = extractLinks(transfer);\n  if (!links.some(isImageLink)) return;\n  event.stopPropagation();\n  event.preventDefault();\n  const field = event.currentTarget;\n  if (!(field instanceof HTMLTextAreaElement)) return;\n  insertText(field, links.map(linkify$1).join(''));\n}\nfunction linkify$1(link) {\n  return isImageLink(link) ? `\\n![](${link})\\n` : link;\n}\nfunction hasFile$1(transfer) {\n  return Array.from(transfer.types).indexOf('Files') >= 0;\n}\nfunction hasLink(transfer) {\n  return Array.from(transfer.types).indexOf('text/uri-list') >= 0;\n}\nfunction extractLinks(transfer) {\n  return (transfer.getData('text/uri-list') || '').split('\\r\\n');\n}\nconst IMAGE_RE = /\\.(gif|png|jpe?g)$/i;\nfunction isImageLink(url) {\n  return IMAGE_RE.test(url);\n}\nconst pasteLinkAsPlainTextOverSelectedTextMap = new WeakMap();\nfunction install$2(el, optionConfig) {\n  var _a;\n  pasteLinkAsPlainTextOverSelectedTextMap.set(el, ((_a = optionConfig === null || optionConfig === void 0 ? void 0 : optionConfig.defaultPlainTextPaste) === null || _a === void 0 ? void 0 : _a.urlLinks) === true);\n  el.addEventListener('paste', onPaste$2);\n}\nfunction uninstall$2(el) {\n  el.removeEventListener('paste', onPaste$2);\n}\nfunction onPaste$2(event) {\n  var _a;\n  const {\n    currentTarget: el\n  } = event;\n  const element = el;\n  const shouldPasteAsPlainText = (_a = pasteLinkAsPlainTextOverSelectedTextMap.get(element)) !== null && _a !== void 0 ? _a : false;\n  const shouldSkipDefaultBehavior = shouldSkipFormatting(element);\n  if (!shouldPasteAsPlainText && shouldSkipDefaultBehavior || shouldPasteAsPlainText && !shouldSkipDefaultBehavior) {\n    return;\n  }\n  const transfer = event.clipboardData;\n  if (!transfer || !hasPlainText(transfer)) return;\n  const field = event.currentTarget;\n  if (!(field instanceof HTMLTextAreaElement)) return;\n  const text = transfer.getData('text/plain');\n  if (!text) return;\n  if (!isURL(text)) return;\n  if (isWithinLink(field)) return;\n  const selectedText = field.value.substring(field.selectionStart, field.selectionEnd);\n  if (!selectedText.length) return;\n  if (isURL(selectedText.trim())) return;\n  event.stopPropagation();\n  event.preventDefault();\n  insertText(field, linkify(selectedText, text.trim()));\n}\nfunction hasPlainText(transfer) {\n  return Array.from(transfer.types).includes('text/plain');\n}\nfunction isWithinLink(textarea) {\n  const selectionStart = textarea.selectionStart || 0;\n  if (selectionStart > 1) {\n    const previousChars = textarea.value.substring(selectionStart - 2, selectionStart);\n    return previousChars === '](';\n  } else {\n    return false;\n  }\n}\nfunction linkify(selectedText, text) {\n  return `[${selectedText}](${text})`;\n}\nfunction isURL(url) {\n  try {\n    const parsedURL = new URL(url);\n    return removeTrailingSlash(parsedURL.href).trim() === removeTrailingSlash(url).trim();\n  } catch (_a) {\n    return false;\n  }\n}\nfunction removeTrailingSlash(url) {\n  return url.endsWith('/') ? url.slice(0, url.length - 1) : url;\n}\nfunction install$1(el) {\n  el.addEventListener('dragover', onDragover);\n  el.addEventListener('drop', onDrop);\n  el.addEventListener('paste', onPaste$1);\n}\nfunction uninstall$1(el) {\n  el.removeEventListener('dragover', onDragover);\n  el.removeEventListener('drop', onDrop);\n  el.removeEventListener('paste', onPaste$1);\n}\nfunction onDrop(event) {\n  const transfer = event.dataTransfer;\n  if (!transfer) return;\n  if (hasFile(transfer)) return;\n  const textToPaste = generateText(transfer);\n  if (!textToPaste) return;\n  event.stopPropagation();\n  event.preventDefault();\n  const field = event.currentTarget;\n  if (field instanceof HTMLTextAreaElement) {\n    insertText(field, textToPaste);\n  }\n}\nfunction onDragover(event) {\n  const transfer = event.dataTransfer;\n  if (transfer) transfer.dropEffect = 'copy';\n}\nfunction onPaste$1(event) {\n  const {\n    currentTarget: el\n  } = event;\n  if (shouldSkipFormatting(el)) return;\n  if (!event.clipboardData) return;\n  const textToPaste = generateText(event.clipboardData);\n  if (!textToPaste) return;\n  event.stopPropagation();\n  event.preventDefault();\n  const field = event.currentTarget;\n  if (field instanceof HTMLTextAreaElement) {\n    insertText(field, textToPaste);\n  }\n}\nfunction hasFile(transfer) {\n  return Array.from(transfer.types).indexOf('Files') >= 0;\n}\nfunction columnText(column) {\n  const noBreakSpace = '\\u00A0';\n  const text = (column.textContent || '').trim().replace(/\\|/g, '\\\\|').replace(/\\n/g, ' ');\n  return text || noBreakSpace;\n}\nfunction tableHeaders(row) {\n  return Array.from(row.querySelectorAll('td, th')).map(columnText);\n}\nfunction tableMarkdown(node) {\n  const rows = Array.from(node.querySelectorAll('tr'));\n  const firstRow = rows.shift();\n  if (!firstRow) return '';\n  const headers = tableHeaders(firstRow);\n  const spacers = headers.map(() => '--');\n  const header = `${headers.join(' | ')}\\n${spacers.join(' | ')}\\n`;\n  const body = rows.map(row => {\n    return Array.from(row.querySelectorAll('td')).map(columnText).join(' | ');\n  }).join('\\n');\n  return `\\n${header}${body}\\n\\n`;\n}\nfunction generateText(transfer) {\n  if (Array.from(transfer.types).indexOf('text/html') === -1) return;\n  const html = transfer.getData('text/html');\n  if (!/<table/i.test(html)) return;\n  const start = html.substring(0, html.indexOf('<table'));\n  const tableCloseIndex = html.lastIndexOf('</table>');\n  if (!start || !tableCloseIndex) return;\n  const end = html.substring(tableCloseIndex + 8);\n  const parser = new DOMParser();\n  const parsedDocument = parser.parseFromString(html, 'text/html');\n  let table = parsedDocument.querySelector('table');\n  table = !table || table.closest('[data-paste-markdown-skip]') ? null : table;\n  if (!table) return;\n  const formattedTable = tableMarkdown(table);\n  if (!formattedTable) return;\n  return [start, formattedTable, end].join('').replace(/<meta.*?>/, '');\n}\nfunction install(el) {\n  el.addEventListener('paste', onPaste);\n}\nfunction uninstall(el) {\n  el.removeEventListener('paste', onPaste);\n}\nfunction onPaste(event) {\n  const {\n    currentTarget: el\n  } = event;\n  if (shouldSkipFormatting(el)) return;\n  const transfer = event.clipboardData;\n  if (!transfer || !hasMarkdown(transfer)) return;\n  const field = event.currentTarget;\n  if (!(field instanceof HTMLTextAreaElement)) return;\n  const text = transfer.getData('text/x-gfm');\n  if (!text) return;\n  event.stopPropagation();\n  event.preventDefault();\n  insertText(field, text);\n}\nfunction hasMarkdown(transfer) {\n  return Array.from(transfer.types).indexOf('text/x-gfm') >= 0;\n}\nfunction subscribe(el, optionConfig) {\n  installAround(el, [install$1, install$3, install$2, install, install$4], optionConfig);\n  return {\n    unsubscribe: () => {\n      uninstall$5(el);\n      uninstall$1(el);\n      uninstall$4(el);\n      uninstall$3(el);\n      uninstall$2(el);\n      uninstall(el);\n    }\n  };\n}\nexport { install$4 as installHTML, install$3 as installImageLink, install$2 as installLink, install$1 as installTable, install as installText, subscribe, uninstall$4 as uninstallHTML, uninstall$3 as uninstallImageLink, uninstall$2 as uninstallLink, uninstall$1 as uninstallTable, uninstall as uninstallText };","map":{"version":3,"names":["insertText","textarea","text","_a","_b","_c","before","value","slice","selectionStart","undefined","after","selectionEnd","canInsertText","contentEditable","document","execCommand","error","endsWith","e","dispatchEvent","CustomEvent","bubbles","cancelable","skipFormattingMap","WeakMap","setSkipFormattingFlag","event","currentTarget","el","isSkipFormattingKeys","code","ctrlKey","metaKey","shiftKey","altKey","set","unsetSkipFormattedFlag","delete","shouldSkipFormatting","shouldSkipFormattingState","get","installAround","installCallbacks","optionConfig","addEventListener","installCallback","uninstall$5","removeEventListener","install$4","onPaste$4","uninstall$4","transfer","clipboardData","hasHTML","field","HTMLTextAreaElement","isWithinUserMention","plaintext","getData","textHTML","textHTMLClean","replace","trim","parser","DOMParser","doc","parseFromString","walker","createTreeWalker","body","NodeFilter","SHOW_ELEMENT","node","parentNode","isLink","FILTER_REJECT","FILTER_ACCEPT","markdown","convertToMarkdown","stopPropagation","preventDefault","currentNode","firstChild","markdownIgnoreBeforeIndex","index","NODE_LIMIT","textContent","wholeText","isEmptyString","nextNode","markdownFoundIndex","indexOf","markdownLink","linkify$2","length","previousChar","substring","tagName","toLowerCase","hasAttribute","types","includes","element","label","url","href","isUserMention","isSpecialLink","areEqualLinks","link","className","getAttribute","link1","link2","install$3","onDragover$1","onDrop$1","onPaste$3","uninstall$3","dataTransfer","hasFile$1","hasLink","links","extractLinks","some","isImageLink","map","linkify$1","join","dropEffect","Array","from","split","IMAGE_RE","test","pasteLinkAsPlainTextOverSelectedTextMap","install$2","defaultPlainTextPaste","urlLinks","onPaste$2","uninstall$2","shouldPasteAsPlainText","shouldSkipDefaultBehavior","hasPlainText","isURL","isWithinLink","selectedText","linkify","previousChars","parsedURL","URL","removeTrailingSlash","install$1","onDragover","onDrop","onPaste$1","uninstall$1","hasFile","textToPaste","generateText","columnText","column","noBreakSpace","tableHeaders","row","querySelectorAll","tableMarkdown","rows","firstRow","shift","headers","spacers","header","html","start","tableCloseIndex","lastIndexOf","end","parsedDocument","table","querySelector","closest","formattedTable","install","onPaste","uninstall","hasMarkdown","subscribe","unsubscribe","installHTML","installImageLink","installLink","installTable","installText","uninstallHTML","uninstallImageLink","uninstallLink","uninstallTable","uninstallText"],"sources":["/Users/steve/Documents/repos/github/api-insights/node_modules/@github/paste-markdown/dist/index.esm.js"],"sourcesContent":["function insertText(textarea, text) {\r\n    var _a, _b, _c;\r\n    const before = textarea.value.slice(0, (_a = textarea.selectionStart) !== null && _a !== void 0 ? _a : undefined);\r\n    const after = textarea.value.slice((_b = textarea.selectionEnd) !== null && _b !== void 0 ? _b : undefined);\r\n    let canInsertText = true;\r\n    textarea.contentEditable = 'true';\r\n    try {\r\n        canInsertText = document.execCommand('insertText', false, text);\r\n    }\r\n    catch (error) {\r\n        canInsertText = false;\r\n    }\r\n    textarea.contentEditable = 'false';\r\n    if (canInsertText && !textarea.value.slice(0, (_c = textarea.selectionStart) !== null && _c !== void 0 ? _c : undefined).endsWith(text)) {\r\n        canInsertText = false;\r\n    }\r\n    if (!canInsertText) {\r\n        try {\r\n            document.execCommand('ms-beginUndoUnit');\r\n        }\r\n        catch (e) {\r\n        }\r\n        textarea.value = before + text + after;\r\n        try {\r\n            document.execCommand('ms-endUndoUnit');\r\n        }\r\n        catch (e) {\r\n        }\r\n        textarea.dispatchEvent(new CustomEvent('change', { bubbles: true, cancelable: true }));\r\n    }\r\n}\n\nconst skipFormattingMap = new WeakMap();\r\nfunction setSkipFormattingFlag(event) {\r\n    const { currentTarget: el } = event;\r\n    const isSkipFormattingKeys = event.code === 'KeyV' && (event.ctrlKey || event.metaKey) && event.shiftKey;\r\n    if (isSkipFormattingKeys || (isSkipFormattingKeys && event.altKey)) {\r\n        skipFormattingMap.set(el, true);\r\n    }\r\n}\r\nfunction unsetSkipFormattedFlag(event) {\r\n    const { currentTarget: el } = event;\r\n    skipFormattingMap.delete(el);\r\n}\r\nfunction shouldSkipFormatting(el) {\r\n    var _a;\r\n    const shouldSkipFormattingState = (_a = skipFormattingMap.get(el)) !== null && _a !== void 0 ? _a : false;\r\n    return shouldSkipFormattingState;\r\n}\r\nfunction installAround(el, installCallbacks, optionConfig) {\r\n    el.addEventListener('keydown', setSkipFormattingFlag);\r\n    for (const installCallback of installCallbacks) {\r\n        installCallback(el, optionConfig);\r\n    }\r\n    el.addEventListener('paste', unsetSkipFormattedFlag);\r\n}\r\nfunction uninstall$5(el) {\r\n    el.removeEventListener('keydown', setSkipFormattingFlag);\r\n    el.removeEventListener('paste', unsetSkipFormattedFlag);\r\n}\n\nfunction install$4(el) {\r\n    el.addEventListener('paste', onPaste$4);\r\n}\r\nfunction uninstall$4(el) {\r\n    el.removeEventListener('paste', onPaste$4);\r\n}\r\nfunction onPaste$4(event) {\r\n    const transfer = event.clipboardData;\r\n    const { currentTarget: el } = event;\r\n    if (shouldSkipFormatting(el))\r\n        return;\r\n    if (!transfer || !hasHTML(transfer))\r\n        return;\r\n    const field = event.currentTarget;\r\n    if (!(field instanceof HTMLTextAreaElement))\r\n        return;\r\n    if (isWithinUserMention(field)) {\r\n        return;\r\n    }\r\n    let plaintext = transfer.getData('text/plain');\r\n    const textHTML = transfer.getData('text/html');\r\n    const textHTMLClean = textHTML.replace(/\\u00A0/g, ' ').replace(/\\uC2A0/g, ' ');\r\n    if (!textHTML)\r\n        return;\r\n    plaintext = plaintext.trim();\r\n    if (!plaintext)\r\n        return;\r\n    const parser = new DOMParser();\r\n    const doc = parser.parseFromString(textHTMLClean, 'text/html');\r\n    const walker = doc.createTreeWalker(doc.body, NodeFilter.SHOW_ELEMENT, node => node.parentNode && isLink(node.parentNode) ? NodeFilter.FILTER_REJECT : NodeFilter.FILTER_ACCEPT);\r\n    const markdown = convertToMarkdown(plaintext, walker);\r\n    if (markdown === plaintext)\r\n        return;\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    insertText(field, markdown);\r\n}\r\nfunction convertToMarkdown(plaintext, walker) {\r\n    var _a;\r\n    let currentNode = walker.firstChild();\r\n    let markdown = plaintext;\r\n    let markdownIgnoreBeforeIndex = 0;\r\n    let index = 0;\r\n    const NODE_LIMIT = 10000;\r\n    while (currentNode && index < NODE_LIMIT) {\r\n        index++;\r\n        const text = isLink(currentNode)\r\n            ? (currentNode.textContent || '').replace(/[\\t\\n\\r ]+/g, ' ')\r\n            : ((_a = currentNode.firstChild) === null || _a === void 0 ? void 0 : _a.wholeText) || '';\r\n        if (isEmptyString(text)) {\r\n            currentNode = walker.nextNode();\r\n            continue;\r\n        }\r\n        const markdownFoundIndex = markdown.indexOf(text, markdownIgnoreBeforeIndex);\r\n        if (markdownFoundIndex >= 0) {\r\n            if (isLink(currentNode)) {\r\n                const markdownLink = linkify$2(currentNode, text);\r\n                markdown =\r\n                    markdown.slice(0, markdownFoundIndex) + markdownLink + markdown.slice(markdownFoundIndex + text.length);\r\n                markdownIgnoreBeforeIndex = markdownFoundIndex + markdownLink.length;\r\n            }\r\n            else {\r\n                markdownIgnoreBeforeIndex = markdownFoundIndex + text.length;\r\n            }\r\n        }\r\n        currentNode = walker.nextNode();\r\n    }\r\n    return index === NODE_LIMIT ? plaintext : markdown;\r\n}\r\nfunction isWithinUserMention(textarea) {\r\n    const selectionStart = textarea.selectionStart || 0;\r\n    if (selectionStart === 0) {\r\n        return false;\r\n    }\r\n    const previousChar = textarea.value.substring(selectionStart - 1, selectionStart);\r\n    return previousChar === '@';\r\n}\r\nfunction isEmptyString(text) {\r\n    return !text || (text === null || text === void 0 ? void 0 : text.trim().length) === 0;\r\n}\r\nfunction isLink(node) {\r\n    var _a;\r\n    return ((_a = node.tagName) === null || _a === void 0 ? void 0 : _a.toLowerCase()) === 'a' && node.hasAttribute('href');\r\n}\r\nfunction hasHTML(transfer) {\r\n    return transfer.types.includes('text/html');\r\n}\r\nfunction linkify$2(element, label) {\r\n    const url = element.href || '';\r\n    let markdown = '';\r\n    if (isUserMention(element)) {\r\n        markdown = label;\r\n    }\r\n    else if (isSpecialLink(element) || areEqualLinks(url, label)) {\r\n        markdown = url;\r\n    }\r\n    else {\r\n        markdown = `[${label}](${url})`;\r\n    }\r\n    return markdown;\r\n}\r\nfunction isSpecialLink(link) {\r\n    return (link.className.indexOf('commit-link') >= 0 ||\r\n        (!!link.getAttribute('data-hovercard-type') && link.getAttribute('data-hovercard-type') !== 'user'));\r\n}\r\nfunction areEqualLinks(link1, link2) {\r\n    link1 = link1.slice(-1) === '/' ? link1.slice(0, -1) : link1;\r\n    link2 = link2.slice(-1) === '/' ? link2.slice(0, -1) : link2;\r\n    return link1.toLowerCase() === link2.toLowerCase();\r\n}\r\nfunction isUserMention(link) {\r\n    var _a;\r\n    return ((_a = link.textContent) === null || _a === void 0 ? void 0 : _a.slice(0, 1)) === '@' && link.getAttribute('data-hovercard-type') === 'user';\r\n}\n\nfunction install$3(el) {\r\n    el.addEventListener('dragover', onDragover$1);\r\n    el.addEventListener('drop', onDrop$1);\r\n    el.addEventListener('paste', onPaste$3);\r\n}\r\nfunction uninstall$3(el) {\r\n    el.removeEventListener('dragover', onDragover$1);\r\n    el.removeEventListener('drop', onDrop$1);\r\n    el.removeEventListener('paste', onPaste$3);\r\n}\r\nfunction onDrop$1(event) {\r\n    const transfer = event.dataTransfer;\r\n    if (!transfer)\r\n        return;\r\n    if (hasFile$1(transfer))\r\n        return;\r\n    if (!hasLink(transfer))\r\n        return;\r\n    const links = extractLinks(transfer);\r\n    if (!links.some(isImageLink))\r\n        return;\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    const field = event.currentTarget;\r\n    if (!(field instanceof HTMLTextAreaElement))\r\n        return;\r\n    insertText(field, links.map(linkify$1).join(''));\r\n}\r\nfunction onDragover$1(event) {\r\n    const transfer = event.dataTransfer;\r\n    if (transfer)\r\n        transfer.dropEffect = 'link';\r\n}\r\nfunction onPaste$3(event) {\r\n    const { currentTarget: el } = event;\r\n    if (shouldSkipFormatting(el))\r\n        return;\r\n    const transfer = event.clipboardData;\r\n    if (!transfer || !hasLink(transfer))\r\n        return;\r\n    const links = extractLinks(transfer);\r\n    if (!links.some(isImageLink))\r\n        return;\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    const field = event.currentTarget;\r\n    if (!(field instanceof HTMLTextAreaElement))\r\n        return;\r\n    insertText(field, links.map(linkify$1).join(''));\r\n}\r\nfunction linkify$1(link) {\r\n    return isImageLink(link) ? `\\n![](${link})\\n` : link;\r\n}\r\nfunction hasFile$1(transfer) {\r\n    return Array.from(transfer.types).indexOf('Files') >= 0;\r\n}\r\nfunction hasLink(transfer) {\r\n    return Array.from(transfer.types).indexOf('text/uri-list') >= 0;\r\n}\r\nfunction extractLinks(transfer) {\r\n    return (transfer.getData('text/uri-list') || '').split('\\r\\n');\r\n}\r\nconst IMAGE_RE = /\\.(gif|png|jpe?g)$/i;\r\nfunction isImageLink(url) {\r\n    return IMAGE_RE.test(url);\r\n}\n\nconst pasteLinkAsPlainTextOverSelectedTextMap = new WeakMap();\r\nfunction install$2(el, optionConfig) {\r\n    var _a;\r\n    pasteLinkAsPlainTextOverSelectedTextMap.set(el, ((_a = optionConfig === null || optionConfig === void 0 ? void 0 : optionConfig.defaultPlainTextPaste) === null || _a === void 0 ? void 0 : _a.urlLinks) === true);\r\n    el.addEventListener('paste', onPaste$2);\r\n}\r\nfunction uninstall$2(el) {\r\n    el.removeEventListener('paste', onPaste$2);\r\n}\r\nfunction onPaste$2(event) {\r\n    var _a;\r\n    const { currentTarget: el } = event;\r\n    const element = el;\r\n    const shouldPasteAsPlainText = (_a = pasteLinkAsPlainTextOverSelectedTextMap.get(element)) !== null && _a !== void 0 ? _a : false;\r\n    const shouldSkipDefaultBehavior = shouldSkipFormatting(element);\r\n    if ((!shouldPasteAsPlainText && shouldSkipDefaultBehavior) ||\r\n        (shouldPasteAsPlainText && !shouldSkipDefaultBehavior)) {\r\n        return;\r\n    }\r\n    const transfer = event.clipboardData;\r\n    if (!transfer || !hasPlainText(transfer))\r\n        return;\r\n    const field = event.currentTarget;\r\n    if (!(field instanceof HTMLTextAreaElement))\r\n        return;\r\n    const text = transfer.getData('text/plain');\r\n    if (!text)\r\n        return;\r\n    if (!isURL(text))\r\n        return;\r\n    if (isWithinLink(field))\r\n        return;\r\n    const selectedText = field.value.substring(field.selectionStart, field.selectionEnd);\r\n    if (!selectedText.length)\r\n        return;\r\n    if (isURL(selectedText.trim()))\r\n        return;\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    insertText(field, linkify(selectedText, text.trim()));\r\n}\r\nfunction hasPlainText(transfer) {\r\n    return Array.from(transfer.types).includes('text/plain');\r\n}\r\nfunction isWithinLink(textarea) {\r\n    const selectionStart = textarea.selectionStart || 0;\r\n    if (selectionStart > 1) {\r\n        const previousChars = textarea.value.substring(selectionStart - 2, selectionStart);\r\n        return previousChars === '](';\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\nfunction linkify(selectedText, text) {\r\n    return `[${selectedText}](${text})`;\r\n}\r\nfunction isURL(url) {\r\n    try {\r\n        const parsedURL = new URL(url);\r\n        return removeTrailingSlash(parsedURL.href).trim() === removeTrailingSlash(url).trim();\r\n    }\r\n    catch (_a) {\r\n        return false;\r\n    }\r\n}\r\nfunction removeTrailingSlash(url) {\r\n    return url.endsWith('/') ? url.slice(0, url.length - 1) : url;\r\n}\n\nfunction install$1(el) {\r\n    el.addEventListener('dragover', onDragover);\r\n    el.addEventListener('drop', onDrop);\r\n    el.addEventListener('paste', onPaste$1);\r\n}\r\nfunction uninstall$1(el) {\r\n    el.removeEventListener('dragover', onDragover);\r\n    el.removeEventListener('drop', onDrop);\r\n    el.removeEventListener('paste', onPaste$1);\r\n}\r\nfunction onDrop(event) {\r\n    const transfer = event.dataTransfer;\r\n    if (!transfer)\r\n        return;\r\n    if (hasFile(transfer))\r\n        return;\r\n    const textToPaste = generateText(transfer);\r\n    if (!textToPaste)\r\n        return;\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    const field = event.currentTarget;\r\n    if (field instanceof HTMLTextAreaElement) {\r\n        insertText(field, textToPaste);\r\n    }\r\n}\r\nfunction onDragover(event) {\r\n    const transfer = event.dataTransfer;\r\n    if (transfer)\r\n        transfer.dropEffect = 'copy';\r\n}\r\nfunction onPaste$1(event) {\r\n    const { currentTarget: el } = event;\r\n    if (shouldSkipFormatting(el))\r\n        return;\r\n    if (!event.clipboardData)\r\n        return;\r\n    const textToPaste = generateText(event.clipboardData);\r\n    if (!textToPaste)\r\n        return;\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    const field = event.currentTarget;\r\n    if (field instanceof HTMLTextAreaElement) {\r\n        insertText(field, textToPaste);\r\n    }\r\n}\r\nfunction hasFile(transfer) {\r\n    return Array.from(transfer.types).indexOf('Files') >= 0;\r\n}\r\nfunction columnText(column) {\r\n    const noBreakSpace = '\\u00A0';\r\n    const text = (column.textContent || '').trim().replace(/\\|/g, '\\\\|').replace(/\\n/g, ' ');\r\n    return text || noBreakSpace;\r\n}\r\nfunction tableHeaders(row) {\r\n    return Array.from(row.querySelectorAll('td, th')).map(columnText);\r\n}\r\nfunction tableMarkdown(node) {\r\n    const rows = Array.from(node.querySelectorAll('tr'));\r\n    const firstRow = rows.shift();\r\n    if (!firstRow)\r\n        return '';\r\n    const headers = tableHeaders(firstRow);\r\n    const spacers = headers.map(() => '--');\r\n    const header = `${headers.join(' | ')}\\n${spacers.join(' | ')}\\n`;\r\n    const body = rows\r\n        .map(row => {\r\n        return Array.from(row.querySelectorAll('td')).map(columnText).join(' | ');\r\n    })\r\n        .join('\\n');\r\n    return `\\n${header}${body}\\n\\n`;\r\n}\r\nfunction generateText(transfer) {\r\n    if (Array.from(transfer.types).indexOf('text/html') === -1)\r\n        return;\r\n    const html = transfer.getData('text/html');\r\n    if (!/<table/i.test(html))\r\n        return;\r\n    const start = html.substring(0, html.indexOf('<table'));\r\n    const tableCloseIndex = html.lastIndexOf('</table>');\r\n    if (!start || !tableCloseIndex)\r\n        return;\r\n    const end = html.substring(tableCloseIndex + 8);\r\n    const parser = new DOMParser();\r\n    const parsedDocument = parser.parseFromString(html, 'text/html');\r\n    let table = parsedDocument.querySelector('table');\r\n    table = !table || table.closest('[data-paste-markdown-skip]') ? null : table;\r\n    if (!table)\r\n        return;\r\n    const formattedTable = tableMarkdown(table);\r\n    if (!formattedTable)\r\n        return;\r\n    return [start, formattedTable, end].join('').replace(/<meta.*?>/, '');\r\n}\n\nfunction install(el) {\r\n    el.addEventListener('paste', onPaste);\r\n}\r\nfunction uninstall(el) {\r\n    el.removeEventListener('paste', onPaste);\r\n}\r\nfunction onPaste(event) {\r\n    const { currentTarget: el } = event;\r\n    if (shouldSkipFormatting(el))\r\n        return;\r\n    const transfer = event.clipboardData;\r\n    if (!transfer || !hasMarkdown(transfer))\r\n        return;\r\n    const field = event.currentTarget;\r\n    if (!(field instanceof HTMLTextAreaElement))\r\n        return;\r\n    const text = transfer.getData('text/x-gfm');\r\n    if (!text)\r\n        return;\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    insertText(field, text);\r\n}\r\nfunction hasMarkdown(transfer) {\r\n    return Array.from(transfer.types).indexOf('text/x-gfm') >= 0;\r\n}\n\nfunction subscribe(el, optionConfig) {\r\n    installAround(el, [install$1, install$3, install$2, install, install$4], optionConfig);\r\n    return {\r\n        unsubscribe: () => {\r\n            uninstall$5(el);\r\n            uninstall$1(el);\r\n            uninstall$4(el);\r\n            uninstall$3(el);\r\n            uninstall$2(el);\r\n            uninstall(el);\r\n        }\r\n    };\r\n}\n\nexport { install$4 as installHTML, install$3 as installImageLink, install$2 as installLink, install$1 as installTable, install as installText, subscribe, uninstall$4 as uninstallHTML, uninstall$3 as uninstallImageLink, uninstall$2 as uninstallLink, uninstall$1 as uninstallTable, uninstall as uninstallText };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}