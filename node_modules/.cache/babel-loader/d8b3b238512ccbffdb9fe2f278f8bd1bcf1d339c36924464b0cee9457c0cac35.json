{"ast":null,"code":"import { scrollIntoView } from '@primer/behaviors';\nimport React, { useCallback, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Box from '../Box/Box.js';\nimport StyledSpinner from '../Spinner/Spinner.js';\nimport TextInput from '../TextInput/TextInput.js';\nimport { get } from '../constants.js';\nimport { ActionList } from '../deprecated/ActionList/index.js';\nimport { useFocusZone } from '../hooks/useFocusZone.js';\nimport { useId } from '../hooks/useId.js';\nimport { useProvidedRefOrCreate } from '../hooks/useProvidedRefOrCreate.js';\nimport { useProvidedStateOrCreate } from '../hooks/useProvidedStateOrCreate.js';\nimport useScrollFlash from '../hooks/useScrollFlash.js';\nimport { VisuallyHidden } from '../internal/components/VisuallyHidden.js';\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nconst menuScrollMargins = {\n  startMargin: 0,\n  endMargin: 8\n};\nconst StyledHeader = styled.div.withConfig({\n  displayName: \"FilteredActionList__StyledHeader\",\n  componentId: \"sc-1oqgb0s-0\"\n})([\"box-shadow:0 1px 0 \", \";z-index:1;\"], get('colors.border.default'));\nfunction FilteredActionList({\n  loading = false,\n  placeholderText,\n  filterValue: externalFilterValue,\n  onFilterChange,\n  items,\n  textInputProps,\n  inputRef: providedInputRef,\n  sx,\n  ...listProps\n}) {\n  const [filterValue, setInternalFilterValue] = useProvidedStateOrCreate(externalFilterValue, undefined, '');\n  const onInputChange = useCallback(e => {\n    const value = e.target.value;\n    onFilterChange(value, e);\n    setInternalFilterValue(value);\n  }, [onFilterChange, setInternalFilterValue]);\n  const scrollContainerRef = useRef(null);\n  const listContainerRef = useRef(null);\n  const inputRef = useProvidedRefOrCreate(providedInputRef);\n  const activeDescendantRef = useRef();\n  const listId = useId();\n  const inputDescriptionTextId = useId();\n  const onInputKeyPress = useCallback(event => {\n    if (event.key === 'Enter' && activeDescendantRef.current) {\n      event.preventDefault();\n      event.nativeEvent.stopImmediatePropagation();\n\n      // Forward Enter key press to active descendant so that item gets activated\n      const activeDescendantEvent = new KeyboardEvent(event.type, event.nativeEvent);\n      activeDescendantRef.current.dispatchEvent(activeDescendantEvent);\n    }\n  }, [activeDescendantRef]);\n  useFocusZone({\n    containerRef: listContainerRef,\n    focusOutBehavior: 'wrap',\n    focusableElementFilter: element => {\n      return !(element instanceof HTMLInputElement);\n    },\n    activeDescendantFocus: inputRef,\n    onActiveDescendantChanged: (current, previous, directlyActivated) => {\n      activeDescendantRef.current = current;\n      if (current && scrollContainerRef.current && directlyActivated) {\n        scrollIntoView(current, scrollContainerRef.current, menuScrollMargins);\n      }\n    }\n  }, [\n  // List ref isn't set while loading.  Need to re-bind focus zone when it changes\n  loading]);\n  useEffect(() => {\n    // if items changed, we want to instantly move active descendant into view\n    if (activeDescendantRef.current && scrollContainerRef.current) {\n      scrollIntoView(activeDescendantRef.current, scrollContainerRef.current, {\n        ...menuScrollMargins,\n        behavior: 'auto'\n      });\n    }\n  }, [items]);\n  useScrollFlash(scrollContainerRef);\n  return /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    overflow: \"hidden\",\n    sx: sx\n  }, /*#__PURE__*/React.createElement(StyledHeader, null, /*#__PURE__*/React.createElement(TextInput, _extends({\n    ref: inputRef,\n    block: true,\n    width: \"auto\",\n    color: \"fg.default\",\n    value: filterValue,\n    onChange: onInputChange,\n    onKeyPress: onInputKeyPress,\n    placeholder: placeholderText,\n    \"aria-label\": placeholderText,\n    \"aria-controls\": listId,\n    \"aria-describedby\": inputDescriptionTextId\n  }, textInputProps))), /*#__PURE__*/React.createElement(VisuallyHidden, {\n    id: inputDescriptionTextId\n  }, \"Items will be filtered as you type\"), /*#__PURE__*/React.createElement(Box, {\n    ref: scrollContainerRef,\n    overflow: \"auto\"\n  }, loading ? /*#__PURE__*/React.createElement(Box, {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    pt: 6,\n    pb: 7\n  }, /*#__PURE__*/React.createElement(StyledSpinner, null)) : /*#__PURE__*/React.createElement(ActionList, _extends({\n    ref: listContainerRef,\n    items: items\n  }, listProps, {\n    role: \"listbox\",\n    id: listId\n  }))));\n}\nFilteredActionList.displayName = \"FilteredActionList\";\nFilteredActionList.displayName = 'FilteredActionList';\nexport { FilteredActionList };","map":{"version":3,"names":["scrollIntoView","React","useCallback","useRef","useEffect","styled","Box","StyledSpinner","TextInput","get","ActionList","useFocusZone","useId","useProvidedRefOrCreate","useProvidedStateOrCreate","useScrollFlash","VisuallyHidden","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","menuScrollMargins","startMargin","endMargin","StyledHeader","div","withConfig","displayName","componentId","FilteredActionList","loading","placeholderText","filterValue","externalFilterValue","onFilterChange","items","textInputProps","inputRef","providedInputRef","sx","listProps","setInternalFilterValue","undefined","onInputChange","e","value","scrollContainerRef","listContainerRef","activeDescendantRef","listId","inputDescriptionTextId","onInputKeyPress","event","current","preventDefault","nativeEvent","stopImmediatePropagation","activeDescendantEvent","KeyboardEvent","type","dispatchEvent","containerRef","focusOutBehavior","focusableElementFilter","element","HTMLInputElement","activeDescendantFocus","onActiveDescendantChanged","previous","directlyActivated","behavior","createElement","display","flexDirection","overflow","ref","block","width","color","onChange","onKeyPress","placeholder","id","justifyContent","pt","pb","role"],"sources":["/Users/steve/Documents/repos/github/billing-usage/node_modules/@primer/react/lib-esm/FilteredActionList/FilteredActionList.js"],"sourcesContent":["import { scrollIntoView } from '@primer/behaviors';\nimport React, { useCallback, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Box from '../Box/Box.js';\nimport StyledSpinner from '../Spinner/Spinner.js';\nimport TextInput from '../TextInput/TextInput.js';\nimport { get } from '../constants.js';\nimport { ActionList } from '../deprecated/ActionList/index.js';\nimport { useFocusZone } from '../hooks/useFocusZone.js';\nimport { useId } from '../hooks/useId.js';\nimport { useProvidedRefOrCreate } from '../hooks/useProvidedRefOrCreate.js';\nimport { useProvidedStateOrCreate } from '../hooks/useProvidedStateOrCreate.js';\nimport useScrollFlash from '../hooks/useScrollFlash.js';\nimport { VisuallyHidden } from '../internal/components/VisuallyHidden.js';\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nconst menuScrollMargins = {\n  startMargin: 0,\n  endMargin: 8\n};\nconst StyledHeader = styled.div.withConfig({\n  displayName: \"FilteredActionList__StyledHeader\",\n  componentId: \"sc-1oqgb0s-0\"\n})([\"box-shadow:0 1px 0 \", \";z-index:1;\"], get('colors.border.default'));\nfunction FilteredActionList({\n  loading = false,\n  placeholderText,\n  filterValue: externalFilterValue,\n  onFilterChange,\n  items,\n  textInputProps,\n  inputRef: providedInputRef,\n  sx,\n  ...listProps\n}) {\n  const [filterValue, setInternalFilterValue] = useProvidedStateOrCreate(externalFilterValue, undefined, '');\n  const onInputChange = useCallback(e => {\n    const value = e.target.value;\n    onFilterChange(value, e);\n    setInternalFilterValue(value);\n  }, [onFilterChange, setInternalFilterValue]);\n  const scrollContainerRef = useRef(null);\n  const listContainerRef = useRef(null);\n  const inputRef = useProvidedRefOrCreate(providedInputRef);\n  const activeDescendantRef = useRef();\n  const listId = useId();\n  const inputDescriptionTextId = useId();\n  const onInputKeyPress = useCallback(event => {\n    if (event.key === 'Enter' && activeDescendantRef.current) {\n      event.preventDefault();\n      event.nativeEvent.stopImmediatePropagation();\n\n      // Forward Enter key press to active descendant so that item gets activated\n      const activeDescendantEvent = new KeyboardEvent(event.type, event.nativeEvent);\n      activeDescendantRef.current.dispatchEvent(activeDescendantEvent);\n    }\n  }, [activeDescendantRef]);\n  useFocusZone({\n    containerRef: listContainerRef,\n    focusOutBehavior: 'wrap',\n    focusableElementFilter: element => {\n      return !(element instanceof HTMLInputElement);\n    },\n    activeDescendantFocus: inputRef,\n    onActiveDescendantChanged: (current, previous, directlyActivated) => {\n      activeDescendantRef.current = current;\n      if (current && scrollContainerRef.current && directlyActivated) {\n        scrollIntoView(current, scrollContainerRef.current, menuScrollMargins);\n      }\n    }\n  }, [\n  // List ref isn't set while loading.  Need to re-bind focus zone when it changes\n  loading]);\n  useEffect(() => {\n    // if items changed, we want to instantly move active descendant into view\n    if (activeDescendantRef.current && scrollContainerRef.current) {\n      scrollIntoView(activeDescendantRef.current, scrollContainerRef.current, {\n        ...menuScrollMargins,\n        behavior: 'auto'\n      });\n    }\n  }, [items]);\n  useScrollFlash(scrollContainerRef);\n  return /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    overflow: \"hidden\",\n    sx: sx\n  }, /*#__PURE__*/React.createElement(StyledHeader, null, /*#__PURE__*/React.createElement(TextInput, _extends({\n    ref: inputRef,\n    block: true,\n    width: \"auto\",\n    color: \"fg.default\",\n    value: filterValue,\n    onChange: onInputChange,\n    onKeyPress: onInputKeyPress,\n    placeholder: placeholderText,\n    \"aria-label\": placeholderText,\n    \"aria-controls\": listId,\n    \"aria-describedby\": inputDescriptionTextId\n  }, textInputProps))), /*#__PURE__*/React.createElement(VisuallyHidden, {\n    id: inputDescriptionTextId\n  }, \"Items will be filtered as you type\"), /*#__PURE__*/React.createElement(Box, {\n    ref: scrollContainerRef,\n    overflow: \"auto\"\n  }, loading ? /*#__PURE__*/React.createElement(Box, {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    pt: 6,\n    pb: 7\n  }, /*#__PURE__*/React.createElement(StyledSpinner, null)) : /*#__PURE__*/React.createElement(ActionList, _extends({\n    ref: listContainerRef,\n    items: items\n  }, listProps, {\n    role: \"listbox\",\n    id: listId\n  }))));\n}\nFilteredActionList.displayName = \"FilteredActionList\";\nFilteredActionList.displayName = 'FilteredActionList';\n\nexport { FilteredActionList };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}