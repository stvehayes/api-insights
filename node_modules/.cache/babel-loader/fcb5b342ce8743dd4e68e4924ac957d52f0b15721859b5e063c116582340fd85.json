{"ast":null,"code":"import { score } from 'fzy.js';\nimport React, { useMemo } from 'react';\nimport { suggestionsCalculator } from './index.js';\nimport { ActionList } from '../../../ActionList/index.js';\nimport Text from '../../../Text/Text.js';\n\n/** Could be a user, team, or organization - anything that can be mentioned. */\n\nconst trigger = {\n  triggerChar: '@'\n};\nconst mentionableToSuggestion = mentionable => ({\n  value: mentionable.identifier,\n  render: props => /*#__PURE__*/React.createElement(ActionList.Item, props, /*#__PURE__*/React.createElement(Text, {\n    sx: {\n      fontWeight: 'bold'\n    }\n  }, mentionable.identifier), ' ', /*#__PURE__*/React.createElement(ActionList.Description, null, mentionable.description))\n});\nconst scoreSuggestion = (query, mentionable) => {\n  const fzyScore = score(query, `${mentionable.identifier} ${mentionable.description}`.trim().toLowerCase());\n\n  // fzy unintuitively returns Infinity if the length of the item is less than or equal to the length of the query\n  // All users have an identifier but some have empty descriptions; in those cases the query might equal the identifier\n  // and we'd still want to show the suggestion in that case.\n  if (fzyScore === Infinity && query.toLowerCase() !== mentionable.identifier.toLowerCase()) return -Infinity;\n  return fzyScore;\n};\nconst useMentionSuggestions = mentionables => {\n  const calculateSuggestions = useMemo(() => suggestionsCalculator(mentionables, scoreSuggestion, mentionableToSuggestion), [mentionables]);\n  return {\n    calculateSuggestions,\n    trigger\n  };\n};\nexport { useMentionSuggestions };","map":{"version":3,"names":["score","React","useMemo","suggestionsCalculator","ActionList","Text","trigger","triggerChar","mentionableToSuggestion","mentionable","value","identifier","render","props","createElement","Item","sx","fontWeight","Description","description","scoreSuggestion","query","fzyScore","trim","toLowerCase","Infinity","useMentionSuggestions","mentionables","calculateSuggestions"],"sources":["/Users/steve/Documents/repos/github/api-insights/node_modules/@primer/react/lib-esm/drafts/MarkdownEditor/suggestions/_useMentionSuggestions.js"],"sourcesContent":["import { score } from 'fzy.js';\nimport React, { useMemo } from 'react';\nimport { suggestionsCalculator } from './index.js';\nimport { ActionList } from '../../../ActionList/index.js';\nimport Text from '../../../Text/Text.js';\n\n/** Could be a user, team, or organization - anything that can be mentioned. */\n\nconst trigger = {\n  triggerChar: '@'\n};\nconst mentionableToSuggestion = mentionable => ({\n  value: mentionable.identifier,\n  render: props => /*#__PURE__*/React.createElement(ActionList.Item, props, /*#__PURE__*/React.createElement(Text, {\n    sx: {\n      fontWeight: 'bold'\n    }\n  }, mentionable.identifier), ' ', /*#__PURE__*/React.createElement(ActionList.Description, null, mentionable.description))\n});\nconst scoreSuggestion = (query, mentionable) => {\n  const fzyScore = score(query, `${mentionable.identifier} ${mentionable.description}`.trim().toLowerCase());\n\n  // fzy unintuitively returns Infinity if the length of the item is less than or equal to the length of the query\n  // All users have an identifier but some have empty descriptions; in those cases the query might equal the identifier\n  // and we'd still want to show the suggestion in that case.\n  if (fzyScore === Infinity && query.toLowerCase() !== mentionable.identifier.toLowerCase()) return -Infinity;\n  return fzyScore;\n};\nconst useMentionSuggestions = mentionables => {\n  const calculateSuggestions = useMemo(() => suggestionsCalculator(mentionables, scoreSuggestion, mentionableToSuggestion), [mentionables]);\n  return {\n    calculateSuggestions,\n    trigger\n  };\n};\n\nexport { useMentionSuggestions };\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,QAAQ;AAC9B,OAAOC,KAAK,IAAIC,OAAO,QAAQ,OAAO;AACtC,SAASC,qBAAqB,QAAQ,YAAY;AAClD,SAASC,UAAU,QAAQ,8BAA8B;AACzD,OAAOC,IAAI,MAAM,uBAAuB;;AAExC;;AAEA,MAAMC,OAAO,GAAG;EACdC,WAAW,EAAE;AACf,CAAC;AACD,MAAMC,uBAAuB,GAAGC,WAAW,KAAK;EAC9CC,KAAK,EAAED,WAAW,CAACE,UAAU;EAC7BC,MAAM,EAAEC,KAAK,IAAI,aAAaZ,KAAK,CAACa,aAAa,CAACV,UAAU,CAACW,IAAI,EAAEF,KAAK,EAAE,aAAaZ,KAAK,CAACa,aAAa,CAACT,IAAI,EAAE;IAC/GW,EAAE,EAAE;MACFC,UAAU,EAAE;IACd;EACF,CAAC,EAAER,WAAW,CAACE,UAAU,CAAC,EAAE,GAAG,EAAE,aAAaV,KAAK,CAACa,aAAa,CAACV,UAAU,CAACc,WAAW,EAAE,IAAI,EAAET,WAAW,CAACU,WAAW,CAAC;AAC1H,CAAC,CAAC;AACF,MAAMC,eAAe,GAAGA,CAACC,KAAK,EAAEZ,WAAW,KAAK;EAC9C,MAAMa,QAAQ,GAAGtB,KAAK,CAACqB,KAAK,EAAG,GAAEZ,WAAW,CAACE,UAAW,IAAGF,WAAW,CAACU,WAAY,EAAC,CAACI,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC;;EAE1G;EACA;EACA;EACA,IAAIF,QAAQ,KAAKG,QAAQ,IAAIJ,KAAK,CAACG,WAAW,CAAC,CAAC,KAAKf,WAAW,CAACE,UAAU,CAACa,WAAW,CAAC,CAAC,EAAE,OAAO,CAACC,QAAQ;EAC3G,OAAOH,QAAQ;AACjB,CAAC;AACD,MAAMI,qBAAqB,GAAGC,YAAY,IAAI;EAC5C,MAAMC,oBAAoB,GAAG1B,OAAO,CAAC,MAAMC,qBAAqB,CAACwB,YAAY,EAAEP,eAAe,EAAEZ,uBAAuB,CAAC,EAAE,CAACmB,YAAY,CAAC,CAAC;EACzI,OAAO;IACLC,oBAAoB;IACpBtB;EACF,CAAC;AACH,CAAC;AAED,SAASoB,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}