{"ast":null,"code":"import { useMemo, useCallback, useEffect } from 'react';\n\n// Because events are handled at the document level, we provide a mechanism for early return.\nconst stopPropagation = true;\n\n/**\n * Calls all handlers in reverse order\n * @param event The MouseEvent generated by the click event.\n */\nfunction handleClick(event) {\n  if (!event.defaultPrevented) {\n    for (const handler of Object.values(registry).reverse()) {\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (handler(event) === stopPropagation || event.defaultPrevented) {\n        break;\n      }\n    }\n  }\n}\nconst registry = {};\nfunction register(id, handler) {\n  registry[id] = handler;\n}\nfunction deregister(id) {\n  delete registry[id];\n}\n\n// For auto-incrementing unique identifiers for registered handlers.\nlet handlerId = 0;\nconst useOnOutsideClick = ({\n  containerRef,\n  ignoreClickRefs,\n  onClickOutside\n}) => {\n  const id = useMemo(() => handlerId++, []);\n  const handler = useCallback(event => {\n    var _containerRef$current;\n    // don't call click handler if the mouse event was triggered by an auxiliary button (right click/wheel button/etc)\n    if (event instanceof MouseEvent && event.button > 0) {\n      return stopPropagation;\n    }\n\n    // don't call handler if the click happened inside of the container\n    if ((_containerRef$current = containerRef.current) !== null && _containerRef$current !== void 0 && _containerRef$current.contains(event.target)) {\n      return stopPropagation;\n    }\n\n    // don't call handler if click happened on an ignored ref\n    if (ignoreClickRefs && ignoreClickRefs.some(({\n      current\n    }) => current === null || current === void 0 ? void 0 : current.contains(event.target))) {\n      return stopPropagation;\n    }\n    onClickOutside(event);\n  }, [containerRef, ignoreClickRefs, onClickOutside]);\n  useEffect(() => {\n    if (Object.keys(registry).length === 0) {\n      // use capture to ensure we get all events\n      document.addEventListener('mousedown', handleClick, {\n        capture: true\n      });\n    }\n    register(id, handler);\n    return () => {\n      deregister(id);\n      if (Object.keys(registry).length === 0) {\n        document.removeEventListener('mousedown', handleClick, {\n          capture: true\n        });\n      }\n    };\n  }, [id, handler]);\n};\nexport { useOnOutsideClick };","map":{"version":3,"names":["useMemo","useCallback","useEffect","stopPropagation","handleClick","event","defaultPrevented","handler","Object","values","registry","reverse","register","id","deregister","handlerId","useOnOutsideClick","containerRef","ignoreClickRefs","onClickOutside","_containerRef$current","MouseEvent","button","current","contains","target","some","keys","length","document","addEventListener","capture","removeEventListener"],"sources":["/Users/steve/Documents/repos/github/billing-usage/node_modules/@primer/react/lib-esm/hooks/useOnOutsideClick.js"],"sourcesContent":["import { useMemo, useCallback, useEffect } from 'react';\n\n// Because events are handled at the document level, we provide a mechanism for early return.\nconst stopPropagation = true;\n\n/**\n * Calls all handlers in reverse order\n * @param event The MouseEvent generated by the click event.\n */\nfunction handleClick(event) {\n  if (!event.defaultPrevented) {\n    for (const handler of Object.values(registry).reverse()) {\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (handler(event) === stopPropagation || event.defaultPrevented) {\n        break;\n      }\n    }\n  }\n}\nconst registry = {};\nfunction register(id, handler) {\n  registry[id] = handler;\n}\nfunction deregister(id) {\n  delete registry[id];\n}\n\n// For auto-incrementing unique identifiers for registered handlers.\nlet handlerId = 0;\nconst useOnOutsideClick = ({\n  containerRef,\n  ignoreClickRefs,\n  onClickOutside\n}) => {\n  const id = useMemo(() => handlerId++, []);\n  const handler = useCallback(event => {\n    var _containerRef$current;\n    // don't call click handler if the mouse event was triggered by an auxiliary button (right click/wheel button/etc)\n    if (event instanceof MouseEvent && event.button > 0) {\n      return stopPropagation;\n    }\n\n    // don't call handler if the click happened inside of the container\n    if ((_containerRef$current = containerRef.current) !== null && _containerRef$current !== void 0 && _containerRef$current.contains(event.target)) {\n      return stopPropagation;\n    }\n\n    // don't call handler if click happened on an ignored ref\n    if (ignoreClickRefs && ignoreClickRefs.some(({\n      current\n    }) => current === null || current === void 0 ? void 0 : current.contains(event.target))) {\n      return stopPropagation;\n    }\n    onClickOutside(event);\n  }, [containerRef, ignoreClickRefs, onClickOutside]);\n  useEffect(() => {\n    if (Object.keys(registry).length === 0) {\n      // use capture to ensure we get all events\n      document.addEventListener('mousedown', handleClick, {\n        capture: true\n      });\n    }\n    register(id, handler);\n    return () => {\n      deregister(id);\n      if (Object.keys(registry).length === 0) {\n        document.removeEventListener('mousedown', handleClick, {\n          capture: true\n        });\n      }\n    };\n  }, [id, handler]);\n};\n\nexport { useOnOutsideClick };\n"],"mappings":"AAAA,SAASA,OAAO,EAAEC,WAAW,EAAEC,SAAS,QAAQ,OAAO;;AAEvD;AACA,MAAMC,eAAe,GAAG,IAAI;;AAE5B;AACA;AACA;AACA;AACA,SAASC,WAAWA,CAACC,KAAK,EAAE;EAC1B,IAAI,CAACA,KAAK,CAACC,gBAAgB,EAAE;IAC3B,KAAK,MAAMC,OAAO,IAAIC,MAAM,CAACC,MAAM,CAACC,QAAQ,CAAC,CAACC,OAAO,CAAC,CAAC,EAAE;MACvD;MACA,IAAIJ,OAAO,CAACF,KAAK,CAAC,KAAKF,eAAe,IAAIE,KAAK,CAACC,gBAAgB,EAAE;QAChE;MACF;IACF;EACF;AACF;AACA,MAAMI,QAAQ,GAAG,CAAC,CAAC;AACnB,SAASE,QAAQA,CAACC,EAAE,EAAEN,OAAO,EAAE;EAC7BG,QAAQ,CAACG,EAAE,CAAC,GAAGN,OAAO;AACxB;AACA,SAASO,UAAUA,CAACD,EAAE,EAAE;EACtB,OAAOH,QAAQ,CAACG,EAAE,CAAC;AACrB;;AAEA;AACA,IAAIE,SAAS,GAAG,CAAC;AACjB,MAAMC,iBAAiB,GAAGA,CAAC;EACzBC,YAAY;EACZC,eAAe;EACfC;AACF,CAAC,KAAK;EACJ,MAAMN,EAAE,GAAGb,OAAO,CAAC,MAAMe,SAAS,EAAE,EAAE,EAAE,CAAC;EACzC,MAAMR,OAAO,GAAGN,WAAW,CAACI,KAAK,IAAI;IACnC,IAAIe,qBAAqB;IACzB;IACA,IAAIf,KAAK,YAAYgB,UAAU,IAAIhB,KAAK,CAACiB,MAAM,GAAG,CAAC,EAAE;MACnD,OAAOnB,eAAe;IACxB;;IAEA;IACA,IAAI,CAACiB,qBAAqB,GAAGH,YAAY,CAACM,OAAO,MAAM,IAAI,IAAIH,qBAAqB,KAAK,KAAK,CAAC,IAAIA,qBAAqB,CAACI,QAAQ,CAACnB,KAAK,CAACoB,MAAM,CAAC,EAAE;MAC/I,OAAOtB,eAAe;IACxB;;IAEA;IACA,IAAIe,eAAe,IAAIA,eAAe,CAACQ,IAAI,CAAC,CAAC;MAC3CH;IACF,CAAC,KAAKA,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACC,QAAQ,CAACnB,KAAK,CAACoB,MAAM,CAAC,CAAC,EAAE;MACvF,OAAOtB,eAAe;IACxB;IACAgB,cAAc,CAACd,KAAK,CAAC;EACvB,CAAC,EAAE,CAACY,YAAY,EAAEC,eAAe,EAAEC,cAAc,CAAC,CAAC;EACnDjB,SAAS,CAAC,MAAM;IACd,IAAIM,MAAM,CAACmB,IAAI,CAACjB,QAAQ,CAAC,CAACkB,MAAM,KAAK,CAAC,EAAE;MACtC;MACAC,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAE1B,WAAW,EAAE;QAClD2B,OAAO,EAAE;MACX,CAAC,CAAC;IACJ;IACAnB,QAAQ,CAACC,EAAE,EAAEN,OAAO,CAAC;IACrB,OAAO,MAAM;MACXO,UAAU,CAACD,EAAE,CAAC;MACd,IAAIL,MAAM,CAACmB,IAAI,CAACjB,QAAQ,CAAC,CAACkB,MAAM,KAAK,CAAC,EAAE;QACtCC,QAAQ,CAACG,mBAAmB,CAAC,WAAW,EAAE5B,WAAW,EAAE;UACrD2B,OAAO,EAAE;QACX,CAAC,CAAC;MACJ;IACF,CAAC;EACH,CAAC,EAAE,CAAClB,EAAE,EAAEN,OAAO,CAAC,CAAC;AACnB,CAAC;AAED,SAASS,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}