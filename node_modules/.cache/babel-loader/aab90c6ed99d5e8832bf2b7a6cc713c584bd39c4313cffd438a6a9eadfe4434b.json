{"ast":null,"code":"import { CheckCircleFillIcon, AlertFillIcon } from '@primer/octicons-react';\nimport React from 'react';\nimport Box from '../../Box/Box.js';\nimport Text from '../../Text/Text.js';\nconst validationIconMap = {\n  success: CheckCircleFillIcon,\n  error: AlertFillIcon\n};\nconst validationColorMap = {\n  success: 'success.fg',\n  error: 'danger.fg'\n};\nconst InputValidation = ({\n  children,\n  id,\n  validationStatus,\n  sx\n}) => {\n  const IconComponent = validationStatus ? validationIconMap[validationStatus] : undefined;\n  const fgColor = validationStatus ? validationColorMap[validationStatus] : undefined;\n\n  // TODO: use `text-caption-lineHeight` token as a custom property when it's available\n  // then, we can move this all to CSS and use `calc` to get our height values\n  const captionLineHeight = 16 / 12;\n  const iconSize = 12;\n  const iconBoxMinHeight = iconSize * captionLineHeight;\n  return /*#__PURE__*/React.createElement(Text, {\n    sx: {\n      fontSize: 0,\n      fontWeight: 'bold',\n      alignItems: 'start',\n      color: fgColor,\n      display: 'flex',\n      a: {\n        color: 'currentColor',\n        textDecoration: 'underline'\n      },\n      ...sx\n    },\n    \"aria-live\": \"polite\"\n  }, IconComponent && /*#__PURE__*/React.createElement(Box, {\n    as: \"span\",\n    alignItems: \"center\",\n    display: \"flex\",\n    minHeight: iconBoxMinHeight,\n    mr: 1,\n    \"aria-hidden\": \"true\"\n  }, /*#__PURE__*/React.createElement(IconComponent, {\n    size: iconSize,\n    fill: \"currentColor\"\n  })), /*#__PURE__*/React.createElement(Box, {\n    as: \"span\",\n    id: id,\n    sx: {\n      lineHeight: captionLineHeight\n    }\n  }, children));\n};\nInputValidation.displayName = \"InputValidation\";\nexport { InputValidation as default };","map":{"version":3,"names":["CheckCircleFillIcon","AlertFillIcon","React","Box","Text","validationIconMap","success","error","validationColorMap","InputValidation","children","id","validationStatus","sx","IconComponent","undefined","fgColor","captionLineHeight","iconSize","iconBoxMinHeight","createElement","fontSize","fontWeight","alignItems","color","display","a","textDecoration","as","minHeight","mr","size","fill","lineHeight","displayName","default"],"sources":["/Users/steve/Documents/repos/github/api-insights/node_modules/@primer/react/lib-esm/internal/components/InputValidation.js"],"sourcesContent":["import { CheckCircleFillIcon, AlertFillIcon } from '@primer/octicons-react';\nimport React from 'react';\nimport Box from '../../Box/Box.js';\nimport Text from '../../Text/Text.js';\n\nconst validationIconMap = {\n  success: CheckCircleFillIcon,\n  error: AlertFillIcon\n};\nconst validationColorMap = {\n  success: 'success.fg',\n  error: 'danger.fg'\n};\nconst InputValidation = ({\n  children,\n  id,\n  validationStatus,\n  sx\n}) => {\n  const IconComponent = validationStatus ? validationIconMap[validationStatus] : undefined;\n  const fgColor = validationStatus ? validationColorMap[validationStatus] : undefined;\n\n  // TODO: use `text-caption-lineHeight` token as a custom property when it's available\n  // then, we can move this all to CSS and use `calc` to get our height values\n  const captionLineHeight = 16 / 12;\n  const iconSize = 12;\n  const iconBoxMinHeight = iconSize * captionLineHeight;\n  return /*#__PURE__*/React.createElement(Text, {\n    sx: {\n      fontSize: 0,\n      fontWeight: 'bold',\n      alignItems: 'start',\n      color: fgColor,\n      display: 'flex',\n      a: {\n        color: 'currentColor',\n        textDecoration: 'underline'\n      },\n      ...sx\n    },\n    \"aria-live\": \"polite\"\n  }, IconComponent && /*#__PURE__*/React.createElement(Box, {\n    as: \"span\",\n    alignItems: \"center\",\n    display: \"flex\",\n    minHeight: iconBoxMinHeight,\n    mr: 1,\n    \"aria-hidden\": \"true\"\n  }, /*#__PURE__*/React.createElement(IconComponent, {\n    size: iconSize,\n    fill: \"currentColor\"\n  })), /*#__PURE__*/React.createElement(Box, {\n    as: \"span\",\n    id: id,\n    sx: {\n      lineHeight: captionLineHeight\n    }\n  }, children));\n};\nInputValidation.displayName = \"InputValidation\";\n\nexport { InputValidation as default };\n"],"mappings":"AAAA,SAASA,mBAAmB,EAAEC,aAAa,QAAQ,wBAAwB;AAC3E,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,kBAAkB;AAClC,OAAOC,IAAI,MAAM,oBAAoB;AAErC,MAAMC,iBAAiB,GAAG;EACxBC,OAAO,EAAEN,mBAAmB;EAC5BO,KAAK,EAAEN;AACT,CAAC;AACD,MAAMO,kBAAkB,GAAG;EACzBF,OAAO,EAAE,YAAY;EACrBC,KAAK,EAAE;AACT,CAAC;AACD,MAAME,eAAe,GAAGA,CAAC;EACvBC,QAAQ;EACRC,EAAE;EACFC,gBAAgB;EAChBC;AACF,CAAC,KAAK;EACJ,MAAMC,aAAa,GAAGF,gBAAgB,GAAGP,iBAAiB,CAACO,gBAAgB,CAAC,GAAGG,SAAS;EACxF,MAAMC,OAAO,GAAGJ,gBAAgB,GAAGJ,kBAAkB,CAACI,gBAAgB,CAAC,GAAGG,SAAS;;EAEnF;EACA;EACA,MAAME,iBAAiB,GAAG,EAAE,GAAG,EAAE;EACjC,MAAMC,QAAQ,GAAG,EAAE;EACnB,MAAMC,gBAAgB,GAAGD,QAAQ,GAAGD,iBAAiB;EACrD,OAAO,aAAaf,KAAK,CAACkB,aAAa,CAAChB,IAAI,EAAE;IAC5CS,EAAE,EAAE;MACFQ,QAAQ,EAAE,CAAC;MACXC,UAAU,EAAE,MAAM;MAClBC,UAAU,EAAE,OAAO;MACnBC,KAAK,EAAER,OAAO;MACdS,OAAO,EAAE,MAAM;MACfC,CAAC,EAAE;QACDF,KAAK,EAAE,cAAc;QACrBG,cAAc,EAAE;MAClB,CAAC;MACD,GAAGd;IACL,CAAC;IACD,WAAW,EAAE;EACf,CAAC,EAAEC,aAAa,IAAI,aAAaZ,KAAK,CAACkB,aAAa,CAACjB,GAAG,EAAE;IACxDyB,EAAE,EAAE,MAAM;IACVL,UAAU,EAAE,QAAQ;IACpBE,OAAO,EAAE,MAAM;IACfI,SAAS,EAAEV,gBAAgB;IAC3BW,EAAE,EAAE,CAAC;IACL,aAAa,EAAE;EACjB,CAAC,EAAE,aAAa5B,KAAK,CAACkB,aAAa,CAACN,aAAa,EAAE;IACjDiB,IAAI,EAAEb,QAAQ;IACdc,IAAI,EAAE;EACR,CAAC,CAAC,CAAC,EAAE,aAAa9B,KAAK,CAACkB,aAAa,CAACjB,GAAG,EAAE;IACzCyB,EAAE,EAAE,MAAM;IACVjB,EAAE,EAAEA,EAAE;IACNE,EAAE,EAAE;MACFoB,UAAU,EAAEhB;IACd;EACF,CAAC,EAAEP,QAAQ,CAAC,CAAC;AACf,CAAC;AACDD,eAAe,CAACyB,WAAW,GAAG,iBAAiB;AAE/C,SAASzB,eAAe,IAAI0B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}