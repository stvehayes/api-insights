{"ast":null,"code":"import DurationFormat from './duration-format-ponyfill.js';\nconst durationRe = /^[-+]?P(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)W)?(?:(\\d+)D)?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+)S)?)?$/;\nexport const unitNames = ['year', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\nexport const isDuration = str => durationRe.test(str);\nexport class Duration {\n  constructor(years = 0, months = 0, weeks = 0, days = 0, hours = 0, minutes = 0, seconds = 0, milliseconds = 0) {\n    this.years = years;\n    this.months = months;\n    this.weeks = weeks;\n    this.days = days;\n    this.hours = hours;\n    this.minutes = minutes;\n    this.seconds = seconds;\n    this.milliseconds = milliseconds;\n    this.years || (this.years = 0);\n    this.sign || (this.sign = Math.sign(this.years));\n    this.months || (this.months = 0);\n    this.sign || (this.sign = Math.sign(this.months));\n    this.weeks || (this.weeks = 0);\n    this.sign || (this.sign = Math.sign(this.weeks));\n    this.days || (this.days = 0);\n    this.sign || (this.sign = Math.sign(this.days));\n    this.hours || (this.hours = 0);\n    this.sign || (this.sign = Math.sign(this.hours));\n    this.minutes || (this.minutes = 0);\n    this.sign || (this.sign = Math.sign(this.minutes));\n    this.seconds || (this.seconds = 0);\n    this.sign || (this.sign = Math.sign(this.seconds));\n    this.milliseconds || (this.milliseconds = 0);\n    this.sign || (this.sign = Math.sign(this.milliseconds));\n    this.blank = this.sign === 0;\n  }\n  abs() {\n    return new Duration(Math.abs(this.years), Math.abs(this.months), Math.abs(this.weeks), Math.abs(this.days), Math.abs(this.hours), Math.abs(this.minutes), Math.abs(this.seconds), Math.abs(this.milliseconds));\n  }\n  static from(durationLike) {\n    var _a;\n    if (typeof durationLike === 'string') {\n      const str = String(durationLike).trim();\n      const factor = str.startsWith('-') ? -1 : 1;\n      const parsed = (_a = str.match(durationRe)) === null || _a === void 0 ? void 0 : _a.slice(1).map(x => (Number(x) || 0) * factor);\n      if (!parsed) return new Duration();\n      return new Duration(...parsed);\n    } else if (typeof durationLike === 'object') {\n      const {\n        years,\n        months,\n        weeks,\n        days,\n        hours,\n        minutes,\n        seconds,\n        milliseconds\n      } = durationLike;\n      return new Duration(years, months, weeks, days, hours, minutes, seconds, milliseconds);\n    }\n    throw new RangeError('invalid duration');\n  }\n  static compare(one, two) {\n    const now = Date.now();\n    const oneApplied = Math.abs(applyDuration(now, Duration.from(one)).getTime() - now);\n    const twoApplied = Math.abs(applyDuration(now, Duration.from(two)).getTime() - now);\n    return oneApplied > twoApplied ? -1 : oneApplied < twoApplied ? 1 : 0;\n  }\n  toLocaleString(locale, opts) {\n    return new DurationFormat(locale, opts).format(this);\n  }\n}\nexport function applyDuration(date, duration) {\n  const r = new Date(date);\n  r.setFullYear(r.getFullYear() + duration.years);\n  r.setMonth(r.getMonth() + duration.months);\n  r.setDate(r.getDate() + duration.weeks * 7 + duration.days);\n  r.setHours(r.getHours() + duration.hours);\n  r.setMinutes(r.getMinutes() + duration.minutes);\n  r.setSeconds(r.getSeconds() + duration.seconds);\n  return r;\n}\nexport function elapsedTime(date, precision = 'second', now = Date.now()) {\n  const delta = date.getTime() - now;\n  if (delta === 0) return new Duration();\n  const sign = Math.sign(delta);\n  const ms = Math.abs(delta);\n  const sec = Math.floor(ms / 1000);\n  const min = Math.floor(sec / 60);\n  const hr = Math.floor(min / 60);\n  const day = Math.floor(hr / 24);\n  const month = Math.floor(day / 30);\n  const year = Math.floor(month / 12);\n  const i = unitNames.indexOf(precision) || unitNames.length;\n  return new Duration(i >= 0 ? year * sign : 0, i >= 1 ? (month - year * 12) * sign : 0, 0, i >= 3 ? (day - month * 30) * sign : 0, i >= 4 ? (hr - day * 24) * sign : 0, i >= 5 ? (min - hr * 60) * sign : 0, i >= 6 ? (sec - min * 60) * sign : 0, i >= 7 ? (ms - sec * 1000) * sign : 0);\n}\nexport function roundToSingleUnit(duration, {\n  relativeTo = Date.now()\n} = {}) {\n  relativeTo = new Date(relativeTo);\n  if (duration.blank) return duration;\n  const sign = duration.sign;\n  let years = Math.abs(duration.years);\n  let months = Math.abs(duration.months);\n  let weeks = Math.abs(duration.weeks);\n  let days = Math.abs(duration.days);\n  let hours = Math.abs(duration.hours);\n  let minutes = Math.abs(duration.minutes);\n  let seconds = Math.abs(duration.seconds);\n  let milliseconds = Math.abs(duration.milliseconds);\n  if (milliseconds >= 900) seconds += Math.round(milliseconds / 1000);\n  if (seconds || minutes || hours || days || weeks || months || years) {\n    milliseconds = 0;\n  }\n  if (seconds >= 55) minutes += Math.round(seconds / 60);\n  if (minutes || hours || days || weeks || months || years) seconds = 0;\n  if (minutes >= 55) hours += Math.round(minutes / 60);\n  if (hours || days || weeks || months || years) minutes = 0;\n  if (days && hours >= 12) days += Math.round(hours / 24);\n  if (!days && hours >= 21) days += Math.round(hours / 24);\n  if (days || weeks || months || years) hours = 0;\n  const currentYear = relativeTo.getFullYear();\n  let currentMonth = relativeTo.getMonth();\n  const currentDate = relativeTo.getDate();\n  if (days >= 27 || years + months && days) {\n    relativeTo.setDate(currentDate + days * sign);\n    months += Math.abs(relativeTo.getFullYear() >= currentYear ? relativeTo.getMonth() - currentMonth : relativeTo.getMonth() - currentMonth - 12);\n    if (months) {\n      days = 0;\n    }\n    currentMonth = relativeTo.getMonth();\n  }\n  if (days >= 6) weeks += Math.round(days / 7);\n  if (weeks || months || years) days = 0;\n  if (weeks >= 4) months += Math.round(weeks / 4);\n  if (months || years) weeks = 0;\n  if (months >= 11 || years && months) {\n    relativeTo.setMonth(relativeTo.getMonth() + months * sign);\n    years += Math.abs(currentYear - relativeTo.getFullYear());\n  }\n  if (years) months = 0;\n  return new Duration(years * sign, months * sign, weeks * sign, days * sign, hours * sign, minutes * sign, seconds * sign, milliseconds * sign);\n}\nexport function getRelativeTimeUnit(duration, opts) {\n  const rounded = roundToSingleUnit(duration, opts);\n  if (rounded.blank) return [0, 'second'];\n  for (const unit of unitNames) {\n    if (unit === 'millisecond') continue;\n    const val = rounded[`${unit}s`];\n    if (val) return [val, unit];\n  }\n  return [0, 'second'];\n}","map":{"version":3,"names":["DurationFormat","durationRe","unitNames","isDuration","str","test","Duration","constructor","years","months","weeks","days","hours","minutes","seconds","milliseconds","sign","Math","blank","abs","from","durationLike","_a","String","trim","factor","startsWith","parsed","match","slice","map","x","Number","RangeError","compare","one","two","now","Date","oneApplied","applyDuration","getTime","twoApplied","toLocaleString","locale","opts","format","date","duration","r","setFullYear","getFullYear","setMonth","getMonth","setDate","getDate","setHours","getHours","setMinutes","getMinutes","setSeconds","getSeconds","elapsedTime","precision","delta","ms","sec","floor","min","hr","day","month","year","i","indexOf","length","roundToSingleUnit","relativeTo","round","currentYear","currentMonth","currentDate","getRelativeTimeUnit","rounded","unit","val"],"sources":["/Users/steve/Documents/repos/github/licensing-report/node_modules/@github/relative-time-element/dist/duration.js"],"sourcesContent":["import DurationFormat from './duration-format-ponyfill.js';\nconst durationRe = /^[-+]?P(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)W)?(?:(\\d+)D)?(?:T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+)S)?)?$/;\nexport const unitNames = ['year', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\nexport const isDuration = (str) => durationRe.test(str);\nexport class Duration {\n    constructor(years = 0, months = 0, weeks = 0, days = 0, hours = 0, minutes = 0, seconds = 0, milliseconds = 0) {\n        this.years = years;\n        this.months = months;\n        this.weeks = weeks;\n        this.days = days;\n        this.hours = hours;\n        this.minutes = minutes;\n        this.seconds = seconds;\n        this.milliseconds = milliseconds;\n        this.years || (this.years = 0);\n        this.sign || (this.sign = Math.sign(this.years));\n        this.months || (this.months = 0);\n        this.sign || (this.sign = Math.sign(this.months));\n        this.weeks || (this.weeks = 0);\n        this.sign || (this.sign = Math.sign(this.weeks));\n        this.days || (this.days = 0);\n        this.sign || (this.sign = Math.sign(this.days));\n        this.hours || (this.hours = 0);\n        this.sign || (this.sign = Math.sign(this.hours));\n        this.minutes || (this.minutes = 0);\n        this.sign || (this.sign = Math.sign(this.minutes));\n        this.seconds || (this.seconds = 0);\n        this.sign || (this.sign = Math.sign(this.seconds));\n        this.milliseconds || (this.milliseconds = 0);\n        this.sign || (this.sign = Math.sign(this.milliseconds));\n        this.blank = this.sign === 0;\n    }\n    abs() {\n        return new Duration(Math.abs(this.years), Math.abs(this.months), Math.abs(this.weeks), Math.abs(this.days), Math.abs(this.hours), Math.abs(this.minutes), Math.abs(this.seconds), Math.abs(this.milliseconds));\n    }\n    static from(durationLike) {\n        var _a;\n        if (typeof durationLike === 'string') {\n            const str = String(durationLike).trim();\n            const factor = str.startsWith('-') ? -1 : 1;\n            const parsed = (_a = str\n                .match(durationRe)) === null || _a === void 0 ? void 0 : _a.slice(1).map(x => (Number(x) || 0) * factor);\n            if (!parsed)\n                return new Duration();\n            return new Duration(...parsed);\n        }\n        else if (typeof durationLike === 'object') {\n            const { years, months, weeks, days, hours, minutes, seconds, milliseconds } = durationLike;\n            return new Duration(years, months, weeks, days, hours, minutes, seconds, milliseconds);\n        }\n        throw new RangeError('invalid duration');\n    }\n    static compare(one, two) {\n        const now = Date.now();\n        const oneApplied = Math.abs(applyDuration(now, Duration.from(one)).getTime() - now);\n        const twoApplied = Math.abs(applyDuration(now, Duration.from(two)).getTime() - now);\n        return oneApplied > twoApplied ? -1 : oneApplied < twoApplied ? 1 : 0;\n    }\n    toLocaleString(locale, opts) {\n        return new DurationFormat(locale, opts).format(this);\n    }\n}\nexport function applyDuration(date, duration) {\n    const r = new Date(date);\n    r.setFullYear(r.getFullYear() + duration.years);\n    r.setMonth(r.getMonth() + duration.months);\n    r.setDate(r.getDate() + duration.weeks * 7 + duration.days);\n    r.setHours(r.getHours() + duration.hours);\n    r.setMinutes(r.getMinutes() + duration.minutes);\n    r.setSeconds(r.getSeconds() + duration.seconds);\n    return r;\n}\nexport function elapsedTime(date, precision = 'second', now = Date.now()) {\n    const delta = date.getTime() - now;\n    if (delta === 0)\n        return new Duration();\n    const sign = Math.sign(delta);\n    const ms = Math.abs(delta);\n    const sec = Math.floor(ms / 1000);\n    const min = Math.floor(sec / 60);\n    const hr = Math.floor(min / 60);\n    const day = Math.floor(hr / 24);\n    const month = Math.floor(day / 30);\n    const year = Math.floor(month / 12);\n    const i = unitNames.indexOf(precision) || unitNames.length;\n    return new Duration(i >= 0 ? year * sign : 0, i >= 1 ? (month - year * 12) * sign : 0, 0, i >= 3 ? (day - month * 30) * sign : 0, i >= 4 ? (hr - day * 24) * sign : 0, i >= 5 ? (min - hr * 60) * sign : 0, i >= 6 ? (sec - min * 60) * sign : 0, i >= 7 ? (ms - sec * 1000) * sign : 0);\n}\nexport function roundToSingleUnit(duration, { relativeTo = Date.now() } = {}) {\n    relativeTo = new Date(relativeTo);\n    if (duration.blank)\n        return duration;\n    const sign = duration.sign;\n    let years = Math.abs(duration.years);\n    let months = Math.abs(duration.months);\n    let weeks = Math.abs(duration.weeks);\n    let days = Math.abs(duration.days);\n    let hours = Math.abs(duration.hours);\n    let minutes = Math.abs(duration.minutes);\n    let seconds = Math.abs(duration.seconds);\n    let milliseconds = Math.abs(duration.milliseconds);\n    if (milliseconds >= 900)\n        seconds += Math.round(milliseconds / 1000);\n    if (seconds || minutes || hours || days || weeks || months || years) {\n        milliseconds = 0;\n    }\n    if (seconds >= 55)\n        minutes += Math.round(seconds / 60);\n    if (minutes || hours || days || weeks || months || years)\n        seconds = 0;\n    if (minutes >= 55)\n        hours += Math.round(minutes / 60);\n    if (hours || days || weeks || months || years)\n        minutes = 0;\n    if (days && hours >= 12)\n        days += Math.round(hours / 24);\n    if (!days && hours >= 21)\n        days += Math.round(hours / 24);\n    if (days || weeks || months || years)\n        hours = 0;\n    const currentYear = relativeTo.getFullYear();\n    let currentMonth = relativeTo.getMonth();\n    const currentDate = relativeTo.getDate();\n    if (days >= 27 || (years + months && days)) {\n        relativeTo.setDate(currentDate + days * sign);\n        months += Math.abs(relativeTo.getFullYear() >= currentYear\n            ? relativeTo.getMonth() - currentMonth\n            : relativeTo.getMonth() - currentMonth - 12);\n        if (months) {\n            days = 0;\n        }\n        currentMonth = relativeTo.getMonth();\n    }\n    if (days >= 6)\n        weeks += Math.round(days / 7);\n    if (weeks || months || years)\n        days = 0;\n    if (weeks >= 4)\n        months += Math.round(weeks / 4);\n    if (months || years)\n        weeks = 0;\n    if (months >= 11 || (years && months)) {\n        relativeTo.setMonth(relativeTo.getMonth() + months * sign);\n        years += Math.abs(currentYear - relativeTo.getFullYear());\n    }\n    if (years)\n        months = 0;\n    return new Duration(years * sign, months * sign, weeks * sign, days * sign, hours * sign, minutes * sign, seconds * sign, milliseconds * sign);\n}\nexport function getRelativeTimeUnit(duration, opts) {\n    const rounded = roundToSingleUnit(duration, opts);\n    if (rounded.blank)\n        return [0, 'second'];\n    for (const unit of unitNames) {\n        if (unit === 'millisecond')\n            continue;\n        const val = rounded[`${unit}s`];\n        if (val)\n            return [val, unit];\n    }\n    return [0, 'second'];\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}