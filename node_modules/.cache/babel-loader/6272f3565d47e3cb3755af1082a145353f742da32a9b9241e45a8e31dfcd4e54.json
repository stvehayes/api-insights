{"ast":null,"code":"import React, { useContext, useRef, useState, useMemo, useEffect } from 'react';\nimport { scrollIntoView } from '@primer/behaviors';\nimport { ActionList } from '../ActionList/index.js';\nimport { useFocusZone } from '../hooks/useFocusZone.js';\nimport Box from '../Box/Box.js';\nimport StyledSpinner from '../Spinner/Spinner.js';\nimport { useId } from '../hooks/useId.js';\nimport { AutocompleteContext } from './AutocompleteContext.js';\nimport { PlusIcon } from '@primer/octicons-react';\nimport VisuallyHidden from '../_VisuallyHidden.js';\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nconst getDefaultSortFn = isItemSelectedFn => (itemIdA, itemIdB) => isItemSelectedFn(itemIdA) === isItemSelectedFn(itemIdB) ? 0 : isItemSelectedFn(itemIdA) ? -1 : 1;\nconst menuScrollMargins = {\n  startMargin: 0,\n  endMargin: 8\n};\nfunction getDefaultItemFilter(filterValue) {\n  return function (item, _i) {\n    var _item$text;\n    return Boolean((_item$text = item.text) === null || _item$text === void 0 ? void 0 : _item$text.toLowerCase().startsWith(filterValue.toLowerCase()));\n  };\n}\nfunction getdefaultCheckedSelectionChange(setInputValueFn) {\n  return function (itemOrItems) {\n    const {\n      text = ''\n    } = Array.isArray(itemOrItems) ? itemOrItems.slice(-1)[0] : itemOrItems;\n    setInputValueFn(text);\n  };\n}\nconst isItemSelected = (itemId, selectedItemIds) => selectedItemIds.includes(itemId);\nfunction getItemById(itemId, items) {\n  return items.find(item => item.id === itemId);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nfunction AutocompleteMenu(props) {\n  const autocompleteContext = useContext(AutocompleteContext);\n  if (autocompleteContext === null) {\n    throw new Error('AutocompleteContext returned null values');\n  }\n  const {\n    activeDescendantRef,\n    id,\n    inputRef,\n    inputValue = '',\n    scrollContainerRef,\n    setAutocompleteSuggestion,\n    setShowMenu,\n    setInputValue,\n    setIsMenuDirectlyActivated,\n    setSelectedItemLength,\n    showMenu\n  } = autocompleteContext;\n  const {\n    items,\n    selectedItemIds,\n    sortOnCloseFn,\n    emptyStateText = 'No selectable options',\n    addNewItem,\n    loading,\n    selectionVariant = 'single',\n    filterFn,\n    'aria-labelledby': ariaLabelledBy,\n    onOpenChange,\n    onSelectedChange,\n    customScrollContainerRef\n  } = props;\n  const listContainerRef = useRef(null);\n  const allItemsToRenderRef = useRef([]);\n  const [highlightedItem, setHighlightedItem] = useState();\n  const [sortedItemIds, setSortedItemIds] = useState(items.map(({\n    id: itemId\n  }) => itemId));\n  const generatedUniqueId = useId(id);\n  const selectableItems = useMemo(() => items.map(selectableItem => {\n    return {\n      ...selectableItem,\n      role: 'option',\n      id: selectableItem.id,\n      active: (highlightedItem === null || highlightedItem === void 0 ? void 0 : highlightedItem.id) === selectableItem.id,\n      selected: selectionVariant === 'multiple' ? selectedItemIds.includes(selectableItem.id) : undefined,\n      onAction: item => {\n        const otherSelectedItemIds = selectedItemIds.filter(selectedItemId => selectedItemId !== item.id);\n        const newSelectedItemIds = selectedItemIds.includes(item.id) ? otherSelectedItemIds : [...otherSelectedItemIds, item.id];\n        const onSelectedChangeFn = onSelectedChange ? onSelectedChange : getdefaultCheckedSelectionChange(setInputValue);\n        onSelectedChangeFn(newSelectedItemIds.map(newSelectedItemId => getItemById(newSelectedItemId, items)));\n        if (selectionVariant === 'multiple') {\n          setInputValue('');\n          setAutocompleteSuggestion('');\n        } else {\n          var _inputRef$current;\n          setShowMenu(false);\n          (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n        }\n      }\n    };\n  }), [highlightedItem, items, selectedItemIds, inputRef, onSelectedChange, selectionVariant, setAutocompleteSuggestion, setInputValue, setShowMenu]);\n  const itemSortOrderData = useMemo(() => sortedItemIds.reduce((acc, curr, i) => {\n    acc[curr] = i;\n    return acc;\n  }, {}), [sortedItemIds]);\n  const sortedAndFilteredItemsToRender = useMemo(() => selectableItems.filter(filterFn ? filterFn : getDefaultItemFilter(inputValue)).sort((a, b) => itemSortOrderData[a.id] - itemSortOrderData[b.id]), [selectableItems, itemSortOrderData, filterFn, inputValue]);\n  const allItemsToRender = useMemo(() => [\n  // sorted and filtered selectable items\n  ...sortedAndFilteredItemsToRender,\n  // menu item used for creating a token from whatever is in the text input\n  ...(addNewItem ? [{\n    ...addNewItem,\n    role: 'option',\n    key: addNewItem.id,\n    active: (highlightedItem === null || highlightedItem === void 0 ? void 0 : highlightedItem.id) === addNewItem.id,\n    selected: selectionVariant === 'multiple' ? selectedItemIds.includes(addNewItem.id) : undefined,\n    leadingVisual: () => /*#__PURE__*/React.createElement(PlusIcon, null),\n    onAction: item => {\n      // TODO: make it possible to pass a leadingVisual when using `addNewItem`\n      addNewItem.handleAddItem({\n        ...item,\n        id: item.id || generatedUniqueId,\n        leadingVisual: undefined\n      });\n      if (selectionVariant === 'multiple') {\n        setInputValue('');\n        setAutocompleteSuggestion('');\n      }\n    }\n  }] : [])], [sortedAndFilteredItemsToRender, addNewItem, setAutocompleteSuggestion, selectionVariant, setInputValue, generatedUniqueId, highlightedItem, selectedItemIds]);\n  React.useEffect(() => {\n    allItemsToRenderRef.current = allItemsToRender;\n  });\n  useFocusZone({\n    containerRef: listContainerRef,\n    focusOutBehavior: 'wrap',\n    focusableElementFilter: element => {\n      return !(element instanceof HTMLInputElement);\n    },\n    activeDescendantFocus: inputRef,\n    onActiveDescendantChanged: (current, _previous, directlyActivated) => {\n      activeDescendantRef.current = current || null;\n      if (current) {\n        const selectedItem = allItemsToRenderRef.current.find(item => {\n          var _current$closest;\n          return item.id === ((_current$closest = current.closest('li')) === null || _current$closest === void 0 ? void 0 : _current$closest.getAttribute('data-id'));\n        });\n        setHighlightedItem(selectedItem);\n        setIsMenuDirectlyActivated(directlyActivated);\n      }\n      if (current && customScrollContainerRef && customScrollContainerRef.current && directlyActivated) {\n        scrollIntoView(current, customScrollContainerRef.current, menuScrollMargins);\n      } else if (current && scrollContainerRef.current && directlyActivated) {\n        scrollIntoView(current, scrollContainerRef.current, menuScrollMargins);\n      }\n    }\n  }, [loading]);\n  useEffect(() => {\n    var _highlightedItem$text;\n    if (highlightedItem !== null && highlightedItem !== void 0 && (_highlightedItem$text = highlightedItem.text) !== null && _highlightedItem$text !== void 0 && _highlightedItem$text.startsWith(inputValue) && !selectedItemIds.includes(highlightedItem.id)) {\n      setAutocompleteSuggestion(highlightedItem.text);\n    } else {\n      setAutocompleteSuggestion('');\n    }\n  }, [highlightedItem, inputValue, selectedItemIds, setAutocompleteSuggestion]);\n  useEffect(() => {\n    const itemIdSortResult = [...sortedItemIds].sort(sortOnCloseFn ? sortOnCloseFn : getDefaultSortFn(itemId => isItemSelected(itemId, selectedItemIds)));\n    const sortResultMatchesState = itemIdSortResult.length === sortedItemIds.length && itemIdSortResult.every((element, index) => element === sortedItemIds[index]);\n    if (showMenu === false && !sortResultMatchesState) {\n      setSortedItemIds(itemIdSortResult);\n    }\n    onOpenChange && onOpenChange(Boolean(showMenu));\n  }, [showMenu, onOpenChange, selectedItemIds, sortOnCloseFn, sortedItemIds]);\n  useEffect(() => {\n    if (selectedItemIds.length) {\n      setSelectedItemLength(selectedItemIds.length);\n    }\n  }, [selectedItemIds, setSelectedItemLength]);\n  if (selectionVariant === 'single' && selectedItemIds.length > 1) {\n    throw new Error('Autocomplete: selectionVariant \"single\" cannot be used with multiple selected items');\n  }\n  return /*#__PURE__*/React.createElement(VisuallyHidden, {\n    isVisible: showMenu\n  }, loading ? /*#__PURE__*/React.createElement(Box, {\n    p: 3,\n    display: \"flex\",\n    justifyContent: \"center\"\n  }, /*#__PURE__*/React.createElement(StyledSpinner, null)) : /*#__PURE__*/React.createElement(\"div\", {\n    ref: listContainerRef\n  }, allItemsToRender.length ? /*#__PURE__*/React.createElement(ActionList, {\n    selectionVariant: selectionVariant // TODO: make this configurable\n    ,\n\n    role: \"listbox\",\n    id: `${id}-listbox`,\n    \"aria-labelledby\": ariaLabelledBy\n  }, allItemsToRender.map(item => {\n    const {\n      id,\n      onAction,\n      children,\n      text,\n      leadingVisual: LeadingVisual,\n      trailingVisual: TrailingVisual,\n      ...itemProps\n    } = item;\n    return /*#__PURE__*/React.createElement(ActionList.Item, _extends({\n      key: id,\n      onSelect: () => onAction(item)\n    }, itemProps, {\n      id: id,\n      \"data-id\": id\n    }), LeadingVisual && /*#__PURE__*/React.createElement(ActionList.LeadingVisual, null, /*#__PURE__*/React.createElement(LeadingVisual, null)), children !== null && children !== void 0 ? children : text, TrailingVisual && /*#__PURE__*/React.createElement(ActionList.TrailingVisual, null, /*#__PURE__*/React.createElement(TrailingVisual, null)));\n  })) : emptyStateText !== false && emptyStateText !== null ? /*#__PURE__*/React.createElement(Box, {\n    p: 3\n  }, emptyStateText) : null));\n}\nAutocompleteMenu.displayName = \"AutocompleteMenu\";\nAutocompleteMenu.displayName = 'AutocompleteMenu';\nexport { AutocompleteMenu as default };","map":{"version":3,"names":["React","useContext","useRef","useState","useMemo","useEffect","scrollIntoView","ActionList","useFocusZone","Box","StyledSpinner","useId","AutocompleteContext","PlusIcon","VisuallyHidden","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","getDefaultSortFn","isItemSelectedFn","itemIdA","itemIdB","menuScrollMargins","startMargin","endMargin","getDefaultItemFilter","filterValue","item","_i","_item$text","Boolean","text","toLowerCase","startsWith","getdefaultCheckedSelectionChange","setInputValueFn","itemOrItems","Array","isArray","slice","isItemSelected","itemId","selectedItemIds","includes","getItemById","items","find","id","AutocompleteMenu","props","autocompleteContext","Error","activeDescendantRef","inputRef","inputValue","scrollContainerRef","setAutocompleteSuggestion","setShowMenu","setInputValue","setIsMenuDirectlyActivated","setSelectedItemLength","showMenu","sortOnCloseFn","emptyStateText","addNewItem","loading","selectionVariant","filterFn","ariaLabelledBy","onOpenChange","onSelectedChange","customScrollContainerRef","listContainerRef","allItemsToRenderRef","highlightedItem","setHighlightedItem","sortedItemIds","setSortedItemIds","map","generatedUniqueId","selectableItems","selectableItem","role","active","selected","undefined","onAction","otherSelectedItemIds","filter","selectedItemId","newSelectedItemIds","onSelectedChangeFn","newSelectedItemId","_inputRef$current","current","setSelectionRange","value","itemSortOrderData","reduce","acc","curr","sortedAndFilteredItemsToRender","sort","a","b","allItemsToRender","leadingVisual","createElement","handleAddItem","containerRef","focusOutBehavior","focusableElementFilter","element","HTMLInputElement","activeDescendantFocus","onActiveDescendantChanged","_previous","directlyActivated","selectedItem","_current$closest","closest","getAttribute","_highlightedItem$text","itemIdSortResult","sortResultMatchesState","every","index","isVisible","p","display","justifyContent","ref","children","LeadingVisual","trailingVisual","TrailingVisual","itemProps","Item","onSelect","displayName","default"],"sources":["/Users/steve/Documents/repos/github/licensing/node_modules/@primer/react/lib-esm/Autocomplete/AutocompleteMenu.js"],"sourcesContent":["import React, { useContext, useRef, useState, useMemo, useEffect } from 'react';\nimport { scrollIntoView } from '@primer/behaviors';\nimport { ActionList } from '../ActionList/index.js';\nimport { useFocusZone } from '../hooks/useFocusZone.js';\nimport Box from '../Box/Box.js';\nimport StyledSpinner from '../Spinner/Spinner.js';\nimport { useId } from '../hooks/useId.js';\nimport { AutocompleteContext } from './AutocompleteContext.js';\nimport { PlusIcon } from '@primer/octicons-react';\nimport VisuallyHidden from '../_VisuallyHidden.js';\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nconst getDefaultSortFn = isItemSelectedFn => (itemIdA, itemIdB) => isItemSelectedFn(itemIdA) === isItemSelectedFn(itemIdB) ? 0 : isItemSelectedFn(itemIdA) ? -1 : 1;\nconst menuScrollMargins = {\n  startMargin: 0,\n  endMargin: 8\n};\nfunction getDefaultItemFilter(filterValue) {\n  return function (item, _i) {\n    var _item$text;\n    return Boolean((_item$text = item.text) === null || _item$text === void 0 ? void 0 : _item$text.toLowerCase().startsWith(filterValue.toLowerCase()));\n  };\n}\nfunction getdefaultCheckedSelectionChange(setInputValueFn) {\n  return function (itemOrItems) {\n    const {\n      text = ''\n    } = Array.isArray(itemOrItems) ? itemOrItems.slice(-1)[0] : itemOrItems;\n    setInputValueFn(text);\n  };\n}\nconst isItemSelected = (itemId, selectedItemIds) => selectedItemIds.includes(itemId);\nfunction getItemById(itemId, items) {\n  return items.find(item => item.id === itemId);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nfunction AutocompleteMenu(props) {\n  const autocompleteContext = useContext(AutocompleteContext);\n  if (autocompleteContext === null) {\n    throw new Error('AutocompleteContext returned null values');\n  }\n  const {\n    activeDescendantRef,\n    id,\n    inputRef,\n    inputValue = '',\n    scrollContainerRef,\n    setAutocompleteSuggestion,\n    setShowMenu,\n    setInputValue,\n    setIsMenuDirectlyActivated,\n    setSelectedItemLength,\n    showMenu\n  } = autocompleteContext;\n  const {\n    items,\n    selectedItemIds,\n    sortOnCloseFn,\n    emptyStateText = 'No selectable options',\n    addNewItem,\n    loading,\n    selectionVariant = 'single',\n    filterFn,\n    'aria-labelledby': ariaLabelledBy,\n    onOpenChange,\n    onSelectedChange,\n    customScrollContainerRef\n  } = props;\n  const listContainerRef = useRef(null);\n  const allItemsToRenderRef = useRef([]);\n  const [highlightedItem, setHighlightedItem] = useState();\n  const [sortedItemIds, setSortedItemIds] = useState(items.map(({\n    id: itemId\n  }) => itemId));\n  const generatedUniqueId = useId(id);\n  const selectableItems = useMemo(() => items.map(selectableItem => {\n    return {\n      ...selectableItem,\n      role: 'option',\n      id: selectableItem.id,\n      active: (highlightedItem === null || highlightedItem === void 0 ? void 0 : highlightedItem.id) === selectableItem.id,\n      selected: selectionVariant === 'multiple' ? selectedItemIds.includes(selectableItem.id) : undefined,\n      onAction: item => {\n        const otherSelectedItemIds = selectedItemIds.filter(selectedItemId => selectedItemId !== item.id);\n        const newSelectedItemIds = selectedItemIds.includes(item.id) ? otherSelectedItemIds : [...otherSelectedItemIds, item.id];\n        const onSelectedChangeFn = onSelectedChange ? onSelectedChange : getdefaultCheckedSelectionChange(setInputValue);\n        onSelectedChangeFn(newSelectedItemIds.map(newSelectedItemId => getItemById(newSelectedItemId, items)));\n        if (selectionVariant === 'multiple') {\n          setInputValue('');\n          setAutocompleteSuggestion('');\n        } else {\n          var _inputRef$current;\n          setShowMenu(false);\n          (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n        }\n      }\n    };\n  }), [highlightedItem, items, selectedItemIds, inputRef, onSelectedChange, selectionVariant, setAutocompleteSuggestion, setInputValue, setShowMenu]);\n  const itemSortOrderData = useMemo(() => sortedItemIds.reduce((acc, curr, i) => {\n    acc[curr] = i;\n    return acc;\n  }, {}), [sortedItemIds]);\n  const sortedAndFilteredItemsToRender = useMemo(() => selectableItems.filter(filterFn ? filterFn : getDefaultItemFilter(inputValue)).sort((a, b) => itemSortOrderData[a.id] - itemSortOrderData[b.id]), [selectableItems, itemSortOrderData, filterFn, inputValue]);\n  const allItemsToRender = useMemo(() => [\n  // sorted and filtered selectable items\n  ...sortedAndFilteredItemsToRender,\n  // menu item used for creating a token from whatever is in the text input\n  ...(addNewItem ? [{\n    ...addNewItem,\n    role: 'option',\n    key: addNewItem.id,\n    active: (highlightedItem === null || highlightedItem === void 0 ? void 0 : highlightedItem.id) === addNewItem.id,\n    selected: selectionVariant === 'multiple' ? selectedItemIds.includes(addNewItem.id) : undefined,\n    leadingVisual: () => /*#__PURE__*/React.createElement(PlusIcon, null),\n    onAction: item => {\n      // TODO: make it possible to pass a leadingVisual when using `addNewItem`\n      addNewItem.handleAddItem({\n        ...item,\n        id: item.id || generatedUniqueId,\n        leadingVisual: undefined\n      });\n      if (selectionVariant === 'multiple') {\n        setInputValue('');\n        setAutocompleteSuggestion('');\n      }\n    }\n  }] : [])], [sortedAndFilteredItemsToRender, addNewItem, setAutocompleteSuggestion, selectionVariant, setInputValue, generatedUniqueId, highlightedItem, selectedItemIds]);\n  React.useEffect(() => {\n    allItemsToRenderRef.current = allItemsToRender;\n  });\n  useFocusZone({\n    containerRef: listContainerRef,\n    focusOutBehavior: 'wrap',\n    focusableElementFilter: element => {\n      return !(element instanceof HTMLInputElement);\n    },\n    activeDescendantFocus: inputRef,\n    onActiveDescendantChanged: (current, _previous, directlyActivated) => {\n      activeDescendantRef.current = current || null;\n      if (current) {\n        const selectedItem = allItemsToRenderRef.current.find(item => {\n          var _current$closest;\n          return item.id === ((_current$closest = current.closest('li')) === null || _current$closest === void 0 ? void 0 : _current$closest.getAttribute('data-id'));\n        });\n        setHighlightedItem(selectedItem);\n        setIsMenuDirectlyActivated(directlyActivated);\n      }\n      if (current && customScrollContainerRef && customScrollContainerRef.current && directlyActivated) {\n        scrollIntoView(current, customScrollContainerRef.current, menuScrollMargins);\n      } else if (current && scrollContainerRef.current && directlyActivated) {\n        scrollIntoView(current, scrollContainerRef.current, menuScrollMargins);\n      }\n    }\n  }, [loading]);\n  useEffect(() => {\n    var _highlightedItem$text;\n    if (highlightedItem !== null && highlightedItem !== void 0 && (_highlightedItem$text = highlightedItem.text) !== null && _highlightedItem$text !== void 0 && _highlightedItem$text.startsWith(inputValue) && !selectedItemIds.includes(highlightedItem.id)) {\n      setAutocompleteSuggestion(highlightedItem.text);\n    } else {\n      setAutocompleteSuggestion('');\n    }\n  }, [highlightedItem, inputValue, selectedItemIds, setAutocompleteSuggestion]);\n  useEffect(() => {\n    const itemIdSortResult = [...sortedItemIds].sort(sortOnCloseFn ? sortOnCloseFn : getDefaultSortFn(itemId => isItemSelected(itemId, selectedItemIds)));\n    const sortResultMatchesState = itemIdSortResult.length === sortedItemIds.length && itemIdSortResult.every((element, index) => element === sortedItemIds[index]);\n    if (showMenu === false && !sortResultMatchesState) {\n      setSortedItemIds(itemIdSortResult);\n    }\n    onOpenChange && onOpenChange(Boolean(showMenu));\n  }, [showMenu, onOpenChange, selectedItemIds, sortOnCloseFn, sortedItemIds]);\n  useEffect(() => {\n    if (selectedItemIds.length) {\n      setSelectedItemLength(selectedItemIds.length);\n    }\n  }, [selectedItemIds, setSelectedItemLength]);\n  if (selectionVariant === 'single' && selectedItemIds.length > 1) {\n    throw new Error('Autocomplete: selectionVariant \"single\" cannot be used with multiple selected items');\n  }\n  return /*#__PURE__*/React.createElement(VisuallyHidden, {\n    isVisible: showMenu\n  }, loading ? /*#__PURE__*/React.createElement(Box, {\n    p: 3,\n    display: \"flex\",\n    justifyContent: \"center\"\n  }, /*#__PURE__*/React.createElement(StyledSpinner, null)) : /*#__PURE__*/React.createElement(\"div\", {\n    ref: listContainerRef\n  }, allItemsToRender.length ? /*#__PURE__*/React.createElement(ActionList, {\n    selectionVariant: selectionVariant // TODO: make this configurable\n    ,\n    role: \"listbox\",\n    id: `${id}-listbox`,\n    \"aria-labelledby\": ariaLabelledBy\n  }, allItemsToRender.map(item => {\n    const {\n      id,\n      onAction,\n      children,\n      text,\n      leadingVisual: LeadingVisual,\n      trailingVisual: TrailingVisual,\n      ...itemProps\n    } = item;\n    return /*#__PURE__*/React.createElement(ActionList.Item, _extends({\n      key: id,\n      onSelect: () => onAction(item)\n    }, itemProps, {\n      id: id,\n      \"data-id\": id\n    }), LeadingVisual && /*#__PURE__*/React.createElement(ActionList.LeadingVisual, null, /*#__PURE__*/React.createElement(LeadingVisual, null)), children !== null && children !== void 0 ? children : text, TrailingVisual && /*#__PURE__*/React.createElement(ActionList.TrailingVisual, null, /*#__PURE__*/React.createElement(TrailingVisual, null)));\n  })) : emptyStateText !== false && emptyStateText !== null ? /*#__PURE__*/React.createElement(Box, {\n    p: 3\n  }, emptyStateText) : null));\n}\nAutocompleteMenu.displayName = \"AutocompleteMenu\";\nAutocompleteMenu.displayName = 'AutocompleteMenu';\n\nexport { AutocompleteMenu as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}