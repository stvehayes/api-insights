{"ast":null,"code":"import React, { forwardRef, useEffect, useRef, useImperativeHandle } from 'react';\nlet hasRegisteredToolbarElement = false;\n\n/**\n * Renders an invisible `markdown-toolbar-element` that provides formatting actions to the\n * editor. This is a hacky way of using the library, but it allows us to use the built-in\n * behavior without having to actually display the inflexible toolbar element. It also means\n * we can still use the formatting tools even if the consumer hides the default toolbar\n * buttons (ie, by keyboard shortcut).\n */\nconst FormattingTools = /*#__PURE__*/forwardRef(({\n  forInputId\n}, forwadedRef) => {\n  useEffect(() => {\n    // requiring this module will register the custom element; we don't want to do that until the component mounts in the DOM\n    if (!hasRegisteredToolbarElement) require('@github/markdown-toolbar-element');\n    hasRegisteredToolbarElement = true;\n  }, []);\n  const headerRef = useRef(null);\n  const boldRef = useRef(null);\n  const italicRef = useRef(null);\n  const quoteRef = useRef(null);\n  const codeRef = useRef(null);\n  const linkRef = useRef(null);\n  const unorderedListRef = useRef(null);\n  const orderedListRef = useRef(null);\n  const taskListRef = useRef(null);\n  const mentionRef = useRef(null);\n  const referenceRef = useRef(null);\n  useImperativeHandle(forwadedRef, () => ({\n    header: () => {\n      var _headerRef$current;\n      return (_headerRef$current = headerRef.current) === null || _headerRef$current === void 0 ? void 0 : _headerRef$current.click();\n    },\n    bold: () => {\n      var _boldRef$current;\n      return (_boldRef$current = boldRef.current) === null || _boldRef$current === void 0 ? void 0 : _boldRef$current.click();\n    },\n    italic: () => {\n      var _italicRef$current;\n      return (_italicRef$current = italicRef.current) === null || _italicRef$current === void 0 ? void 0 : _italicRef$current.click();\n    },\n    quote: () => {\n      var _quoteRef$current;\n      return (_quoteRef$current = quoteRef.current) === null || _quoteRef$current === void 0 ? void 0 : _quoteRef$current.click();\n    },\n    code: () => {\n      var _codeRef$current;\n      return (_codeRef$current = codeRef.current) === null || _codeRef$current === void 0 ? void 0 : _codeRef$current.click();\n    },\n    link: () => {\n      var _linkRef$current;\n      return (_linkRef$current = linkRef.current) === null || _linkRef$current === void 0 ? void 0 : _linkRef$current.click();\n    },\n    unorderedList: () => {\n      var _unorderedListRef$cur;\n      return (_unorderedListRef$cur = unorderedListRef.current) === null || _unorderedListRef$cur === void 0 ? void 0 : _unorderedListRef$cur.click();\n    },\n    orderedList: () => {\n      var _orderedListRef$curre;\n      return (_orderedListRef$curre = orderedListRef.current) === null || _orderedListRef$curre === void 0 ? void 0 : _orderedListRef$curre.click();\n    },\n    taskList: () => {\n      var _taskListRef$current;\n      return (_taskListRef$current = taskListRef.current) === null || _taskListRef$current === void 0 ? void 0 : _taskListRef$current.click();\n    },\n    mention: () => {\n      var _mentionRef$current;\n      return (_mentionRef$current = mentionRef.current) === null || _mentionRef$current === void 0 ? void 0 : _mentionRef$current.click();\n    },\n    reference: () => {\n      var _referenceRef$current;\n      return (_referenceRef$current = referenceRef.current) === null || _referenceRef$current === void 0 ? void 0 : _referenceRef$current.click();\n    }\n  }));\n  return /*#__PURE__*/React.createElement(\"markdown-toolbar\", {\n    for: forInputId,\n    style: {\n      display: 'none'\n    }\n  }, /*#__PURE__*/React.createElement(\"md-header\", {\n    ref: headerRef\n  }), /*#__PURE__*/React.createElement(\"md-bold\", {\n    ref: boldRef\n  }), /*#__PURE__*/React.createElement(\"md-italic\", {\n    ref: italicRef\n  }), /*#__PURE__*/React.createElement(\"md-quote\", {\n    ref: quoteRef\n  }), /*#__PURE__*/React.createElement(\"md-code\", {\n    ref: codeRef\n  }), /*#__PURE__*/React.createElement(\"md-link\", {\n    ref: linkRef\n  }), /*#__PURE__*/React.createElement(\"md-unordered-list\", {\n    ref: unorderedListRef\n  }), /*#__PURE__*/React.createElement(\"md-ordered-list\", {\n    ref: orderedListRef\n  }), /*#__PURE__*/React.createElement(\"md-task-list\", {\n    ref: taskListRef\n  }), /*#__PURE__*/React.createElement(\"md-mention\", {\n    ref: mentionRef\n  }), /*#__PURE__*/React.createElement(\"md-ref\", {\n    ref: referenceRef\n  }));\n});\nexport { FormattingTools };","map":{"version":3,"names":["React","forwardRef","useEffect","useRef","useImperativeHandle","hasRegisteredToolbarElement","FormattingTools","forInputId","forwadedRef","require","headerRef","boldRef","italicRef","quoteRef","codeRef","linkRef","unorderedListRef","orderedListRef","taskListRef","mentionRef","referenceRef","header","_headerRef$current","current","click","bold","_boldRef$current","italic","_italicRef$current","quote","_quoteRef$current","code","_codeRef$current","link","_linkRef$current","unorderedList","_unorderedListRef$cur","orderedList","_orderedListRef$curre","taskList","_taskListRef$current","mention","_mentionRef$current","reference","_referenceRef$current","createElement","for","style","display","ref"],"sources":["/Users/steve/Documents/repos/github/api-insights/node_modules/@primer/react/lib-esm/drafts/MarkdownEditor/_FormattingTools.js"],"sourcesContent":["import React, { forwardRef, useEffect, useRef, useImperativeHandle } from 'react';\n\nlet hasRegisteredToolbarElement = false;\n\n/**\n * Renders an invisible `markdown-toolbar-element` that provides formatting actions to the\n * editor. This is a hacky way of using the library, but it allows us to use the built-in\n * behavior without having to actually display the inflexible toolbar element. It also means\n * we can still use the formatting tools even if the consumer hides the default toolbar\n * buttons (ie, by keyboard shortcut).\n */\nconst FormattingTools = /*#__PURE__*/forwardRef(({\n  forInputId\n}, forwadedRef) => {\n  useEffect(() => {\n    // requiring this module will register the custom element; we don't want to do that until the component mounts in the DOM\n    if (!hasRegisteredToolbarElement) require('@github/markdown-toolbar-element');\n    hasRegisteredToolbarElement = true;\n  }, []);\n  const headerRef = useRef(null);\n  const boldRef = useRef(null);\n  const italicRef = useRef(null);\n  const quoteRef = useRef(null);\n  const codeRef = useRef(null);\n  const linkRef = useRef(null);\n  const unorderedListRef = useRef(null);\n  const orderedListRef = useRef(null);\n  const taskListRef = useRef(null);\n  const mentionRef = useRef(null);\n  const referenceRef = useRef(null);\n  useImperativeHandle(forwadedRef, () => ({\n    header: () => {\n      var _headerRef$current;\n      return (_headerRef$current = headerRef.current) === null || _headerRef$current === void 0 ? void 0 : _headerRef$current.click();\n    },\n    bold: () => {\n      var _boldRef$current;\n      return (_boldRef$current = boldRef.current) === null || _boldRef$current === void 0 ? void 0 : _boldRef$current.click();\n    },\n    italic: () => {\n      var _italicRef$current;\n      return (_italicRef$current = italicRef.current) === null || _italicRef$current === void 0 ? void 0 : _italicRef$current.click();\n    },\n    quote: () => {\n      var _quoteRef$current;\n      return (_quoteRef$current = quoteRef.current) === null || _quoteRef$current === void 0 ? void 0 : _quoteRef$current.click();\n    },\n    code: () => {\n      var _codeRef$current;\n      return (_codeRef$current = codeRef.current) === null || _codeRef$current === void 0 ? void 0 : _codeRef$current.click();\n    },\n    link: () => {\n      var _linkRef$current;\n      return (_linkRef$current = linkRef.current) === null || _linkRef$current === void 0 ? void 0 : _linkRef$current.click();\n    },\n    unorderedList: () => {\n      var _unorderedListRef$cur;\n      return (_unorderedListRef$cur = unorderedListRef.current) === null || _unorderedListRef$cur === void 0 ? void 0 : _unorderedListRef$cur.click();\n    },\n    orderedList: () => {\n      var _orderedListRef$curre;\n      return (_orderedListRef$curre = orderedListRef.current) === null || _orderedListRef$curre === void 0 ? void 0 : _orderedListRef$curre.click();\n    },\n    taskList: () => {\n      var _taskListRef$current;\n      return (_taskListRef$current = taskListRef.current) === null || _taskListRef$current === void 0 ? void 0 : _taskListRef$current.click();\n    },\n    mention: () => {\n      var _mentionRef$current;\n      return (_mentionRef$current = mentionRef.current) === null || _mentionRef$current === void 0 ? void 0 : _mentionRef$current.click();\n    },\n    reference: () => {\n      var _referenceRef$current;\n      return (_referenceRef$current = referenceRef.current) === null || _referenceRef$current === void 0 ? void 0 : _referenceRef$current.click();\n    }\n  }));\n  return /*#__PURE__*/React.createElement(\"markdown-toolbar\", {\n    for: forInputId,\n    style: {\n      display: 'none'\n    }\n  }, /*#__PURE__*/React.createElement(\"md-header\", {\n    ref: headerRef\n  }), /*#__PURE__*/React.createElement(\"md-bold\", {\n    ref: boldRef\n  }), /*#__PURE__*/React.createElement(\"md-italic\", {\n    ref: italicRef\n  }), /*#__PURE__*/React.createElement(\"md-quote\", {\n    ref: quoteRef\n  }), /*#__PURE__*/React.createElement(\"md-code\", {\n    ref: codeRef\n  }), /*#__PURE__*/React.createElement(\"md-link\", {\n    ref: linkRef\n  }), /*#__PURE__*/React.createElement(\"md-unordered-list\", {\n    ref: unorderedListRef\n  }), /*#__PURE__*/React.createElement(\"md-ordered-list\", {\n    ref: orderedListRef\n  }), /*#__PURE__*/React.createElement(\"md-task-list\", {\n    ref: taskListRef\n  }), /*#__PURE__*/React.createElement(\"md-mention\", {\n    ref: mentionRef\n  }), /*#__PURE__*/React.createElement(\"md-ref\", {\n    ref: referenceRef\n  }));\n});\n\nexport { FormattingTools };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}