{"ast":null,"code":"import React from 'react';\nimport CheckboxOrRadioGroup from '../internal/components/CheckboxOrRadioGroup/CheckboxOrRadioGroup.js';\nimport CheckboxOrRadioGroupCaption from '../internal/components/CheckboxOrRadioGroup/CheckboxOrRadioGroupCaption.js';\nimport CheckboxOrRadioGroupLabel from '../internal/components/CheckboxOrRadioGroup/CheckboxOrRadioGroupLabel.js';\nimport CheckboxOrRadioGroupValidation from '../internal/components/CheckboxOrRadioGroup/CheckboxOrRadioGroupValidation.js';\nimport '@primer/behaviors/utils';\nimport '@primer/behaviors';\nimport { useRenderForcingRef } from '../hooks/useRenderForcingRef.js';\nimport '../FormControl/_FormControlContext.js';\nimport FormControl from '../FormControl/FormControl.js';\nimport Checkbox from '../Checkbox/Checkbox.js';\nimport { CheckboxGroupContext } from './CheckboxGroupContext.js';\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nconst CheckboxGroup = ({\n  children,\n  disabled,\n  onChange,\n  ...rest\n}) => {\n  const formControlComponentChildren = React.Children.toArray(children).filter(child => /*#__PURE__*/React.isValidElement(child) && child.type === FormControl).map(formControlComponent => /*#__PURE__*/React.isValidElement(formControlComponent) ? formControlComponent.props.children : []).flat();\n  const checkedCheckboxes = React.Children.toArray(formControlComponentChildren).filter(child => /*#__PURE__*/React.isValidElement(child) && child.type === Checkbox).map(checkbox => /*#__PURE__*/React.isValidElement(checkbox) && (checkbox.props.checked || checkbox.props.defaultChecked) && checkbox.props.value).filter(Boolean);\n  const [selectedCheckboxValues, setSelectedCheckboxValues] = useRenderForcingRef(checkedCheckboxes);\n  const updateSelectedCheckboxes = e => {\n    const {\n      value,\n      checked\n    } = e.currentTarget;\n    if (checked) {\n      setSelectedCheckboxValues([...(selectedCheckboxValues.current || []), value]);\n      return;\n    }\n    setSelectedCheckboxValues((selectedCheckboxValues.current || []).filter(selectedValue => selectedValue !== value));\n  };\n  return /*#__PURE__*/React.createElement(CheckboxGroupContext.Provider, {\n    value: {\n      disabled,\n      onChange: e => {\n        if (onChange) {\n          updateSelectedCheckboxes(e);\n          onChange(selectedCheckboxValues.current || [], e);\n        }\n      }\n    }\n  }, /*#__PURE__*/React.createElement(CheckboxOrRadioGroup, _extends({\n    disabled: disabled\n  }, rest), children));\n};\nCheckboxGroup.displayName = \"CheckboxGroup\";\nvar CheckboxGroup$1 = Object.assign(CheckboxGroup, {\n  Caption: CheckboxOrRadioGroupCaption,\n  Label: CheckboxOrRadioGroupLabel,\n  Validation: CheckboxOrRadioGroupValidation\n});\nexport { CheckboxGroupContext, CheckboxGroup$1 as default };","map":{"version":3,"names":["React","CheckboxOrRadioGroup","CheckboxOrRadioGroupCaption","CheckboxOrRadioGroupLabel","CheckboxOrRadioGroupValidation","useRenderForcingRef","FormControl","Checkbox","CheckboxGroupContext","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","CheckboxGroup","children","disabled","onChange","rest","formControlComponentChildren","Children","toArray","filter","child","isValidElement","type","map","formControlComponent","props","flat","checkedCheckboxes","checkbox","checked","defaultChecked","value","Boolean","selectedCheckboxValues","setSelectedCheckboxValues","updateSelectedCheckboxes","e","currentTarget","current","selectedValue","createElement","Provider","displayName","CheckboxGroup$1","Caption","Label","Validation","default"],"sources":["/Users/steve/Documents/repos/github/licensing-report/node_modules/@primer/react/lib-esm/CheckboxGroup/CheckboxGroup.js"],"sourcesContent":["import React from 'react';\nimport CheckboxOrRadioGroup from '../internal/components/CheckboxOrRadioGroup/CheckboxOrRadioGroup.js';\nimport CheckboxOrRadioGroupCaption from '../internal/components/CheckboxOrRadioGroup/CheckboxOrRadioGroupCaption.js';\nimport CheckboxOrRadioGroupLabel from '../internal/components/CheckboxOrRadioGroup/CheckboxOrRadioGroupLabel.js';\nimport CheckboxOrRadioGroupValidation from '../internal/components/CheckboxOrRadioGroup/CheckboxOrRadioGroupValidation.js';\nimport '@primer/behaviors/utils';\nimport '@primer/behaviors';\nimport { useRenderForcingRef } from '../hooks/useRenderForcingRef.js';\nimport '../FormControl/_FormControlContext.js';\nimport FormControl from '../FormControl/FormControl.js';\nimport Checkbox from '../Checkbox/Checkbox.js';\nimport { CheckboxGroupContext } from './CheckboxGroupContext.js';\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nconst CheckboxGroup = ({\n  children,\n  disabled,\n  onChange,\n  ...rest\n}) => {\n  const formControlComponentChildren = React.Children.toArray(children).filter(child => /*#__PURE__*/React.isValidElement(child) && child.type === FormControl).map(formControlComponent => /*#__PURE__*/React.isValidElement(formControlComponent) ? formControlComponent.props.children : []).flat();\n  const checkedCheckboxes = React.Children.toArray(formControlComponentChildren).filter(child => /*#__PURE__*/React.isValidElement(child) && child.type === Checkbox).map(checkbox => /*#__PURE__*/React.isValidElement(checkbox) && (checkbox.props.checked || checkbox.props.defaultChecked) && checkbox.props.value).filter(Boolean);\n  const [selectedCheckboxValues, setSelectedCheckboxValues] = useRenderForcingRef(checkedCheckboxes);\n  const updateSelectedCheckboxes = e => {\n    const {\n      value,\n      checked\n    } = e.currentTarget;\n    if (checked) {\n      setSelectedCheckboxValues([...(selectedCheckboxValues.current || []), value]);\n      return;\n    }\n    setSelectedCheckboxValues((selectedCheckboxValues.current || []).filter(selectedValue => selectedValue !== value));\n  };\n  return /*#__PURE__*/React.createElement(CheckboxGroupContext.Provider, {\n    value: {\n      disabled,\n      onChange: e => {\n        if (onChange) {\n          updateSelectedCheckboxes(e);\n          onChange(selectedCheckboxValues.current || [], e);\n        }\n      }\n    }\n  }, /*#__PURE__*/React.createElement(CheckboxOrRadioGroup, _extends({\n    disabled: disabled\n  }, rest), children));\n};\nCheckboxGroup.displayName = \"CheckboxGroup\";\nvar CheckboxGroup$1 = Object.assign(CheckboxGroup, {\n  Caption: CheckboxOrRadioGroupCaption,\n  Label: CheckboxOrRadioGroupLabel,\n  Validation: CheckboxOrRadioGroupValidation\n});\n\nexport { CheckboxGroupContext, CheckboxGroup$1 as default };\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,oBAAoB,MAAM,qEAAqE;AACtG,OAAOC,2BAA2B,MAAM,4EAA4E;AACpH,OAAOC,yBAAyB,MAAM,0EAA0E;AAChH,OAAOC,8BAA8B,MAAM,+EAA+E;AAC1H,OAAO,yBAAyB;AAChC,OAAO,mBAAmB;AAC1B,SAASC,mBAAmB,QAAQ,iCAAiC;AACrE,OAAO,uCAAuC;AAC9C,OAAOC,WAAW,MAAM,+BAA+B;AACvD,OAAOC,QAAQ,MAAM,yBAAyB;AAC9C,SAASC,oBAAoB,QAAQ,2BAA2B;AAEhE,SAASC,QAAQA,CAAA,EAAG;EAAEA,QAAQ,GAAGC,MAAM,CAACC,MAAM,GAAGD,MAAM,CAACC,MAAM,CAACC,IAAI,CAAC,CAAC,GAAG,UAAUC,MAAM,EAAE;IAAE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;MAAE,IAAIG,MAAM,GAAGF,SAAS,CAACD,CAAC,CAAC;MAAE,KAAK,IAAII,GAAG,IAAID,MAAM,EAAE;QAAE,IAAIP,MAAM,CAACS,SAAS,CAACC,cAAc,CAACC,IAAI,CAACJ,MAAM,EAAEC,GAAG,CAAC,EAAE;UAAEL,MAAM,CAACK,GAAG,CAAC,GAAGD,MAAM,CAACC,GAAG,CAAC;QAAE;MAAE;IAAE;IAAE,OAAOL,MAAM;EAAE,CAAC;EAAE,OAAOJ,QAAQ,CAACa,KAAK,CAAC,IAAI,EAAEP,SAAS,CAAC;AAAE;AAClV,MAAMQ,aAAa,GAAGA,CAAC;EACrBC,QAAQ;EACRC,QAAQ;EACRC,QAAQ;EACR,GAAGC;AACL,CAAC,KAAK;EACJ,MAAMC,4BAA4B,GAAG5B,KAAK,CAAC6B,QAAQ,CAACC,OAAO,CAACN,QAAQ,CAAC,CAACO,MAAM,CAACC,KAAK,IAAI,aAAahC,KAAK,CAACiC,cAAc,CAACD,KAAK,CAAC,IAAIA,KAAK,CAACE,IAAI,KAAK5B,WAAW,CAAC,CAAC6B,GAAG,CAACC,oBAAoB,IAAI,aAAapC,KAAK,CAACiC,cAAc,CAACG,oBAAoB,CAAC,GAAGA,oBAAoB,CAACC,KAAK,CAACb,QAAQ,GAAG,EAAE,CAAC,CAACc,IAAI,CAAC,CAAC;EACpS,MAAMC,iBAAiB,GAAGvC,KAAK,CAAC6B,QAAQ,CAACC,OAAO,CAACF,4BAA4B,CAAC,CAACG,MAAM,CAACC,KAAK,IAAI,aAAahC,KAAK,CAACiC,cAAc,CAACD,KAAK,CAAC,IAAIA,KAAK,CAACE,IAAI,KAAK3B,QAAQ,CAAC,CAAC4B,GAAG,CAACK,QAAQ,IAAI,aAAaxC,KAAK,CAACiC,cAAc,CAACO,QAAQ,CAAC,KAAKA,QAAQ,CAACH,KAAK,CAACI,OAAO,IAAID,QAAQ,CAACH,KAAK,CAACK,cAAc,CAAC,IAAIF,QAAQ,CAACH,KAAK,CAACM,KAAK,CAAC,CAACZ,MAAM,CAACa,OAAO,CAAC;EACrU,MAAM,CAACC,sBAAsB,EAAEC,yBAAyB,CAAC,GAAGzC,mBAAmB,CAACkC,iBAAiB,CAAC;EAClG,MAAMQ,wBAAwB,GAAGC,CAAC,IAAI;IACpC,MAAM;MACJL,KAAK;MACLF;IACF,CAAC,GAAGO,CAAC,CAACC,aAAa;IACnB,IAAIR,OAAO,EAAE;MACXK,yBAAyB,CAAC,CAAC,IAAID,sBAAsB,CAACK,OAAO,IAAI,EAAE,CAAC,EAAEP,KAAK,CAAC,CAAC;MAC7E;IACF;IACAG,yBAAyB,CAAC,CAACD,sBAAsB,CAACK,OAAO,IAAI,EAAE,EAAEnB,MAAM,CAACoB,aAAa,IAAIA,aAAa,KAAKR,KAAK,CAAC,CAAC;EACpH,CAAC;EACD,OAAO,aAAa3C,KAAK,CAACoD,aAAa,CAAC5C,oBAAoB,CAAC6C,QAAQ,EAAE;IACrEV,KAAK,EAAE;MACLlB,QAAQ;MACRC,QAAQ,EAAEsB,CAAC,IAAI;QACb,IAAItB,QAAQ,EAAE;UACZqB,wBAAwB,CAACC,CAAC,CAAC;UAC3BtB,QAAQ,CAACmB,sBAAsB,CAACK,OAAO,IAAI,EAAE,EAAEF,CAAC,CAAC;QACnD;MACF;IACF;EACF,CAAC,EAAE,aAAahD,KAAK,CAACoD,aAAa,CAACnD,oBAAoB,EAAEQ,QAAQ,CAAC;IACjEgB,QAAQ,EAAEA;EACZ,CAAC,EAAEE,IAAI,CAAC,EAAEH,QAAQ,CAAC,CAAC;AACtB,CAAC;AACDD,aAAa,CAAC+B,WAAW,GAAG,eAAe;AAC3C,IAAIC,eAAe,GAAG7C,MAAM,CAACC,MAAM,CAACY,aAAa,EAAE;EACjDiC,OAAO,EAAEtD,2BAA2B;EACpCuD,KAAK,EAAEtD,yBAAyB;EAChCuD,UAAU,EAAEtD;AACd,CAAC,CAAC;AAEF,SAASI,oBAAoB,EAAE+C,eAAe,IAAII,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}