{"ast":null,"code":"var __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _DurationFormat_options;\nclass ListFormatPonyFill {\n  formatToParts(members) {\n    const parts = [];\n    for (const value of members) {\n      parts.push({\n        type: 'element',\n        value\n      });\n      parts.push({\n        type: 'literal',\n        value: ', '\n      });\n    }\n    return parts.slice(0, -1);\n  }\n}\nconst ListFormat = typeof Intl !== 'undefined' && Intl.ListFormat || ListFormatPonyFill;\nconst partsTable = [['years', 'year'], ['months', 'month'], ['weeks', 'week'], ['days', 'day'], ['hours', 'hour'], ['minutes', 'minute'], ['seconds', 'second'], ['milliseconds', 'millisecond']];\nconst twoDigitFormatOptions = {\n  minimumIntegerDigits: 2\n};\nexport default class DurationFormat {\n  constructor(locale, options = {}) {\n    _DurationFormat_options.set(this, void 0);\n    let style = String(options.style || 'short');\n    if (style !== 'long' && style !== 'short' && style !== 'narrow' && style !== 'digital') style = 'short';\n    let prevStyle = style === 'digital' ? 'numeric' : style;\n    const hours = options.hours || prevStyle;\n    prevStyle = hours === '2-digit' ? 'numeric' : hours;\n    const minutes = options.minutes || prevStyle;\n    prevStyle = minutes === '2-digit' ? 'numeric' : minutes;\n    const seconds = options.seconds || prevStyle;\n    prevStyle = seconds === '2-digit' ? 'numeric' : seconds;\n    const milliseconds = options.milliseconds || prevStyle;\n    __classPrivateFieldSet(this, _DurationFormat_options, {\n      locale,\n      style,\n      years: options.years || style === 'digital' ? 'short' : style,\n      yearsDisplay: options.yearsDisplay === 'always' ? 'always' : 'auto',\n      months: options.months || style === 'digital' ? 'short' : style,\n      monthsDisplay: options.monthsDisplay === 'always' ? 'always' : 'auto',\n      weeks: options.weeks || style === 'digital' ? 'short' : style,\n      weeksDisplay: options.weeksDisplay === 'always' ? 'always' : 'auto',\n      days: options.days || style === 'digital' ? 'short' : style,\n      daysDisplay: options.daysDisplay === 'always' ? 'always' : 'auto',\n      hours,\n      hoursDisplay: options.hoursDisplay === 'always' ? 'always' : style === 'digital' ? 'always' : 'auto',\n      minutes,\n      minutesDisplay: options.minutesDisplay === 'always' ? 'always' : style === 'digital' ? 'always' : 'auto',\n      seconds,\n      secondsDisplay: options.secondsDisplay === 'always' ? 'always' : style === 'digital' ? 'always' : 'auto',\n      milliseconds,\n      millisecondsDisplay: options.millisecondsDisplay === 'always' ? 'always' : 'auto'\n    }, \"f\");\n  }\n  resolvedOptions() {\n    return __classPrivateFieldGet(this, _DurationFormat_options, \"f\");\n  }\n  formatToParts(duration) {\n    const list = [];\n    const options = __classPrivateFieldGet(this, _DurationFormat_options, \"f\");\n    const style = options.style;\n    const locale = options.locale;\n    for (const [unit, nfUnit] of partsTable) {\n      const value = duration[unit];\n      if (options[`${unit}Display`] === 'auto' && !value) continue;\n      const unitStyle = options[unit];\n      const nfOpts = unitStyle === '2-digit' ? twoDigitFormatOptions : unitStyle === 'numeric' ? {} : {\n        style: 'unit',\n        unit: nfUnit,\n        unitDisplay: unitStyle\n      };\n      list.push(new Intl.NumberFormat(locale, nfOpts).format(value));\n    }\n    return new ListFormat(locale, {\n      type: 'unit',\n      style: style === 'digital' ? 'short' : style\n    }).formatToParts(list);\n  }\n  format(duration) {\n    return this.formatToParts(duration).map(p => p.value).join('');\n  }\n}\n_DurationFormat_options = new WeakMap();","map":{"version":3,"names":["__classPrivateFieldSet","receiver","state","value","kind","f","TypeError","has","call","set","__classPrivateFieldGet","get","_DurationFormat_options","ListFormatPonyFill","formatToParts","members","parts","push","type","slice","ListFormat","Intl","partsTable","twoDigitFormatOptions","minimumIntegerDigits","DurationFormat","constructor","locale","options","style","String","prevStyle","hours","minutes","seconds","milliseconds","years","yearsDisplay","months","monthsDisplay","weeks","weeksDisplay","days","daysDisplay","hoursDisplay","minutesDisplay","secondsDisplay","millisecondsDisplay","resolvedOptions","duration","list","unit","nfUnit","unitStyle","nfOpts","unitDisplay","NumberFormat","format","map","p","join","WeakMap"],"sources":["/Users/steve/Documents/repos/github/billing-usage/node_modules/@github/relative-time-element/dist/duration-format-ponyfill.js"],"sourcesContent":["var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _DurationFormat_options;\nclass ListFormatPonyFill {\n    formatToParts(members) {\n        const parts = [];\n        for (const value of members) {\n            parts.push({ type: 'element', value });\n            parts.push({ type: 'literal', value: ', ' });\n        }\n        return parts.slice(0, -1);\n    }\n}\nconst ListFormat = (typeof Intl !== 'undefined' && Intl.ListFormat) || ListFormatPonyFill;\nconst partsTable = [\n    ['years', 'year'],\n    ['months', 'month'],\n    ['weeks', 'week'],\n    ['days', 'day'],\n    ['hours', 'hour'],\n    ['minutes', 'minute'],\n    ['seconds', 'second'],\n    ['milliseconds', 'millisecond'],\n];\nconst twoDigitFormatOptions = { minimumIntegerDigits: 2 };\nexport default class DurationFormat {\n    constructor(locale, options = {}) {\n        _DurationFormat_options.set(this, void 0);\n        let style = String(options.style || 'short');\n        if (style !== 'long' && style !== 'short' && style !== 'narrow' && style !== 'digital')\n            style = 'short';\n        let prevStyle = style === 'digital' ? 'numeric' : style;\n        const hours = options.hours || prevStyle;\n        prevStyle = hours === '2-digit' ? 'numeric' : hours;\n        const minutes = options.minutes || prevStyle;\n        prevStyle = minutes === '2-digit' ? 'numeric' : minutes;\n        const seconds = options.seconds || prevStyle;\n        prevStyle = seconds === '2-digit' ? 'numeric' : seconds;\n        const milliseconds = options.milliseconds || prevStyle;\n        __classPrivateFieldSet(this, _DurationFormat_options, {\n            locale,\n            style,\n            years: options.years || style === 'digital' ? 'short' : style,\n            yearsDisplay: options.yearsDisplay === 'always' ? 'always' : 'auto',\n            months: options.months || style === 'digital' ? 'short' : style,\n            monthsDisplay: options.monthsDisplay === 'always' ? 'always' : 'auto',\n            weeks: options.weeks || style === 'digital' ? 'short' : style,\n            weeksDisplay: options.weeksDisplay === 'always' ? 'always' : 'auto',\n            days: options.days || style === 'digital' ? 'short' : style,\n            daysDisplay: options.daysDisplay === 'always' ? 'always' : 'auto',\n            hours,\n            hoursDisplay: options.hoursDisplay === 'always' ? 'always' : style === 'digital' ? 'always' : 'auto',\n            minutes,\n            minutesDisplay: options.minutesDisplay === 'always' ? 'always' : style === 'digital' ? 'always' : 'auto',\n            seconds,\n            secondsDisplay: options.secondsDisplay === 'always' ? 'always' : style === 'digital' ? 'always' : 'auto',\n            milliseconds,\n            millisecondsDisplay: options.millisecondsDisplay === 'always' ? 'always' : 'auto',\n        }, \"f\");\n    }\n    resolvedOptions() {\n        return __classPrivateFieldGet(this, _DurationFormat_options, \"f\");\n    }\n    formatToParts(duration) {\n        const list = [];\n        const options = __classPrivateFieldGet(this, _DurationFormat_options, \"f\");\n        const style = options.style;\n        const locale = options.locale;\n        for (const [unit, nfUnit] of partsTable) {\n            const value = duration[unit];\n            if (options[`${unit}Display`] === 'auto' && !value)\n                continue;\n            const unitStyle = options[unit];\n            const nfOpts = unitStyle === '2-digit'\n                ? twoDigitFormatOptions\n                : unitStyle === 'numeric'\n                    ? {}\n                    : { style: 'unit', unit: nfUnit, unitDisplay: unitStyle };\n            list.push(new Intl.NumberFormat(locale, nfOpts).format(value));\n        }\n        return new ListFormat(locale, {\n            type: 'unit',\n            style: style === 'digital' ? 'short' : style,\n        }).formatToParts(list);\n    }\n    format(duration) {\n        return this.formatToParts(duration)\n            .map(p => p.value)\n            .join('');\n    }\n}\n_DurationFormat_options = new WeakMap();\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}