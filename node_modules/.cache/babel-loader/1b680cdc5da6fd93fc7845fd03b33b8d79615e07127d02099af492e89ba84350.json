{"ast":null,"code":"import React from 'react';\nimport styled from 'styled-components';\nimport Box from '../Box/Box.js';\nimport sx from '../sx.js';\nimport { getSegmentedControlListItemStyles, getSegmentedControlButtonStyles } from './getSegmentedControlStyles.js';\nimport { defaultSxProp } from '../utils/defaultSxProp.js';\nimport merge from 'deepmerge';\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nconst SegmentedControlButtonStyled = styled.button.withConfig({\n  displayName: \"SegmentedControlButton__SegmentedControlButtonStyled\",\n  componentId: \"sc-8lkgxl-0\"\n})([\"\", \";\"], sx);\nconst SegmentedControlButton = ({\n  children,\n  leadingIcon: LeadingIcon,\n  selected,\n  sx: sxProp = defaultSxProp,\n  ...rest\n}) => {\n  const mergedSx = merge(getSegmentedControlListItemStyles(), sxProp);\n  return /*#__PURE__*/React.createElement(Box, {\n    as: \"li\",\n    sx: mergedSx\n  }, /*#__PURE__*/React.createElement(SegmentedControlButtonStyled, _extends({\n    \"aria-current\": selected,\n    sx: getSegmentedControlButtonStyles({\n      selected,\n      children\n    })\n  }, rest), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"segmentedControl-content\"\n  }, LeadingIcon && /*#__PURE__*/React.createElement(Box, {\n    mr: 1\n  }, /*#__PURE__*/React.createElement(LeadingIcon, null)), /*#__PURE__*/React.createElement(Box, {\n    className: \"segmentedControl-text\"\n  }, children))));\n};\nSegmentedControlButton.displayName = \"SegmentedControlButton\";\nexport { SegmentedControlButton as default };","map":{"version":3,"names":["React","styled","Box","sx","getSegmentedControlListItemStyles","getSegmentedControlButtonStyles","defaultSxProp","merge","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","SegmentedControlButtonStyled","button","withConfig","displayName","componentId","SegmentedControlButton","children","leadingIcon","LeadingIcon","selected","sxProp","rest","mergedSx","createElement","as","className","mr","default"],"sources":["/Users/steve/Documents/repos/github/licensing-report/node_modules/@primer/react/lib-esm/SegmentedControl/SegmentedControlButton.js"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport Box from '../Box/Box.js';\nimport sx from '../sx.js';\nimport { getSegmentedControlListItemStyles, getSegmentedControlButtonStyles } from './getSegmentedControlStyles.js';\nimport { defaultSxProp } from '../utils/defaultSxProp.js';\nimport merge from 'deepmerge';\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nconst SegmentedControlButtonStyled = styled.button.withConfig({\n  displayName: \"SegmentedControlButton__SegmentedControlButtonStyled\",\n  componentId: \"sc-8lkgxl-0\"\n})([\"\", \";\"], sx);\nconst SegmentedControlButton = ({\n  children,\n  leadingIcon: LeadingIcon,\n  selected,\n  sx: sxProp = defaultSxProp,\n  ...rest\n}) => {\n  const mergedSx = merge(getSegmentedControlListItemStyles(), sxProp);\n  return /*#__PURE__*/React.createElement(Box, {\n    as: \"li\",\n    sx: mergedSx\n  }, /*#__PURE__*/React.createElement(SegmentedControlButtonStyled, _extends({\n    \"aria-current\": selected,\n    sx: getSegmentedControlButtonStyles({\n      selected,\n      children\n    })\n  }, rest), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"segmentedControl-content\"\n  }, LeadingIcon && /*#__PURE__*/React.createElement(Box, {\n    mr: 1\n  }, /*#__PURE__*/React.createElement(LeadingIcon, null)), /*#__PURE__*/React.createElement(Box, {\n    className: \"segmentedControl-text\"\n  }, children))));\n};\nSegmentedControlButton.displayName = \"SegmentedControlButton\";\n\nexport { SegmentedControlButton as default };\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,GAAG,MAAM,eAAe;AAC/B,OAAOC,EAAE,MAAM,UAAU;AACzB,SAASC,iCAAiC,EAAEC,+BAA+B,QAAQ,gCAAgC;AACnH,SAASC,aAAa,QAAQ,2BAA2B;AACzD,OAAOC,KAAK,MAAM,WAAW;AAE7B,SAASC,QAAQA,CAAA,EAAG;EAAEA,QAAQ,GAAGC,MAAM,CAACC,MAAM,GAAGD,MAAM,CAACC,MAAM,CAACC,IAAI,CAAC,CAAC,GAAG,UAAUC,MAAM,EAAE;IAAE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;MAAE,IAAIG,MAAM,GAAGF,SAAS,CAACD,CAAC,CAAC;MAAE,KAAK,IAAII,GAAG,IAAID,MAAM,EAAE;QAAE,IAAIP,MAAM,CAACS,SAAS,CAACC,cAAc,CAACC,IAAI,CAACJ,MAAM,EAAEC,GAAG,CAAC,EAAE;UAAEL,MAAM,CAACK,GAAG,CAAC,GAAGD,MAAM,CAACC,GAAG,CAAC;QAAE;MAAE;IAAE;IAAE,OAAOL,MAAM;EAAE,CAAC;EAAE,OAAOJ,QAAQ,CAACa,KAAK,CAAC,IAAI,EAAEP,SAAS,CAAC;AAAE;AAClV,MAAMQ,4BAA4B,GAAGrB,MAAM,CAACsB,MAAM,CAACC,UAAU,CAAC;EAC5DC,WAAW,EAAE,sDAAsD;EACnEC,WAAW,EAAE;AACf,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,EAAEvB,EAAE,CAAC;AACjB,MAAMwB,sBAAsB,GAAGA,CAAC;EAC9BC,QAAQ;EACRC,WAAW,EAAEC,WAAW;EACxBC,QAAQ;EACR5B,EAAE,EAAE6B,MAAM,GAAG1B,aAAa;EAC1B,GAAG2B;AACL,CAAC,KAAK;EACJ,MAAMC,QAAQ,GAAG3B,KAAK,CAACH,iCAAiC,CAAC,CAAC,EAAE4B,MAAM,CAAC;EACnE,OAAO,aAAahC,KAAK,CAACmC,aAAa,CAACjC,GAAG,EAAE;IAC3CkC,EAAE,EAAE,IAAI;IACRjC,EAAE,EAAE+B;EACN,CAAC,EAAE,aAAalC,KAAK,CAACmC,aAAa,CAACb,4BAA4B,EAAEd,QAAQ,CAAC;IACzE,cAAc,EAAEuB,QAAQ;IACxB5B,EAAE,EAAEE,+BAA+B,CAAC;MAClC0B,QAAQ;MACRH;IACF,CAAC;EACH,CAAC,EAAEK,IAAI,CAAC,EAAE,aAAajC,KAAK,CAACmC,aAAa,CAAC,MAAM,EAAE;IACjDE,SAAS,EAAE;EACb,CAAC,EAAEP,WAAW,IAAI,aAAa9B,KAAK,CAACmC,aAAa,CAACjC,GAAG,EAAE;IACtDoC,EAAE,EAAE;EACN,CAAC,EAAE,aAAatC,KAAK,CAACmC,aAAa,CAACL,WAAW,EAAE,IAAI,CAAC,CAAC,EAAE,aAAa9B,KAAK,CAACmC,aAAa,CAACjC,GAAG,EAAE;IAC7FmC,SAAS,EAAE;EACb,CAAC,EAAET,QAAQ,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC;AACDD,sBAAsB,CAACF,WAAW,GAAG,wBAAwB;AAE7D,SAASE,sBAAsB,IAAIY,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}