{"ast":null,"code":"var _jsxFileName = \"/Users/steve/Documents/repos/github/api-insights/src/pages/Home/Home.js\";\nimport { Box, Heading, Text } from '@primer/react';\nimport { Header } from '../../components/Header/Header';\nimport { DataCard } from '../../components/DataCard/DataCard';\nimport { DataChart } from '../../components/DataChart/DataChart';\nimport { TrendCard } from '../../components/TrendCard/TrendCard';\nimport { cards, trends, accessTokens } from '../../data/Data';\nimport { AccessTokens } from '../../components/Tables/AccessTokens/AccessTokens';\nimport { Page } from '../../layouts/Page';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Home() {\n  const formatNumber = num => {\n    if (num >= 1000) {\n      return (num / 1000).toFixed(1) + 'k';\n    }\n    return num.toString();\n  };\n  const calculatePercentage = (part, total) => {\n    if (total === 0) return '0%';\n    return (part / total * 100).toFixed(1) + '%';\n  };\n  return /*#__PURE__*/_jsxDEV(Page, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: '100%',\n        height: 'fit-content'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: ['column', null, 'row'],\n          gap: [0, null, 3]\n        },\n        children: [/*#__PURE__*/_jsxDEV(DataCard, {\n          title: \"Total requests\",\n          description: \"Total requests made by this organization\",\n          data: formatNumber(accessTokens.reduce((sum, item) => sum + item.totalRequests, 0))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DataCard, {\n          title: \"Rate limited requests\",\n          description: \"Percentage of requests that were rate limited\",\n          data: calculatePercentage(accessTokens.reduce((sum, item) => sum + item.rateLimitedRequests, 0), accessTokens.reduce((sum, item) => sum + item.totalRequests, 0))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DataChart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 6\n        },\n        children: /*#__PURE__*/_jsxDEV(AccessTokens, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Box","Heading","Text","Header","DataCard","DataChart","TrendCard","cards","trends","accessTokens","AccessTokens","Page","jsxDEV","_jsxDEV","Home","formatNumber","num","toFixed","toString","calculatePercentage","part","total","children","sx","width","height","fileName","_jsxFileName","lineNumber","columnNumber","display","flexDirection","gap","title","description","data","reduce","sum","item","totalRequests","rateLimitedRequests","mb","_c","$RefreshReg$"],"sources":["/Users/steve/Documents/repos/github/api-insights/src/pages/Home/Home.js"],"sourcesContent":["import { Box, Heading, Text } from '@primer/react';\nimport { Header } from '../../components/Header/Header';\nimport { DataCard } from '../../components/DataCard/DataCard';\nimport { DataChart } from '../../components/DataChart/DataChart';\nimport { TrendCard } from '../../components/TrendCard/TrendCard';\nimport { cards, trends, accessTokens } from '../../data/Data';\nimport { AccessTokens } from '../../components/Tables/AccessTokens/AccessTokens';\nimport { Page } from '../../layouts/Page';\n\nexport function Home() {\n  const formatNumber = (num) => {\n    if (num >= 1000) {\n      return (num / 1000).toFixed(1) + 'k';\n    }\n    return num.toString();\n  };\n\n  const calculatePercentage = (part, total) => {\n    if (total === 0) return '0%';\n    return ((part / total) * 100).toFixed(1) + '%';\n  };\n\n  return (\n    <Page>\n      <Box\n        sx={{\n          width: '100%',\n          height: 'fit-content',\n        }}\n      >\n        <Header />\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: ['column', null, 'row'],\n            gap: [0, null, 3],\n          }}\n        >\n          <DataCard\n            title='Total requests'\n            description='Total requests made by this organization'\n            data={formatNumber(\n              accessTokens.reduce((sum, item) => sum + item.totalRequests, 0)\n            )}\n          />\n          <DataCard\n            title='Rate limited requests'\n            description='Percentage of requests that were rate limited'\n            data={calculatePercentage(\n              accessTokens.reduce(\n                (sum, item) => sum + item.rateLimitedRequests,\n                0\n              ),\n              accessTokens.reduce((sum, item) => sum + item.totalRequests, 0)\n            )}\n          />\n        </Box>\n        <DataChart />\n\n        <Box sx={{ mb: 6 }}>\n          <AccessTokens />\n        </Box>\n      </Box>\n    </Page>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}