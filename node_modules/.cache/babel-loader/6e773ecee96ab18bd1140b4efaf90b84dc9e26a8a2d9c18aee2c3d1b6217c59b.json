{"ast":null,"code":"import React, { useCallback } from 'react';\nimport { createRoot } from 'react-dom/client';\nimport styled from 'styled-components';\nimport Box from '../Box/Box.js';\nimport { useTheme, ThemeProvider } from '../ThemeProvider.js';\nimport { FocusKeys } from '@primer/behaviors';\nimport { get } from '../constants.js';\nimport { Dialog } from '../Dialog/Dialog.js';\nimport { useFocusZone } from '../hooks/useFocusZone.js';\nimport BaseStyles from '../BaseStyles.js';\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n/**\n * Props to customize the ConfirmationDialog.\n */\n\nconst StyledConfirmationHeader = styled.div.withConfig({\n  displayName: \"ConfirmationDialog__StyledConfirmationHeader\",\n  componentId: \"sc-11fz0jh-0\"\n})([\"padding:\", \";display:flex;flex-direction:row;\"], get('space.2'));\nconst StyledTitle = styled(Box).attrs({\n  as: 'h1'\n}).withConfig({\n  displayName: \"ConfirmationDialog__StyledTitle\",\n  componentId: \"sc-11fz0jh-1\"\n})([\"font-size:\", \";font-weight:\", \";padding:6px \", \";flex-grow:1;margin:0;\"], get('fontSizes.3'), get('fontWeights.bold'), get('space.2'));\nconst ConfirmationHeader = ({\n  title,\n  onClose,\n  dialogLabelId\n}) => {\n  const onCloseClick = useCallback(() => {\n    onClose('close-button');\n  }, [onClose]);\n  return /*#__PURE__*/React.createElement(StyledConfirmationHeader, null, /*#__PURE__*/React.createElement(StyledTitle, {\n    id: dialogLabelId\n  }, title), /*#__PURE__*/React.createElement(Dialog.CloseButton, {\n    onClose: onCloseClick\n  }));\n};\nConfirmationHeader.displayName = \"ConfirmationHeader\";\nconst StyledConfirmationBody = styled(Box).withConfig({\n  displayName: \"ConfirmationDialog__StyledConfirmationBody\",\n  componentId: \"sc-11fz0jh-2\"\n})([\"font-size:\", \";padding:0 \", \" \", \" \", \";color:\", \";flex-grow:1;\"], get('fontSizes.1'), get('space.3'), get('space.3'), get('space.3'), get('colors.fg.muted'));\nconst ConfirmationBody = ({\n  children\n}) => {\n  return /*#__PURE__*/React.createElement(StyledConfirmationBody, null, children);\n};\nConfirmationBody.displayName = \"ConfirmationBody\";\nconst StyledConfirmationFooter = styled(Box).withConfig({\n  displayName: \"ConfirmationDialog__StyledConfirmationFooter\",\n  componentId: \"sc-11fz0jh-3\"\n})([\"display:grid;grid-auto-flow:column;grid-auto-columns:max-content;grid-gap:\", \";align-items:end;justify-content:end;padding:\", \" \", \" \", \";\"], get('space.2'), get('space.1'), get('space.3'), get('space.3'));\nconst ConfirmationFooter = ({\n  footerButtons\n}) => {\n  const {\n    containerRef: footerRef\n  } = useFocusZone({\n    bindKeys: FocusKeys.ArrowHorizontal | FocusKeys.Tab,\n    focusInStrategy: 'closest'\n  });\n  // Must have exactly 2 buttons!\n  return /*#__PURE__*/React.createElement(StyledConfirmationFooter, {\n    ref: footerRef\n  }, /*#__PURE__*/React.createElement(Dialog.Buttons, {\n    buttons: footerButtons !== null && footerButtons !== void 0 ? footerButtons : []\n  }));\n};\nConfirmationFooter.displayName = \"ConfirmationFooter\";\n/**\n * A ConfirmationDialog is a special kind of dialog with more rigid behavior. It\n * is used to confirm a user action. ConfirmationDialogs always have exactly\n * two buttons: one to cancel the action and one to confirm it. No custom\n * rendering capabilities are provided for ConfirmationDialog.\n */\nconst ConfirmationDialog = props => {\n  const {\n    onClose,\n    title,\n    cancelButtonContent = 'Cancel',\n    confirmButtonContent = 'OK',\n    confirmButtonType = 'normal',\n    children\n  } = props;\n  const onCancelButtonClick = useCallback(() => {\n    onClose('cancel');\n  }, [onClose]);\n  const onConfirmButtonClick = useCallback(() => {\n    onClose('confirm');\n  }, [onClose]);\n  const isConfirmationDangerous = confirmButtonType === 'danger';\n  const cancelButton = {\n    content: cancelButtonContent,\n    onClick: onCancelButtonClick,\n    autoFocus: isConfirmationDangerous\n  };\n  const confirmButton = {\n    content: confirmButtonContent,\n    buttonType: confirmButtonType,\n    onClick: onConfirmButtonClick,\n    autoFocus: !isConfirmationDangerous\n  };\n  const footerButtons = [cancelButton, confirmButton];\n  return /*#__PURE__*/React.createElement(Dialog, {\n    onClose: onClose,\n    title: title,\n    footerButtons: footerButtons,\n    role: \"alertdialog\",\n    width: \"medium\",\n    renderHeader: ConfirmationHeader,\n    renderBody: ConfirmationBody,\n    renderFooter: ConfirmationFooter\n  }, children);\n};\nConfirmationDialog.displayName = \"ConfirmationDialog\";\nlet hostElement = null;\nasync function confirm(themeProps, options) {\n  const {\n    content,\n    ...confirmationDialogProps\n  } = options;\n  return new Promise(resolve => {\n    hostElement ||= document.createElement('div');\n    if (!hostElement.isConnected) document.body.append(hostElement);\n    const root = createRoot(hostElement);\n    const onClose = gesture => {\n      root.unmount();\n      if (gesture === 'confirm') {\n        resolve(true);\n      } else {\n        resolve(false);\n      }\n    };\n    root.render( /*#__PURE__*/React.createElement(ThemeProvider, themeProps, /*#__PURE__*/React.createElement(BaseStyles, null, /*#__PURE__*/React.createElement(ConfirmationDialog, _extends({}, confirmationDialogProps, {\n      onClose: onClose\n    }), content))));\n  });\n}\n\n/**\n * This hook takes no parameters and returns an `async` function, `confirm`. When `confirm`\n * is called, it shows the confirmation dialog. When the dialog is dismissed, a promise is\n * resolved with `true` or `false` depending on whether or not the confirm button was used.\n */\nfunction useConfirm() {\n  const {\n    theme,\n    colorMode,\n    dayScheme,\n    nightScheme\n  } = useTheme();\n  const result = useCallback(options => {\n    const themeProps = {\n      theme,\n      colorMode,\n      dayScheme,\n      nightScheme\n    };\n    return confirm(themeProps, options);\n  }, [theme, colorMode, dayScheme, nightScheme]);\n  return result;\n}\nexport { ConfirmationDialog, useConfirm };","map":{"version":3,"names":["React","useCallback","createRoot","styled","Box","useTheme","ThemeProvider","FocusKeys","get","Dialog","useFocusZone","BaseStyles","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","StyledConfirmationHeader","div","withConfig","displayName","componentId","StyledTitle","attrs","as","ConfirmationHeader","title","onClose","dialogLabelId","onCloseClick","createElement","id","CloseButton","StyledConfirmationBody","ConfirmationBody","children","StyledConfirmationFooter","ConfirmationFooter","footerButtons","containerRef","footerRef","bindKeys","ArrowHorizontal","Tab","focusInStrategy","ref","Buttons","buttons","ConfirmationDialog","props","cancelButtonContent","confirmButtonContent","confirmButtonType","onCancelButtonClick","onConfirmButtonClick","isConfirmationDangerous","cancelButton","content","onClick","autoFocus","confirmButton","buttonType","role","width","renderHeader","renderBody","renderFooter","hostElement","confirm","themeProps","options","confirmationDialogProps","Promise","resolve","document","isConnected","body","append","root","gesture","unmount","render","useConfirm","theme","colorMode","dayScheme","nightScheme","result"],"sources":["/Users/steve/Documents/repos/github/api-insights/node_modules/@primer/react/lib-esm/ConfirmationDialog/ConfirmationDialog.js"],"sourcesContent":["import React, { useCallback } from 'react';\nimport { createRoot } from 'react-dom/client';\nimport styled from 'styled-components';\nimport Box from '../Box/Box.js';\nimport { useTheme, ThemeProvider } from '../ThemeProvider.js';\nimport { FocusKeys } from '@primer/behaviors';\nimport { get } from '../constants.js';\nimport { Dialog } from '../Dialog/Dialog.js';\nimport { useFocusZone } from '../hooks/useFocusZone.js';\nimport BaseStyles from '../BaseStyles.js';\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n/**\n * Props to customize the ConfirmationDialog.\n */\n\nconst StyledConfirmationHeader = styled.div.withConfig({\n  displayName: \"ConfirmationDialog__StyledConfirmationHeader\",\n  componentId: \"sc-11fz0jh-0\"\n})([\"padding:\", \";display:flex;flex-direction:row;\"], get('space.2'));\nconst StyledTitle = styled(Box).attrs({\n  as: 'h1'\n}).withConfig({\n  displayName: \"ConfirmationDialog__StyledTitle\",\n  componentId: \"sc-11fz0jh-1\"\n})([\"font-size:\", \";font-weight:\", \";padding:6px \", \";flex-grow:1;margin:0;\"], get('fontSizes.3'), get('fontWeights.bold'), get('space.2'));\nconst ConfirmationHeader = ({\n  title,\n  onClose,\n  dialogLabelId\n}) => {\n  const onCloseClick = useCallback(() => {\n    onClose('close-button');\n  }, [onClose]);\n  return /*#__PURE__*/React.createElement(StyledConfirmationHeader, null, /*#__PURE__*/React.createElement(StyledTitle, {\n    id: dialogLabelId\n  }, title), /*#__PURE__*/React.createElement(Dialog.CloseButton, {\n    onClose: onCloseClick\n  }));\n};\nConfirmationHeader.displayName = \"ConfirmationHeader\";\nconst StyledConfirmationBody = styled(Box).withConfig({\n  displayName: \"ConfirmationDialog__StyledConfirmationBody\",\n  componentId: \"sc-11fz0jh-2\"\n})([\"font-size:\", \";padding:0 \", \" \", \" \", \";color:\", \";flex-grow:1;\"], get('fontSizes.1'), get('space.3'), get('space.3'), get('space.3'), get('colors.fg.muted'));\nconst ConfirmationBody = ({\n  children\n}) => {\n  return /*#__PURE__*/React.createElement(StyledConfirmationBody, null, children);\n};\nConfirmationBody.displayName = \"ConfirmationBody\";\nconst StyledConfirmationFooter = styled(Box).withConfig({\n  displayName: \"ConfirmationDialog__StyledConfirmationFooter\",\n  componentId: \"sc-11fz0jh-3\"\n})([\"display:grid;grid-auto-flow:column;grid-auto-columns:max-content;grid-gap:\", \";align-items:end;justify-content:end;padding:\", \" \", \" \", \";\"], get('space.2'), get('space.1'), get('space.3'), get('space.3'));\nconst ConfirmationFooter = ({\n  footerButtons\n}) => {\n  const {\n    containerRef: footerRef\n  } = useFocusZone({\n    bindKeys: FocusKeys.ArrowHorizontal | FocusKeys.Tab,\n    focusInStrategy: 'closest'\n  });\n  // Must have exactly 2 buttons!\n  return /*#__PURE__*/React.createElement(StyledConfirmationFooter, {\n    ref: footerRef\n  }, /*#__PURE__*/React.createElement(Dialog.Buttons, {\n    buttons: footerButtons !== null && footerButtons !== void 0 ? footerButtons : []\n  }));\n};\nConfirmationFooter.displayName = \"ConfirmationFooter\";\n/**\n * A ConfirmationDialog is a special kind of dialog with more rigid behavior. It\n * is used to confirm a user action. ConfirmationDialogs always have exactly\n * two buttons: one to cancel the action and one to confirm it. No custom\n * rendering capabilities are provided for ConfirmationDialog.\n */\nconst ConfirmationDialog = props => {\n  const {\n    onClose,\n    title,\n    cancelButtonContent = 'Cancel',\n    confirmButtonContent = 'OK',\n    confirmButtonType = 'normal',\n    children\n  } = props;\n  const onCancelButtonClick = useCallback(() => {\n    onClose('cancel');\n  }, [onClose]);\n  const onConfirmButtonClick = useCallback(() => {\n    onClose('confirm');\n  }, [onClose]);\n  const isConfirmationDangerous = confirmButtonType === 'danger';\n  const cancelButton = {\n    content: cancelButtonContent,\n    onClick: onCancelButtonClick,\n    autoFocus: isConfirmationDangerous\n  };\n  const confirmButton = {\n    content: confirmButtonContent,\n    buttonType: confirmButtonType,\n    onClick: onConfirmButtonClick,\n    autoFocus: !isConfirmationDangerous\n  };\n  const footerButtons = [cancelButton, confirmButton];\n  return /*#__PURE__*/React.createElement(Dialog, {\n    onClose: onClose,\n    title: title,\n    footerButtons: footerButtons,\n    role: \"alertdialog\",\n    width: \"medium\",\n    renderHeader: ConfirmationHeader,\n    renderBody: ConfirmationBody,\n    renderFooter: ConfirmationFooter\n  }, children);\n};\nConfirmationDialog.displayName = \"ConfirmationDialog\";\nlet hostElement = null;\nasync function confirm(themeProps, options) {\n  const {\n    content,\n    ...confirmationDialogProps\n  } = options;\n  return new Promise(resolve => {\n    hostElement ||= document.createElement('div');\n    if (!hostElement.isConnected) document.body.append(hostElement);\n    const root = createRoot(hostElement);\n    const onClose = gesture => {\n      root.unmount();\n      if (gesture === 'confirm') {\n        resolve(true);\n      } else {\n        resolve(false);\n      }\n    };\n    root.render( /*#__PURE__*/React.createElement(ThemeProvider, themeProps, /*#__PURE__*/React.createElement(BaseStyles, null, /*#__PURE__*/React.createElement(ConfirmationDialog, _extends({}, confirmationDialogProps, {\n      onClose: onClose\n    }), content))));\n  });\n}\n\n/**\n * This hook takes no parameters and returns an `async` function, `confirm`. When `confirm`\n * is called, it shows the confirmation dialog. When the dialog is dismissed, a promise is\n * resolved with `true` or `false` depending on whether or not the confirm button was used.\n */\nfunction useConfirm() {\n  const {\n    theme,\n    colorMode,\n    dayScheme,\n    nightScheme\n  } = useTheme();\n  const result = useCallback(options => {\n    const themeProps = {\n      theme,\n      colorMode,\n      dayScheme,\n      nightScheme\n    };\n    return confirm(themeProps, options);\n  }, [theme, colorMode, dayScheme, nightScheme]);\n  return result;\n}\n\nexport { ConfirmationDialog, useConfirm };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}