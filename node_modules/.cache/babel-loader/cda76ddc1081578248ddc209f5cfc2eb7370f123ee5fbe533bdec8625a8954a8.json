{"ast":null,"code":"import React, { useMemo } from 'react';\nimport { suggestionsCalculator } from './index.js';\nimport { ActionList } from '../../../ActionList/index.js';\nconst trigger = {\n  triggerChar: ':',\n  keepTriggerCharOnCommit: false\n};\nconst emojiToSugggestion = emoji => ({\n  value: 'character' in emoji ? emoji.character : `:${emoji.name}:`,\n  key: emoji.name,\n  // emoji characters may not be unique - ie haircut and haircut_man both have the same emoji codepoint. But names are guaranteed to be unique.\n  render: props => /*#__PURE__*/React.createElement(ActionList.Item, props, /*#__PURE__*/React.createElement(ActionList.LeadingVisual, null, 'character' in emoji ? emoji.character : /*#__PURE__*/React.createElement(\"img\", {\n    src: emoji.url,\n    alt: `${emoji.name} emoji`,\n    height: \"16\",\n    width: \"16\"\n  })), emoji.name)\n});\n\n// for emojis we don't use a fuzzy search because they are short and easy to accurately search through\nconst scoreSuggestion = (query, emoji) => {\n  const name = emoji.name.toLowerCase();\n  const q = query.toLowerCase();\n  let score = 0;\n  if (name.includes(q)) {\n    score += 5;\n    if (name.startsWith(q)) score += 5;\n  }\n  return score;\n};\nconst useEmojiSuggestions = emojis => {\n  const calculateSuggestions = useMemo(() => suggestionsCalculator(emojis, scoreSuggestion, emojiToSugggestion), [emojis]);\n  return {\n    calculateSuggestions,\n    trigger\n  };\n};\nexport { useEmojiSuggestions };","map":{"version":3,"names":["React","useMemo","suggestionsCalculator","ActionList","trigger","triggerChar","keepTriggerCharOnCommit","emojiToSugggestion","emoji","value","character","name","key","render","props","createElement","Item","LeadingVisual","src","url","alt","height","width","scoreSuggestion","query","toLowerCase","q","score","includes","startsWith","useEmojiSuggestions","emojis","calculateSuggestions"],"sources":["/Users/steve/Documents/repos/github/api-insights/node_modules/@primer/react/lib-esm/drafts/MarkdownEditor/suggestions/_useEmojiSuggestions.js"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { suggestionsCalculator } from './index.js';\nimport { ActionList } from '../../../ActionList/index.js';\n\nconst trigger = {\n  triggerChar: ':',\n  keepTriggerCharOnCommit: false\n};\nconst emojiToSugggestion = emoji => ({\n  value: 'character' in emoji ? emoji.character : `:${emoji.name}:`,\n  key: emoji.name,\n  // emoji characters may not be unique - ie haircut and haircut_man both have the same emoji codepoint. But names are guaranteed to be unique.\n  render: props => /*#__PURE__*/React.createElement(ActionList.Item, props, /*#__PURE__*/React.createElement(ActionList.LeadingVisual, null, 'character' in emoji ? emoji.character : /*#__PURE__*/React.createElement(\"img\", {\n    src: emoji.url,\n    alt: `${emoji.name} emoji`,\n    height: \"16\",\n    width: \"16\"\n  })), emoji.name)\n});\n\n// for emojis we don't use a fuzzy search because they are short and easy to accurately search through\nconst scoreSuggestion = (query, emoji) => {\n  const name = emoji.name.toLowerCase();\n  const q = query.toLowerCase();\n  let score = 0;\n  if (name.includes(q)) {\n    score += 5;\n    if (name.startsWith(q)) score += 5;\n  }\n  return score;\n};\nconst useEmojiSuggestions = emojis => {\n  const calculateSuggestions = useMemo(() => suggestionsCalculator(emojis, scoreSuggestion, emojiToSugggestion), [emojis]);\n  return {\n    calculateSuggestions,\n    trigger\n  };\n};\n\nexport { useEmojiSuggestions };\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AACtC,SAASC,qBAAqB,QAAQ,YAAY;AAClD,SAASC,UAAU,QAAQ,8BAA8B;AAEzD,MAAMC,OAAO,GAAG;EACdC,WAAW,EAAE,GAAG;EAChBC,uBAAuB,EAAE;AAC3B,CAAC;AACD,MAAMC,kBAAkB,GAAGC,KAAK,KAAK;EACnCC,KAAK,EAAE,WAAW,IAAID,KAAK,GAAGA,KAAK,CAACE,SAAS,GAAI,IAAGF,KAAK,CAACG,IAAK,GAAE;EACjEC,GAAG,EAAEJ,KAAK,CAACG,IAAI;EACf;EACAE,MAAM,EAAEC,KAAK,IAAI,aAAad,KAAK,CAACe,aAAa,CAACZ,UAAU,CAACa,IAAI,EAAEF,KAAK,EAAE,aAAad,KAAK,CAACe,aAAa,CAACZ,UAAU,CAACc,aAAa,EAAE,IAAI,EAAE,WAAW,IAAIT,KAAK,GAAGA,KAAK,CAACE,SAAS,GAAG,aAAaV,KAAK,CAACe,aAAa,CAAC,KAAK,EAAE;IAC1NG,GAAG,EAAEV,KAAK,CAACW,GAAG;IACdC,GAAG,EAAG,GAAEZ,KAAK,CAACG,IAAK,QAAO;IAC1BU,MAAM,EAAE,IAAI;IACZC,KAAK,EAAE;EACT,CAAC,CAAC,CAAC,EAAEd,KAAK,CAACG,IAAI;AACjB,CAAC,CAAC;;AAEF;AACA,MAAMY,eAAe,GAAGA,CAACC,KAAK,EAAEhB,KAAK,KAAK;EACxC,MAAMG,IAAI,GAAGH,KAAK,CAACG,IAAI,CAACc,WAAW,CAAC,CAAC;EACrC,MAAMC,CAAC,GAAGF,KAAK,CAACC,WAAW,CAAC,CAAC;EAC7B,IAAIE,KAAK,GAAG,CAAC;EACb,IAAIhB,IAAI,CAACiB,QAAQ,CAACF,CAAC,CAAC,EAAE;IACpBC,KAAK,IAAI,CAAC;IACV,IAAIhB,IAAI,CAACkB,UAAU,CAACH,CAAC,CAAC,EAAEC,KAAK,IAAI,CAAC;EACpC;EACA,OAAOA,KAAK;AACd,CAAC;AACD,MAAMG,mBAAmB,GAAGC,MAAM,IAAI;EACpC,MAAMC,oBAAoB,GAAG/B,OAAO,CAAC,MAAMC,qBAAqB,CAAC6B,MAAM,EAAER,eAAe,EAAEhB,kBAAkB,CAAC,EAAE,CAACwB,MAAM,CAAC,CAAC;EACxH,OAAO;IACLC,oBAAoB;IACpB5B;EACF,CAAC;AACH,CAAC;AAED,SAAS0B,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}