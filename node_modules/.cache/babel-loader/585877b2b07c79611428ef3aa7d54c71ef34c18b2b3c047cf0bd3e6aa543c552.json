{"ast":null,"code":"import { useOnOutsideClick } from './useOnOutsideClick.js';\nimport { useOpenAndCloseFocus } from './useOpenAndCloseFocus.js';\nimport { useOnEscapePress } from './useOnEscapePress.js';\nimport { useProvidedRefOrCreate } from './useProvidedRefOrCreate.js';\nconst useOverlay = ({\n  overlayRef: _overlayRef,\n  returnFocusRef,\n  initialFocusRef,\n  onEscape,\n  ignoreClickRefs,\n  onClickOutside,\n  preventFocusOnOpen\n}) => {\n  const overlayRef = useProvidedRefOrCreate(_overlayRef);\n  useOpenAndCloseFocus({\n    containerRef: overlayRef,\n    returnFocusRef,\n    initialFocusRef,\n    preventFocusOnOpen\n  });\n  useOnOutsideClick({\n    containerRef: overlayRef,\n    ignoreClickRefs,\n    onClickOutside\n  });\n\n  // We only want one overlay to close at a time\n  const preventeddefaultCheckedEscape = event => {\n    onEscape(event);\n    event.preventDefault();\n  };\n  useOnEscapePress(preventeddefaultCheckedEscape);\n  return {\n    ref: overlayRef\n  };\n};\nexport { useOverlay };","map":{"version":3,"names":["useOnOutsideClick","useOpenAndCloseFocus","useOnEscapePress","useProvidedRefOrCreate","useOverlay","overlayRef","_overlayRef","returnFocusRef","initialFocusRef","onEscape","ignoreClickRefs","onClickOutside","preventFocusOnOpen","containerRef","preventeddefaultCheckedEscape","event","preventDefault","ref"],"sources":["/Users/steve/Documents/repos/github/licensing/node_modules/@primer/react/lib-esm/hooks/useOverlay.js"],"sourcesContent":["import { useOnOutsideClick } from './useOnOutsideClick.js';\nimport { useOpenAndCloseFocus } from './useOpenAndCloseFocus.js';\nimport { useOnEscapePress } from './useOnEscapePress.js';\nimport { useProvidedRefOrCreate } from './useProvidedRefOrCreate.js';\n\nconst useOverlay = ({\n  overlayRef: _overlayRef,\n  returnFocusRef,\n  initialFocusRef,\n  onEscape,\n  ignoreClickRefs,\n  onClickOutside,\n  preventFocusOnOpen\n}) => {\n  const overlayRef = useProvidedRefOrCreate(_overlayRef);\n  useOpenAndCloseFocus({\n    containerRef: overlayRef,\n    returnFocusRef,\n    initialFocusRef,\n    preventFocusOnOpen\n  });\n  useOnOutsideClick({\n    containerRef: overlayRef,\n    ignoreClickRefs,\n    onClickOutside\n  });\n\n  // We only want one overlay to close at a time\n  const preventeddefaultCheckedEscape = event => {\n    onEscape(event);\n    event.preventDefault();\n  };\n  useOnEscapePress(preventeddefaultCheckedEscape);\n  return {\n    ref: overlayRef\n  };\n};\n\nexport { useOverlay };\n"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,wBAAwB;AAC1D,SAASC,oBAAoB,QAAQ,2BAA2B;AAChE,SAASC,gBAAgB,QAAQ,uBAAuB;AACxD,SAASC,sBAAsB,QAAQ,6BAA6B;AAEpE,MAAMC,UAAU,GAAGA,CAAC;EAClBC,UAAU,EAAEC,WAAW;EACvBC,cAAc;EACdC,eAAe;EACfC,QAAQ;EACRC,eAAe;EACfC,cAAc;EACdC;AACF,CAAC,KAAK;EACJ,MAAMP,UAAU,GAAGF,sBAAsB,CAACG,WAAW,CAAC;EACtDL,oBAAoB,CAAC;IACnBY,YAAY,EAAER,UAAU;IACxBE,cAAc;IACdC,eAAe;IACfI;EACF,CAAC,CAAC;EACFZ,iBAAiB,CAAC;IAChBa,YAAY,EAAER,UAAU;IACxBK,eAAe;IACfC;EACF,CAAC,CAAC;;EAEF;EACA,MAAMG,6BAA6B,GAAGC,KAAK,IAAI;IAC7CN,QAAQ,CAACM,KAAK,CAAC;IACfA,KAAK,CAACC,cAAc,CAAC,CAAC;EACxB,CAAC;EACDd,gBAAgB,CAACY,6BAA6B,CAAC;EAC/C,OAAO;IACLG,GAAG,EAAEZ;EACP,CAAC;AACH,CAAC;AAED,SAASD,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}