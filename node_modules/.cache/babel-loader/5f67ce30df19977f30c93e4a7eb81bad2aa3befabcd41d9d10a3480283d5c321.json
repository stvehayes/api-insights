{"ast":null,"code":"import React, { useCallback, useEffect } from 'react';\nimport Overlay from '../Overlay/Overlay.js';\nimport { useFocusTrap } from '../hooks/useFocusTrap.js';\nimport { useFocusZone } from '../hooks/useFocusZone.js';\nimport { useProvidedRefOrCreate } from '../hooks/useProvidedRefOrCreate.js';\nimport '@primer/behaviors/utils';\nimport { useAnchoredPosition } from '../hooks/useAnchoredPosition.js';\nimport { useRenderForcingRef } from '../hooks/useRenderForcingRef.js';\nimport { useId } from '../hooks/useId.js';\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n/**\n * An `AnchoredOverlay` provides an anchor that will open a floating overlay positioned relative to the anchor.\n * The overlay can be opened and navigated using keyboard or mouse.\n */\nconst AnchoredOverlay = ({\n  renderAnchor,\n  anchorRef: externalAnchorRef,\n  anchorId: externalAnchorId,\n  children,\n  open,\n  onOpen,\n  onClose,\n  height,\n  width,\n  overlayProps,\n  focusTrapSettings,\n  focusZoneSettings,\n  side = 'outside-bottom',\n  align = 'start',\n  alignmentOffset,\n  anchorOffset\n}) => {\n  const anchorRef = useProvidedRefOrCreate(externalAnchorRef);\n  const [overlayRef, updateOverlayRef] = useRenderForcingRef();\n  const anchorId = useId(externalAnchorId);\n  const onClickOutside = useCallback(() => onClose === null || onClose === void 0 ? void 0 : onClose('click-outside'), [onClose]);\n  const onEscape = useCallback(() => onClose === null || onClose === void 0 ? void 0 : onClose('escape'), [onClose]);\n  const onAnchorKeyDown = useCallback(event => {\n    if (!event.defaultPrevented) {\n      if (!open && ['ArrowDown', 'ArrowUp', ' ', 'Enter'].includes(event.key)) {\n        onOpen === null || onOpen === void 0 ? void 0 : onOpen('anchor-key-press', event);\n        event.preventDefault();\n      }\n    }\n  }, [open, onOpen]);\n  const onAnchorClick = useCallback(event => {\n    if (event.defaultPrevented || event.button !== 0) {\n      return;\n    }\n    if (!open) {\n      onOpen === null || onOpen === void 0 ? void 0 : onOpen('anchor-click');\n    } else {\n      onClose === null || onClose === void 0 ? void 0 : onClose('anchor-click');\n    }\n  }, [open, onOpen, onClose]);\n  const {\n    position\n  } = useAnchoredPosition({\n    anchorElementRef: anchorRef,\n    floatingElementRef: overlayRef,\n    side,\n    align,\n    alignmentOffset,\n    anchorOffset\n  }, [overlayRef.current]);\n  useEffect(() => {\n    // ensure overlay ref gets cleared when closed, so position can reset between closing/re-opening\n    if (!open && overlayRef.current) {\n      updateOverlayRef(null);\n    }\n  }, [open, overlayRef, updateOverlayRef]);\n  useFocusZone({\n    containerRef: overlayRef,\n    disabled: !open || !position,\n    ...focusZoneSettings\n  });\n  useFocusTrap({\n    containerRef: overlayRef,\n    disabled: !open || !position,\n    ...focusTrapSettings\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, renderAnchor && renderAnchor({\n    ref: anchorRef,\n    id: anchorId,\n    'aria-haspopup': 'true',\n    'aria-expanded': open ? 'true' : undefined,\n    tabIndex: 0,\n    onClick: onAnchorClick,\n    onKeyDown: onAnchorKeyDown\n  }), open ? /*#__PURE__*/React.createElement(Overlay, _extends({\n    returnFocusRef: anchorRef,\n    onClickOutside: onClickOutside,\n    ignoreClickRefs: [anchorRef],\n    onEscape: onEscape,\n    ref: updateOverlayRef,\n    role: \"none\",\n    visibility: position ? 'visible' : 'hidden',\n    height: height,\n    width: width,\n    top: (position === null || position === void 0 ? void 0 : position.top) || 0,\n    left: (position === null || position === void 0 ? void 0 : position.left) || 0,\n    anchorSide: position === null || position === void 0 ? void 0 : position.anchorSide\n  }, overlayProps), children) : null);\n};\nAnchoredOverlay.displayName = 'AnchoredOverlay';\nexport { AnchoredOverlay };","map":{"version":3,"names":["React","useCallback","useEffect","Overlay","useFocusTrap","useFocusZone","useProvidedRefOrCreate","useAnchoredPosition","useRenderForcingRef","useId","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","AnchoredOverlay","renderAnchor","anchorRef","externalAnchorRef","anchorId","externalAnchorId","children","open","onOpen","onClose","height","width","overlayProps","focusTrapSettings","focusZoneSettings","side","align","alignmentOffset","anchorOffset","overlayRef","updateOverlayRef","onClickOutside","onEscape","onAnchorKeyDown","event","defaultPrevented","includes","preventDefault","onAnchorClick","button","position","anchorElementRef","floatingElementRef","current","containerRef","disabled","createElement","Fragment","ref","id","undefined","tabIndex","onClick","onKeyDown","returnFocusRef","ignoreClickRefs","role","visibility","top","left","anchorSide","displayName"],"sources":["/Users/steve/Documents/repos/github/api-insights/node_modules/@primer/react/lib-esm/AnchoredOverlay/AnchoredOverlay.js"],"sourcesContent":["import React, { useCallback, useEffect } from 'react';\nimport Overlay from '../Overlay/Overlay.js';\nimport { useFocusTrap } from '../hooks/useFocusTrap.js';\nimport { useFocusZone } from '../hooks/useFocusZone.js';\nimport { useProvidedRefOrCreate } from '../hooks/useProvidedRefOrCreate.js';\nimport '@primer/behaviors/utils';\nimport { useAnchoredPosition } from '../hooks/useAnchoredPosition.js';\nimport { useRenderForcingRef } from '../hooks/useRenderForcingRef.js';\nimport { useId } from '../hooks/useId.js';\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n/**\n * An `AnchoredOverlay` provides an anchor that will open a floating overlay positioned relative to the anchor.\n * The overlay can be opened and navigated using keyboard or mouse.\n */\nconst AnchoredOverlay = ({\n  renderAnchor,\n  anchorRef: externalAnchorRef,\n  anchorId: externalAnchorId,\n  children,\n  open,\n  onOpen,\n  onClose,\n  height,\n  width,\n  overlayProps,\n  focusTrapSettings,\n  focusZoneSettings,\n  side = 'outside-bottom',\n  align = 'start',\n  alignmentOffset,\n  anchorOffset\n}) => {\n  const anchorRef = useProvidedRefOrCreate(externalAnchorRef);\n  const [overlayRef, updateOverlayRef] = useRenderForcingRef();\n  const anchorId = useId(externalAnchorId);\n  const onClickOutside = useCallback(() => onClose === null || onClose === void 0 ? void 0 : onClose('click-outside'), [onClose]);\n  const onEscape = useCallback(() => onClose === null || onClose === void 0 ? void 0 : onClose('escape'), [onClose]);\n  const onAnchorKeyDown = useCallback(event => {\n    if (!event.defaultPrevented) {\n      if (!open && ['ArrowDown', 'ArrowUp', ' ', 'Enter'].includes(event.key)) {\n        onOpen === null || onOpen === void 0 ? void 0 : onOpen('anchor-key-press', event);\n        event.preventDefault();\n      }\n    }\n  }, [open, onOpen]);\n  const onAnchorClick = useCallback(event => {\n    if (event.defaultPrevented || event.button !== 0) {\n      return;\n    }\n    if (!open) {\n      onOpen === null || onOpen === void 0 ? void 0 : onOpen('anchor-click');\n    } else {\n      onClose === null || onClose === void 0 ? void 0 : onClose('anchor-click');\n    }\n  }, [open, onOpen, onClose]);\n  const {\n    position\n  } = useAnchoredPosition({\n    anchorElementRef: anchorRef,\n    floatingElementRef: overlayRef,\n    side,\n    align,\n    alignmentOffset,\n    anchorOffset\n  }, [overlayRef.current]);\n  useEffect(() => {\n    // ensure overlay ref gets cleared when closed, so position can reset between closing/re-opening\n    if (!open && overlayRef.current) {\n      updateOverlayRef(null);\n    }\n  }, [open, overlayRef, updateOverlayRef]);\n  useFocusZone({\n    containerRef: overlayRef,\n    disabled: !open || !position,\n    ...focusZoneSettings\n  });\n  useFocusTrap({\n    containerRef: overlayRef,\n    disabled: !open || !position,\n    ...focusTrapSettings\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, renderAnchor && renderAnchor({\n    ref: anchorRef,\n    id: anchorId,\n    'aria-haspopup': 'true',\n    'aria-expanded': open ? 'true' : undefined,\n    tabIndex: 0,\n    onClick: onAnchorClick,\n    onKeyDown: onAnchorKeyDown\n  }), open ? /*#__PURE__*/React.createElement(Overlay, _extends({\n    returnFocusRef: anchorRef,\n    onClickOutside: onClickOutside,\n    ignoreClickRefs: [anchorRef],\n    onEscape: onEscape,\n    ref: updateOverlayRef,\n    role: \"none\",\n    visibility: position ? 'visible' : 'hidden',\n    height: height,\n    width: width,\n    top: (position === null || position === void 0 ? void 0 : position.top) || 0,\n    left: (position === null || position === void 0 ? void 0 : position.left) || 0,\n    anchorSide: position === null || position === void 0 ? void 0 : position.anchorSide\n  }, overlayProps), children) : null);\n};\nAnchoredOverlay.displayName = 'AnchoredOverlay';\n\nexport { AnchoredOverlay };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}