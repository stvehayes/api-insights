{"ast":null,"code":"var __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _MarkdownHeaderButtonElement_instances, _MarkdownHeaderButtonElement_setLevelStyle;\nconst buttonSelectors = ['[data-md-button]', 'md-header', 'md-bold', 'md-italic', 'md-quote', 'md-code', 'md-link', 'md-image', 'md-unordered-list', 'md-ordered-list', 'md-task-list', 'md-mention', 'md-ref', 'md-strikethrough'];\nfunction getButtons(toolbar) {\n  const els = [];\n  for (const button of toolbar.querySelectorAll(buttonSelectors.join(', '))) {\n    if (button.hidden || button.offsetWidth <= 0 && button.offsetHeight <= 0) continue;\n    if (button.closest('markdown-toolbar') === toolbar) els.push(button);\n  }\n  return els;\n}\nfunction keydown(fn) {\n  return function (event) {\n    if (event.key === ' ' || event.key === 'Enter') {\n      event.preventDefault();\n      fn(event);\n    }\n  };\n}\nconst styles = new WeakMap();\nconst manualStyles = {\n  'header-1': {\n    prefix: '# '\n  },\n  'header-2': {\n    prefix: '## '\n  },\n  'header-3': {\n    prefix: '### '\n  },\n  'header-4': {\n    prefix: '#### '\n  },\n  'header-5': {\n    prefix: '##### '\n  },\n  'header-6': {\n    prefix: '###### '\n  },\n  bold: {\n    prefix: '**',\n    suffix: '**',\n    trimFirst: true\n  },\n  italic: {\n    prefix: '_',\n    suffix: '_',\n    trimFirst: true\n  },\n  quote: {\n    prefix: '> ',\n    multiline: true,\n    surroundWithNewlines: true\n  },\n  code: {\n    prefix: '`',\n    suffix: '`',\n    blockPrefix: '```',\n    blockSuffix: '```'\n  },\n  link: {\n    prefix: '[',\n    suffix: '](url)',\n    replaceNext: 'url',\n    scanFor: 'https?://'\n  },\n  image: {\n    prefix: '![',\n    suffix: '](url)',\n    replaceNext: 'url',\n    scanFor: 'https?://'\n  },\n  'unordered-list': {\n    prefix: '- ',\n    multiline: true,\n    unorderedList: true\n  },\n  'ordered-list': {\n    prefix: '1. ',\n    multiline: true,\n    orderedList: true\n  },\n  'task-list': {\n    prefix: '- [ ] ',\n    multiline: true,\n    surroundWithNewlines: true\n  },\n  mention: {\n    prefix: '@',\n    prefixSpace: true\n  },\n  ref: {\n    prefix: '#',\n    prefixSpace: true\n  },\n  strikethrough: {\n    prefix: '~~',\n    suffix: '~~',\n    trimFirst: true\n  }\n};\nclass MarkdownButtonElement extends HTMLElement {\n  constructor() {\n    super();\n    const apply = () => {\n      const style = styles.get(this);\n      if (!style) return;\n      applyStyle(this, style);\n    };\n    this.addEventListener('keydown', keydown(apply));\n    this.addEventListener('click', apply);\n  }\n  connectedCallback() {\n    if (!this.hasAttribute('role')) {\n      this.setAttribute('role', 'button');\n    }\n  }\n  click() {\n    const style = styles.get(this);\n    if (!style) return;\n    applyStyle(this, style);\n  }\n}\nclass MarkdownHeaderButtonElement extends MarkdownButtonElement {\n  constructor() {\n    super(...arguments);\n    _MarkdownHeaderButtonElement_instances.add(this);\n  }\n  connectedCallback() {\n    const level = parseInt(this.getAttribute('level') || '3', 10);\n    __classPrivateFieldGet(this, _MarkdownHeaderButtonElement_instances, \"m\", _MarkdownHeaderButtonElement_setLevelStyle).call(this, level);\n  }\n  static get observedAttributes() {\n    return ['level'];\n  }\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (name !== 'level') return;\n    const level = parseInt(newValue || '3', 10);\n    __classPrivateFieldGet(this, _MarkdownHeaderButtonElement_instances, \"m\", _MarkdownHeaderButtonElement_setLevelStyle).call(this, level);\n  }\n}\n_MarkdownHeaderButtonElement_instances = new WeakSet(), _MarkdownHeaderButtonElement_setLevelStyle = function _MarkdownHeaderButtonElement_setLevelStyle(level) {\n  if (level < 1 || level > 6) {\n    return;\n  }\n  const prefix = `${'#'.repeat(level)} `;\n  styles.set(this, {\n    prefix\n  });\n};\nif (!window.customElements.get('md-header')) {\n  window.MarkdownHeaderButtonElement = MarkdownHeaderButtonElement;\n  window.customElements.define('md-header', MarkdownHeaderButtonElement);\n}\nclass MarkdownBoldButtonElement extends MarkdownButtonElement {\n  connectedCallback() {\n    styles.set(this, {\n      prefix: '**',\n      suffix: '**',\n      trimFirst: true\n    });\n  }\n}\nif (!window.customElements.get('md-bold')) {\n  window.MarkdownBoldButtonElement = MarkdownBoldButtonElement;\n  window.customElements.define('md-bold', MarkdownBoldButtonElement);\n}\nclass MarkdownItalicButtonElement extends MarkdownButtonElement {\n  connectedCallback() {\n    styles.set(this, {\n      prefix: '_',\n      suffix: '_',\n      trimFirst: true\n    });\n  }\n}\nif (!window.customElements.get('md-italic')) {\n  window.MarkdownItalicButtonElement = MarkdownItalicButtonElement;\n  window.customElements.define('md-italic', MarkdownItalicButtonElement);\n}\nclass MarkdownQuoteButtonElement extends MarkdownButtonElement {\n  connectedCallback() {\n    styles.set(this, {\n      prefix: '> ',\n      multiline: true,\n      surroundWithNewlines: true\n    });\n  }\n}\nif (!window.customElements.get('md-quote')) {\n  window.MarkdownQuoteButtonElement = MarkdownQuoteButtonElement;\n  window.customElements.define('md-quote', MarkdownQuoteButtonElement);\n}\nclass MarkdownCodeButtonElement extends MarkdownButtonElement {\n  connectedCallback() {\n    styles.set(this, {\n      prefix: '`',\n      suffix: '`',\n      blockPrefix: '```',\n      blockSuffix: '```'\n    });\n  }\n}\nif (!window.customElements.get('md-code')) {\n  window.MarkdownCodeButtonElement = MarkdownCodeButtonElement;\n  window.customElements.define('md-code', MarkdownCodeButtonElement);\n}\nclass MarkdownLinkButtonElement extends MarkdownButtonElement {\n  connectedCallback() {\n    styles.set(this, {\n      prefix: '[',\n      suffix: '](url)',\n      replaceNext: 'url',\n      scanFor: 'https?://'\n    });\n  }\n}\nif (!window.customElements.get('md-link')) {\n  window.MarkdownLinkButtonElement = MarkdownLinkButtonElement;\n  window.customElements.define('md-link', MarkdownLinkButtonElement);\n}\nclass MarkdownImageButtonElement extends MarkdownButtonElement {\n  connectedCallback() {\n    styles.set(this, {\n      prefix: '![',\n      suffix: '](url)',\n      replaceNext: 'url',\n      scanFor: 'https?://'\n    });\n  }\n}\nif (!window.customElements.get('md-image')) {\n  window.MarkdownImageButtonElement = MarkdownImageButtonElement;\n  window.customElements.define('md-image', MarkdownImageButtonElement);\n}\nclass MarkdownUnorderedListButtonElement extends MarkdownButtonElement {\n  connectedCallback() {\n    styles.set(this, {\n      prefix: '- ',\n      multiline: true,\n      unorderedList: true\n    });\n  }\n}\nif (!window.customElements.get('md-unordered-list')) {\n  window.MarkdownUnorderedListButtonElement = MarkdownUnorderedListButtonElement;\n  window.customElements.define('md-unordered-list', MarkdownUnorderedListButtonElement);\n}\nclass MarkdownOrderedListButtonElement extends MarkdownButtonElement {\n  connectedCallback() {\n    styles.set(this, {\n      prefix: '1. ',\n      multiline: true,\n      orderedList: true\n    });\n  }\n}\nif (!window.customElements.get('md-ordered-list')) {\n  window.MarkdownOrderedListButtonElement = MarkdownOrderedListButtonElement;\n  window.customElements.define('md-ordered-list', MarkdownOrderedListButtonElement);\n}\nclass MarkdownTaskListButtonElement extends MarkdownButtonElement {\n  connectedCallback() {\n    styles.set(this, {\n      prefix: '- [ ] ',\n      multiline: true,\n      surroundWithNewlines: true\n    });\n  }\n}\nif (!window.customElements.get('md-task-list')) {\n  window.MarkdownTaskListButtonElement = MarkdownTaskListButtonElement;\n  window.customElements.define('md-task-list', MarkdownTaskListButtonElement);\n}\nclass MarkdownMentionButtonElement extends MarkdownButtonElement {\n  connectedCallback() {\n    styles.set(this, {\n      prefix: '@',\n      prefixSpace: true\n    });\n  }\n}\nif (!window.customElements.get('md-mention')) {\n  window.MarkdownMentionButtonElement = MarkdownMentionButtonElement;\n  window.customElements.define('md-mention', MarkdownMentionButtonElement);\n}\nclass MarkdownRefButtonElement extends MarkdownButtonElement {\n  connectedCallback() {\n    styles.set(this, {\n      prefix: '#',\n      prefixSpace: true\n    });\n  }\n}\nif (!window.customElements.get('md-ref')) {\n  window.MarkdownRefButtonElement = MarkdownRefButtonElement;\n  window.customElements.define('md-ref', MarkdownRefButtonElement);\n}\nclass MarkdownStrikethroughButtonElement extends MarkdownButtonElement {\n  connectedCallback() {\n    styles.set(this, {\n      prefix: '~~',\n      suffix: '~~',\n      trimFirst: true\n    });\n  }\n}\nif (!window.customElements.get('md-strikethrough')) {\n  window.MarkdownStrikethroughButtonElement = MarkdownStrikethroughButtonElement;\n  window.customElements.define('md-strikethrough', MarkdownStrikethroughButtonElement);\n}\nfunction applyFromToolbar(event) {\n  const {\n    target,\n    currentTarget\n  } = event;\n  if (!(target instanceof HTMLElement)) return;\n  const mdButton = target.closest('[data-md-button]');\n  if (!mdButton || mdButton.closest('markdown-toolbar') !== currentTarget) return;\n  const mdButtonStyle = target.getAttribute('data-md-button');\n  const style = manualStyles[mdButtonStyle];\n  if (!style) return;\n  applyStyle(target, style);\n}\nclass MarkdownToolbarElement extends HTMLElement {\n  connectedCallback() {\n    if (!this.hasAttribute('role')) {\n      this.setAttribute('role', 'toolbar');\n    }\n    this.addEventListener('keydown', focusKeydown);\n    this.setAttribute('tabindex', '0');\n    this.addEventListener('focus', onToolbarFocus, {\n      once: true\n    });\n    this.addEventListener('keydown', keydown(applyFromToolbar));\n    this.addEventListener('click', applyFromToolbar);\n  }\n  disconnectedCallback() {\n    this.removeEventListener('keydown', focusKeydown);\n  }\n  get field() {\n    const id = this.getAttribute('for');\n    if (!id) return null;\n    const root = 'getRootNode' in this ? this.getRootNode() : document;\n    let field;\n    if (root instanceof Document || root instanceof ShadowRoot) {\n      field = root.getElementById(id);\n    }\n    return field instanceof HTMLTextAreaElement ? field : null;\n  }\n}\nfunction onToolbarFocus({\n  target\n}) {\n  if (!(target instanceof Element)) return;\n  if (target.hasAttribute('data-no-focus')) return;\n  target.removeAttribute('tabindex');\n  let tabindex = '0';\n  for (const button of getButtons(target)) {\n    button.setAttribute('tabindex', tabindex);\n    if (tabindex === '0') {\n      button.focus();\n      tabindex = '-1';\n    }\n  }\n}\nfunction focusKeydown(event) {\n  const key = event.key;\n  if (key !== 'ArrowRight' && key !== 'ArrowLeft' && key !== 'Home' && key !== 'End') return;\n  const toolbar = event.currentTarget;\n  if (!(toolbar instanceof HTMLElement)) return;\n  if (toolbar.hasAttribute('data-no-focus')) return;\n  const buttons = getButtons(toolbar);\n  const index = buttons.indexOf(event.target);\n  const length = buttons.length;\n  if (index === -1) return;\n  let n = 0;\n  if (key === 'ArrowLeft') n = index - 1;\n  if (key === 'ArrowRight') n = index + 1;\n  if (key === 'End') n = length - 1;\n  if (n < 0) n = length - 1;\n  if (n > length - 1) n = 0;\n  for (let i = 0; i < length; i += 1) {\n    buttons[i].setAttribute('tabindex', i === n ? '0' : '-1');\n  }\n  event.preventDefault();\n  buttons[n].focus();\n}\nif (!window.customElements.get('markdown-toolbar')) {\n  window.MarkdownToolbarElement = MarkdownToolbarElement;\n  window.customElements.define('markdown-toolbar', MarkdownToolbarElement);\n}\nfunction isMultipleLines(string) {\n  return string.trim().split('\\n').length > 1;\n}\nfunction repeat(string, n) {\n  return Array(n + 1).join(string);\n}\nfunction wordSelectionStart(text, i) {\n  let index = i;\n  while (text[index] && text[index - 1] != null && !text[index - 1].match(/\\s/)) {\n    index--;\n  }\n  return index;\n}\nfunction wordSelectionEnd(text, i, multiline) {\n  let index = i;\n  const breakpoint = multiline ? /\\n/ : /\\s/;\n  while (text[index] && !text[index].match(breakpoint)) {\n    index++;\n  }\n  return index;\n}\nlet canInsertText = null;\nfunction insertText(textarea, {\n  text,\n  selectionStart,\n  selectionEnd\n}) {\n  const originalSelectionStart = textarea.selectionStart;\n  const before = textarea.value.slice(0, originalSelectionStart);\n  const after = textarea.value.slice(textarea.selectionEnd);\n  if (canInsertText === null || canInsertText === true) {\n    textarea.contentEditable = 'true';\n    try {\n      canInsertText = document.execCommand('insertText', false, text);\n    } catch (error) {\n      canInsertText = false;\n    }\n    textarea.contentEditable = 'false';\n  }\n  if (canInsertText && !textarea.value.slice(0, textarea.selectionStart).endsWith(text)) {\n    canInsertText = false;\n  }\n  if (!canInsertText) {\n    try {\n      document.execCommand('ms-beginUndoUnit');\n    } catch (e) {}\n    textarea.value = before + text + after;\n    try {\n      document.execCommand('ms-endUndoUnit');\n    } catch (e) {}\n    textarea.dispatchEvent(new CustomEvent('input', {\n      bubbles: true,\n      cancelable: true\n    }));\n  }\n  if (selectionStart != null && selectionEnd != null) {\n    textarea.setSelectionRange(selectionStart, selectionEnd);\n  } else {\n    textarea.setSelectionRange(originalSelectionStart, textarea.selectionEnd);\n  }\n}\nfunction styleSelectedText(textarea, styleArgs) {\n  const text = textarea.value.slice(textarea.selectionStart, textarea.selectionEnd);\n  let result;\n  if (styleArgs.orderedList || styleArgs.unorderedList) {\n    result = listStyle(textarea, styleArgs);\n  } else if (styleArgs.multiline && isMultipleLines(text)) {\n    result = multilineStyle(textarea, styleArgs);\n  } else {\n    result = blockStyle(textarea, styleArgs);\n  }\n  insertText(textarea, result);\n}\nfunction expandSelectionToLine(textarea) {\n  const lines = textarea.value.split('\\n');\n  let counter = 0;\n  for (let index = 0; index < lines.length; index++) {\n    const lineLength = lines[index].length + 1;\n    if (textarea.selectionStart >= counter && textarea.selectionStart < counter + lineLength) {\n      textarea.selectionStart = counter;\n    }\n    if (textarea.selectionEnd >= counter && textarea.selectionEnd < counter + lineLength) {\n      textarea.selectionEnd = counter + lineLength - 1;\n    }\n    counter += lineLength;\n  }\n}\nfunction expandSelectedText(textarea, prefixToUse, suffixToUse, multiline = false) {\n  if (textarea.selectionStart === textarea.selectionEnd) {\n    textarea.selectionStart = wordSelectionStart(textarea.value, textarea.selectionStart);\n    textarea.selectionEnd = wordSelectionEnd(textarea.value, textarea.selectionEnd, multiline);\n  } else {\n    const expandedSelectionStart = textarea.selectionStart - prefixToUse.length;\n    const expandedSelectionEnd = textarea.selectionEnd + suffixToUse.length;\n    const beginsWithPrefix = textarea.value.slice(expandedSelectionStart, textarea.selectionStart) === prefixToUse;\n    const endsWithSuffix = textarea.value.slice(textarea.selectionEnd, expandedSelectionEnd) === suffixToUse;\n    if (beginsWithPrefix && endsWithSuffix) {\n      textarea.selectionStart = expandedSelectionStart;\n      textarea.selectionEnd = expandedSelectionEnd;\n    }\n  }\n  return textarea.value.slice(textarea.selectionStart, textarea.selectionEnd);\n}\nfunction newlinesToSurroundSelectedText(textarea) {\n  const beforeSelection = textarea.value.slice(0, textarea.selectionStart);\n  const afterSelection = textarea.value.slice(textarea.selectionEnd);\n  const breaksBefore = beforeSelection.match(/\\n*$/);\n  const breaksAfter = afterSelection.match(/^\\n*/);\n  const newlinesBeforeSelection = breaksBefore ? breaksBefore[0].length : 0;\n  const newlinesAfterSelection = breaksAfter ? breaksAfter[0].length : 0;\n  let newlinesToAppend;\n  let newlinesToPrepend;\n  if (beforeSelection.match(/\\S/) && newlinesBeforeSelection < 2) {\n    newlinesToAppend = repeat('\\n', 2 - newlinesBeforeSelection);\n  }\n  if (afterSelection.match(/\\S/) && newlinesAfterSelection < 2) {\n    newlinesToPrepend = repeat('\\n', 2 - newlinesAfterSelection);\n  }\n  if (newlinesToAppend == null) {\n    newlinesToAppend = '';\n  }\n  if (newlinesToPrepend == null) {\n    newlinesToPrepend = '';\n  }\n  return {\n    newlinesToAppend,\n    newlinesToPrepend\n  };\n}\nfunction blockStyle(textarea, arg) {\n  let newlinesToAppend;\n  let newlinesToPrepend;\n  const {\n    prefix,\n    suffix,\n    blockPrefix,\n    blockSuffix,\n    replaceNext,\n    prefixSpace,\n    scanFor,\n    surroundWithNewlines\n  } = arg;\n  const originalSelectionStart = textarea.selectionStart;\n  const originalSelectionEnd = textarea.selectionEnd;\n  let selectedText = textarea.value.slice(textarea.selectionStart, textarea.selectionEnd);\n  let prefixToUse = isMultipleLines(selectedText) && blockPrefix.length > 0 ? `${blockPrefix}\\n` : prefix;\n  let suffixToUse = isMultipleLines(selectedText) && blockSuffix.length > 0 ? `\\n${blockSuffix}` : suffix;\n  if (prefixSpace) {\n    const beforeSelection = textarea.value[textarea.selectionStart - 1];\n    if (textarea.selectionStart !== 0 && beforeSelection != null && !beforeSelection.match(/\\s/)) {\n      prefixToUse = ` ${prefixToUse}`;\n    }\n  }\n  selectedText = expandSelectedText(textarea, prefixToUse, suffixToUse, arg.multiline);\n  let selectionStart = textarea.selectionStart;\n  let selectionEnd = textarea.selectionEnd;\n  const hasReplaceNext = replaceNext.length > 0 && suffixToUse.indexOf(replaceNext) > -1 && selectedText.length > 0;\n  if (surroundWithNewlines) {\n    const ref = newlinesToSurroundSelectedText(textarea);\n    newlinesToAppend = ref.newlinesToAppend;\n    newlinesToPrepend = ref.newlinesToPrepend;\n    prefixToUse = newlinesToAppend + prefix;\n    suffixToUse += newlinesToPrepend;\n  }\n  if (selectedText.startsWith(prefixToUse) && selectedText.endsWith(suffixToUse)) {\n    const replacementText = selectedText.slice(prefixToUse.length, selectedText.length - suffixToUse.length);\n    if (originalSelectionStart === originalSelectionEnd) {\n      let position = originalSelectionStart - prefixToUse.length;\n      position = Math.max(position, selectionStart);\n      position = Math.min(position, selectionStart + replacementText.length);\n      selectionStart = selectionEnd = position;\n    } else {\n      selectionEnd = selectionStart + replacementText.length;\n    }\n    return {\n      text: replacementText,\n      selectionStart,\n      selectionEnd\n    };\n  } else if (!hasReplaceNext) {\n    let replacementText = prefixToUse + selectedText + suffixToUse;\n    selectionStart = originalSelectionStart + prefixToUse.length;\n    selectionEnd = originalSelectionEnd + prefixToUse.length;\n    const whitespaceEdges = selectedText.match(/^\\s*|\\s*$/g);\n    if (arg.trimFirst && whitespaceEdges) {\n      const leadingWhitespace = whitespaceEdges[0] || '';\n      const trailingWhitespace = whitespaceEdges[1] || '';\n      replacementText = leadingWhitespace + prefixToUse + selectedText.trim() + suffixToUse + trailingWhitespace;\n      selectionStart += leadingWhitespace.length;\n      selectionEnd -= trailingWhitespace.length;\n    }\n    return {\n      text: replacementText,\n      selectionStart,\n      selectionEnd\n    };\n  } else if (scanFor.length > 0 && selectedText.match(scanFor)) {\n    suffixToUse = suffixToUse.replace(replaceNext, selectedText);\n    const replacementText = prefixToUse + suffixToUse;\n    selectionStart = selectionEnd = selectionStart + prefixToUse.length;\n    return {\n      text: replacementText,\n      selectionStart,\n      selectionEnd\n    };\n  } else {\n    const replacementText = prefixToUse + selectedText + suffixToUse;\n    selectionStart = selectionStart + prefixToUse.length + selectedText.length + suffixToUse.indexOf(replaceNext);\n    selectionEnd = selectionStart + replaceNext.length;\n    return {\n      text: replacementText,\n      selectionStart,\n      selectionEnd\n    };\n  }\n}\nfunction multilineStyle(textarea, arg) {\n  const {\n    prefix,\n    suffix,\n    surroundWithNewlines\n  } = arg;\n  let text = textarea.value.slice(textarea.selectionStart, textarea.selectionEnd);\n  let selectionStart = textarea.selectionStart;\n  let selectionEnd = textarea.selectionEnd;\n  const lines = text.split('\\n');\n  const undoStyle = lines.every(line => line.startsWith(prefix) && line.endsWith(suffix));\n  if (undoStyle) {\n    text = lines.map(line => line.slice(prefix.length, line.length - suffix.length)).join('\\n');\n    selectionEnd = selectionStart + text.length;\n  } else {\n    text = lines.map(line => prefix + line + suffix).join('\\n');\n    if (surroundWithNewlines) {\n      const {\n        newlinesToAppend,\n        newlinesToPrepend\n      } = newlinesToSurroundSelectedText(textarea);\n      selectionStart += newlinesToAppend.length;\n      selectionEnd = selectionStart + text.length;\n      text = newlinesToAppend + text + newlinesToPrepend;\n    }\n  }\n  return {\n    text,\n    selectionStart,\n    selectionEnd\n  };\n}\nfunction undoOrderedListStyle(text) {\n  const lines = text.split('\\n');\n  const orderedListRegex = /^\\d+\\.\\s+/;\n  const shouldUndoOrderedList = lines.every(line => orderedListRegex.test(line));\n  let result = lines;\n  if (shouldUndoOrderedList) {\n    result = lines.map(line => line.replace(orderedListRegex, ''));\n  }\n  return {\n    text: result.join('\\n'),\n    processed: shouldUndoOrderedList\n  };\n}\nfunction undoUnorderedListStyle(text) {\n  const lines = text.split('\\n');\n  const unorderedListPrefix = '- ';\n  const shouldUndoUnorderedList = lines.every(line => line.startsWith(unorderedListPrefix));\n  let result = lines;\n  if (shouldUndoUnorderedList) {\n    result = lines.map(line => line.slice(unorderedListPrefix.length, line.length));\n  }\n  return {\n    text: result.join('\\n'),\n    processed: shouldUndoUnorderedList\n  };\n}\nfunction makePrefix(index, unorderedList) {\n  if (unorderedList) {\n    return '- ';\n  } else {\n    return `${index + 1}. `;\n  }\n}\nfunction clearExistingListStyle(style, selectedText) {\n  let undoResultOpositeList;\n  let undoResult;\n  let pristineText;\n  if (style.orderedList) {\n    undoResult = undoOrderedListStyle(selectedText);\n    undoResultOpositeList = undoUnorderedListStyle(undoResult.text);\n    pristineText = undoResultOpositeList.text;\n  } else {\n    undoResult = undoUnorderedListStyle(selectedText);\n    undoResultOpositeList = undoOrderedListStyle(undoResult.text);\n    pristineText = undoResultOpositeList.text;\n  }\n  return [undoResult, undoResultOpositeList, pristineText];\n}\nfunction listStyle(textarea, style) {\n  const noInitialSelection = textarea.selectionStart === textarea.selectionEnd;\n  let selectionStart = textarea.selectionStart;\n  let selectionEnd = textarea.selectionEnd;\n  expandSelectionToLine(textarea);\n  const selectedText = textarea.value.slice(textarea.selectionStart, textarea.selectionEnd);\n  const [undoResult, undoResultOpositeList, pristineText] = clearExistingListStyle(style, selectedText);\n  const prefixedLines = pristineText.split('\\n').map((value, index) => {\n    return `${makePrefix(index, style.unorderedList)}${value}`;\n  });\n  const totalPrefixLength = prefixedLines.reduce((previousValue, _currentValue, currentIndex) => {\n    return previousValue + makePrefix(currentIndex, style.unorderedList).length;\n  }, 0);\n  const totalPrefixLengthOpositeList = prefixedLines.reduce((previousValue, _currentValue, currentIndex) => {\n    return previousValue + makePrefix(currentIndex, !style.unorderedList).length;\n  }, 0);\n  if (undoResult.processed) {\n    if (noInitialSelection) {\n      selectionStart = Math.max(selectionStart - makePrefix(0, style.unorderedList).length, 0);\n      selectionEnd = selectionStart;\n    } else {\n      selectionStart = textarea.selectionStart;\n      selectionEnd = textarea.selectionEnd - totalPrefixLength;\n    }\n    return {\n      text: pristineText,\n      selectionStart,\n      selectionEnd\n    };\n  }\n  const {\n    newlinesToAppend,\n    newlinesToPrepend\n  } = newlinesToSurroundSelectedText(textarea);\n  const text = newlinesToAppend + prefixedLines.join('\\n') + newlinesToPrepend;\n  if (noInitialSelection) {\n    selectionStart = Math.max(selectionStart + makePrefix(0, style.unorderedList).length + newlinesToAppend.length, 0);\n    selectionEnd = selectionStart;\n  } else {\n    if (undoResultOpositeList.processed) {\n      selectionStart = Math.max(textarea.selectionStart + newlinesToAppend.length, 0);\n      selectionEnd = textarea.selectionEnd + newlinesToAppend.length + totalPrefixLength - totalPrefixLengthOpositeList;\n    } else {\n      selectionStart = Math.max(textarea.selectionStart + newlinesToAppend.length, 0);\n      selectionEnd = textarea.selectionEnd + newlinesToAppend.length + totalPrefixLength;\n    }\n  }\n  return {\n    text,\n    selectionStart,\n    selectionEnd\n  };\n}\nfunction applyStyle(button, stylesToApply) {\n  const toolbar = button.closest('markdown-toolbar');\n  if (!(toolbar instanceof MarkdownToolbarElement)) return;\n  const defaults = {\n    prefix: '',\n    suffix: '',\n    blockPrefix: '',\n    blockSuffix: '',\n    multiline: false,\n    replaceNext: '',\n    prefixSpace: false,\n    scanFor: '',\n    surroundWithNewlines: false,\n    orderedList: false,\n    unorderedList: false,\n    trimFirst: false\n  };\n  const style = Object.assign(Object.assign({}, defaults), stylesToApply);\n  const field = toolbar.field;\n  if (field) {\n    field.focus();\n    styleSelectedText(field, style);\n  }\n}\nexport default MarkdownToolbarElement;","map":{"version":3,"names":["__classPrivateFieldGet","receiver","state","kind","f","TypeError","has","call","value","get","_MarkdownHeaderButtonElement_instances","_MarkdownHeaderButtonElement_setLevelStyle","buttonSelectors","getButtons","toolbar","els","button","querySelectorAll","join","hidden","offsetWidth","offsetHeight","closest","push","keydown","fn","event","key","preventDefault","styles","WeakMap","manualStyles","prefix","bold","suffix","trimFirst","italic","quote","multiline","surroundWithNewlines","code","blockPrefix","blockSuffix","link","replaceNext","scanFor","image","unorderedList","orderedList","mention","prefixSpace","ref","strikethrough","MarkdownButtonElement","HTMLElement","constructor","apply","style","applyStyle","addEventListener","connectedCallback","hasAttribute","setAttribute","click","MarkdownHeaderButtonElement","arguments","add","level","parseInt","getAttribute","observedAttributes","attributeChangedCallback","name","oldValue","newValue","WeakSet","repeat","set","window","customElements","define","MarkdownBoldButtonElement","MarkdownItalicButtonElement","MarkdownQuoteButtonElement","MarkdownCodeButtonElement","MarkdownLinkButtonElement","MarkdownImageButtonElement","MarkdownUnorderedListButtonElement","MarkdownOrderedListButtonElement","MarkdownTaskListButtonElement","MarkdownMentionButtonElement","MarkdownRefButtonElement","MarkdownStrikethroughButtonElement","applyFromToolbar","target","currentTarget","mdButton","mdButtonStyle","MarkdownToolbarElement","focusKeydown","onToolbarFocus","once","disconnectedCallback","removeEventListener","field","id","root","getRootNode","document","Document","ShadowRoot","getElementById","HTMLTextAreaElement","Element","removeAttribute","tabindex","focus","buttons","index","indexOf","length","n","i","isMultipleLines","string","trim","split","Array","wordSelectionStart","text","match","wordSelectionEnd","breakpoint","canInsertText","insertText","textarea","selectionStart","selectionEnd","originalSelectionStart","before","slice","after","contentEditable","execCommand","error","endsWith","e","dispatchEvent","CustomEvent","bubbles","cancelable","setSelectionRange","styleSelectedText","styleArgs","result","listStyle","multilineStyle","blockStyle","expandSelectionToLine","lines","counter","lineLength","expandSelectedText","prefixToUse","suffixToUse","expandedSelectionStart","expandedSelectionEnd","beginsWithPrefix","endsWithSuffix","newlinesToSurroundSelectedText","beforeSelection","afterSelection","breaksBefore","breaksAfter","newlinesBeforeSelection","newlinesAfterSelection","newlinesToAppend","newlinesToPrepend","arg","originalSelectionEnd","selectedText","hasReplaceNext","startsWith","replacementText","position","Math","max","min","whitespaceEdges","leadingWhitespace","trailingWhitespace","replace","undoStyle","every","line","map","undoOrderedListStyle","orderedListRegex","shouldUndoOrderedList","test","processed","undoUnorderedListStyle","unorderedListPrefix","shouldUndoUnorderedList","makePrefix","clearExistingListStyle","undoResultOpositeList","undoResult","pristineText","noInitialSelection","prefixedLines","totalPrefixLength","reduce","previousValue","_currentValue","currentIndex","totalPrefixLengthOpositeList","stylesToApply","defaults","Object","assign"],"sources":["/Users/steve/Documents/repos/github/api-insights/node_modules/@github/markdown-toolbar-element/dist/index.js"],"sourcesContent":["var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _MarkdownHeaderButtonElement_instances, _MarkdownHeaderButtonElement_setLevelStyle;\nconst buttonSelectors = [\n    '[data-md-button]',\n    'md-header',\n    'md-bold',\n    'md-italic',\n    'md-quote',\n    'md-code',\n    'md-link',\n    'md-image',\n    'md-unordered-list',\n    'md-ordered-list',\n    'md-task-list',\n    'md-mention',\n    'md-ref',\n    'md-strikethrough'\n];\nfunction getButtons(toolbar) {\n    const els = [];\n    for (const button of toolbar.querySelectorAll(buttonSelectors.join(', '))) {\n        if (button.hidden || (button.offsetWidth <= 0 && button.offsetHeight <= 0))\n            continue;\n        if (button.closest('markdown-toolbar') === toolbar)\n            els.push(button);\n    }\n    return els;\n}\nfunction keydown(fn) {\n    return function (event) {\n        if (event.key === ' ' || event.key === 'Enter') {\n            event.preventDefault();\n            fn(event);\n        }\n    };\n}\nconst styles = new WeakMap();\nconst manualStyles = {\n    'header-1': { prefix: '# ' },\n    'header-2': { prefix: '## ' },\n    'header-3': { prefix: '### ' },\n    'header-4': { prefix: '#### ' },\n    'header-5': { prefix: '##### ' },\n    'header-6': { prefix: '###### ' },\n    bold: { prefix: '**', suffix: '**', trimFirst: true },\n    italic: { prefix: '_', suffix: '_', trimFirst: true },\n    quote: { prefix: '> ', multiline: true, surroundWithNewlines: true },\n    code: {\n        prefix: '`',\n        suffix: '`',\n        blockPrefix: '```',\n        blockSuffix: '```'\n    },\n    link: { prefix: '[', suffix: '](url)', replaceNext: 'url', scanFor: 'https?://' },\n    image: { prefix: '![', suffix: '](url)', replaceNext: 'url', scanFor: 'https?://' },\n    'unordered-list': {\n        prefix: '- ',\n        multiline: true,\n        unorderedList: true\n    },\n    'ordered-list': {\n        prefix: '1. ',\n        multiline: true,\n        orderedList: true\n    },\n    'task-list': { prefix: '- [ ] ', multiline: true, surroundWithNewlines: true },\n    mention: { prefix: '@', prefixSpace: true },\n    ref: { prefix: '#', prefixSpace: true },\n    strikethrough: { prefix: '~~', suffix: '~~', trimFirst: true }\n};\nclass MarkdownButtonElement extends HTMLElement {\n    constructor() {\n        super();\n        const apply = () => {\n            const style = styles.get(this);\n            if (!style)\n                return;\n            applyStyle(this, style);\n        };\n        this.addEventListener('keydown', keydown(apply));\n        this.addEventListener('click', apply);\n    }\n    connectedCallback() {\n        if (!this.hasAttribute('role')) {\n            this.setAttribute('role', 'button');\n        }\n    }\n    click() {\n        const style = styles.get(this);\n        if (!style)\n            return;\n        applyStyle(this, style);\n    }\n}\nclass MarkdownHeaderButtonElement extends MarkdownButtonElement {\n    constructor() {\n        super(...arguments);\n        _MarkdownHeaderButtonElement_instances.add(this);\n    }\n    connectedCallback() {\n        const level = parseInt(this.getAttribute('level') || '3', 10);\n        __classPrivateFieldGet(this, _MarkdownHeaderButtonElement_instances, \"m\", _MarkdownHeaderButtonElement_setLevelStyle).call(this, level);\n    }\n    static get observedAttributes() {\n        return ['level'];\n    }\n    attributeChangedCallback(name, oldValue, newValue) {\n        if (name !== 'level')\n            return;\n        const level = parseInt(newValue || '3', 10);\n        __classPrivateFieldGet(this, _MarkdownHeaderButtonElement_instances, \"m\", _MarkdownHeaderButtonElement_setLevelStyle).call(this, level);\n    }\n}\n_MarkdownHeaderButtonElement_instances = new WeakSet(), _MarkdownHeaderButtonElement_setLevelStyle = function _MarkdownHeaderButtonElement_setLevelStyle(level) {\n    if (level < 1 || level > 6) {\n        return;\n    }\n    const prefix = `${'#'.repeat(level)} `;\n    styles.set(this, {\n        prefix\n    });\n};\nif (!window.customElements.get('md-header')) {\n    window.MarkdownHeaderButtonElement = MarkdownHeaderButtonElement;\n    window.customElements.define('md-header', MarkdownHeaderButtonElement);\n}\nclass MarkdownBoldButtonElement extends MarkdownButtonElement {\n    connectedCallback() {\n        styles.set(this, { prefix: '**', suffix: '**', trimFirst: true });\n    }\n}\nif (!window.customElements.get('md-bold')) {\n    window.MarkdownBoldButtonElement = MarkdownBoldButtonElement;\n    window.customElements.define('md-bold', MarkdownBoldButtonElement);\n}\nclass MarkdownItalicButtonElement extends MarkdownButtonElement {\n    connectedCallback() {\n        styles.set(this, { prefix: '_', suffix: '_', trimFirst: true });\n    }\n}\nif (!window.customElements.get('md-italic')) {\n    window.MarkdownItalicButtonElement = MarkdownItalicButtonElement;\n    window.customElements.define('md-italic', MarkdownItalicButtonElement);\n}\nclass MarkdownQuoteButtonElement extends MarkdownButtonElement {\n    connectedCallback() {\n        styles.set(this, { prefix: '> ', multiline: true, surroundWithNewlines: true });\n    }\n}\nif (!window.customElements.get('md-quote')) {\n    window.MarkdownQuoteButtonElement = MarkdownQuoteButtonElement;\n    window.customElements.define('md-quote', MarkdownQuoteButtonElement);\n}\nclass MarkdownCodeButtonElement extends MarkdownButtonElement {\n    connectedCallback() {\n        styles.set(this, { prefix: '`', suffix: '`', blockPrefix: '```', blockSuffix: '```' });\n    }\n}\nif (!window.customElements.get('md-code')) {\n    window.MarkdownCodeButtonElement = MarkdownCodeButtonElement;\n    window.customElements.define('md-code', MarkdownCodeButtonElement);\n}\nclass MarkdownLinkButtonElement extends MarkdownButtonElement {\n    connectedCallback() {\n        styles.set(this, { prefix: '[', suffix: '](url)', replaceNext: 'url', scanFor: 'https?://' });\n    }\n}\nif (!window.customElements.get('md-link')) {\n    window.MarkdownLinkButtonElement = MarkdownLinkButtonElement;\n    window.customElements.define('md-link', MarkdownLinkButtonElement);\n}\nclass MarkdownImageButtonElement extends MarkdownButtonElement {\n    connectedCallback() {\n        styles.set(this, { prefix: '![', suffix: '](url)', replaceNext: 'url', scanFor: 'https?://' });\n    }\n}\nif (!window.customElements.get('md-image')) {\n    window.MarkdownImageButtonElement = MarkdownImageButtonElement;\n    window.customElements.define('md-image', MarkdownImageButtonElement);\n}\nclass MarkdownUnorderedListButtonElement extends MarkdownButtonElement {\n    connectedCallback() {\n        styles.set(this, { prefix: '- ', multiline: true, unorderedList: true });\n    }\n}\nif (!window.customElements.get('md-unordered-list')) {\n    window.MarkdownUnorderedListButtonElement = MarkdownUnorderedListButtonElement;\n    window.customElements.define('md-unordered-list', MarkdownUnorderedListButtonElement);\n}\nclass MarkdownOrderedListButtonElement extends MarkdownButtonElement {\n    connectedCallback() {\n        styles.set(this, { prefix: '1. ', multiline: true, orderedList: true });\n    }\n}\nif (!window.customElements.get('md-ordered-list')) {\n    window.MarkdownOrderedListButtonElement = MarkdownOrderedListButtonElement;\n    window.customElements.define('md-ordered-list', MarkdownOrderedListButtonElement);\n}\nclass MarkdownTaskListButtonElement extends MarkdownButtonElement {\n    connectedCallback() {\n        styles.set(this, { prefix: '- [ ] ', multiline: true, surroundWithNewlines: true });\n    }\n}\nif (!window.customElements.get('md-task-list')) {\n    window.MarkdownTaskListButtonElement = MarkdownTaskListButtonElement;\n    window.customElements.define('md-task-list', MarkdownTaskListButtonElement);\n}\nclass MarkdownMentionButtonElement extends MarkdownButtonElement {\n    connectedCallback() {\n        styles.set(this, { prefix: '@', prefixSpace: true });\n    }\n}\nif (!window.customElements.get('md-mention')) {\n    window.MarkdownMentionButtonElement = MarkdownMentionButtonElement;\n    window.customElements.define('md-mention', MarkdownMentionButtonElement);\n}\nclass MarkdownRefButtonElement extends MarkdownButtonElement {\n    connectedCallback() {\n        styles.set(this, { prefix: '#', prefixSpace: true });\n    }\n}\nif (!window.customElements.get('md-ref')) {\n    window.MarkdownRefButtonElement = MarkdownRefButtonElement;\n    window.customElements.define('md-ref', MarkdownRefButtonElement);\n}\nclass MarkdownStrikethroughButtonElement extends MarkdownButtonElement {\n    connectedCallback() {\n        styles.set(this, { prefix: '~~', suffix: '~~', trimFirst: true });\n    }\n}\nif (!window.customElements.get('md-strikethrough')) {\n    window.MarkdownStrikethroughButtonElement = MarkdownStrikethroughButtonElement;\n    window.customElements.define('md-strikethrough', MarkdownStrikethroughButtonElement);\n}\nfunction applyFromToolbar(event) {\n    const { target, currentTarget } = event;\n    if (!(target instanceof HTMLElement))\n        return;\n    const mdButton = target.closest('[data-md-button]');\n    if (!mdButton || mdButton.closest('markdown-toolbar') !== currentTarget)\n        return;\n    const mdButtonStyle = target.getAttribute('data-md-button');\n    const style = manualStyles[mdButtonStyle];\n    if (!style)\n        return;\n    applyStyle(target, style);\n}\nclass MarkdownToolbarElement extends HTMLElement {\n    connectedCallback() {\n        if (!this.hasAttribute('role')) {\n            this.setAttribute('role', 'toolbar');\n        }\n        this.addEventListener('keydown', focusKeydown);\n        this.setAttribute('tabindex', '0');\n        this.addEventListener('focus', onToolbarFocus, { once: true });\n        this.addEventListener('keydown', keydown(applyFromToolbar));\n        this.addEventListener('click', applyFromToolbar);\n    }\n    disconnectedCallback() {\n        this.removeEventListener('keydown', focusKeydown);\n    }\n    get field() {\n        const id = this.getAttribute('for');\n        if (!id)\n            return null;\n        const root = 'getRootNode' in this ? this.getRootNode() : document;\n        let field;\n        if (root instanceof Document || root instanceof ShadowRoot) {\n            field = root.getElementById(id);\n        }\n        return field instanceof HTMLTextAreaElement ? field : null;\n    }\n}\nfunction onToolbarFocus({ target }) {\n    if (!(target instanceof Element))\n        return;\n    if (target.hasAttribute('data-no-focus'))\n        return;\n    target.removeAttribute('tabindex');\n    let tabindex = '0';\n    for (const button of getButtons(target)) {\n        button.setAttribute('tabindex', tabindex);\n        if (tabindex === '0') {\n            button.focus();\n            tabindex = '-1';\n        }\n    }\n}\nfunction focusKeydown(event) {\n    const key = event.key;\n    if (key !== 'ArrowRight' && key !== 'ArrowLeft' && key !== 'Home' && key !== 'End')\n        return;\n    const toolbar = event.currentTarget;\n    if (!(toolbar instanceof HTMLElement))\n        return;\n    if (toolbar.hasAttribute('data-no-focus'))\n        return;\n    const buttons = getButtons(toolbar);\n    const index = buttons.indexOf(event.target);\n    const length = buttons.length;\n    if (index === -1)\n        return;\n    let n = 0;\n    if (key === 'ArrowLeft')\n        n = index - 1;\n    if (key === 'ArrowRight')\n        n = index + 1;\n    if (key === 'End')\n        n = length - 1;\n    if (n < 0)\n        n = length - 1;\n    if (n > length - 1)\n        n = 0;\n    for (let i = 0; i < length; i += 1) {\n        buttons[i].setAttribute('tabindex', i === n ? '0' : '-1');\n    }\n    event.preventDefault();\n    buttons[n].focus();\n}\nif (!window.customElements.get('markdown-toolbar')) {\n    window.MarkdownToolbarElement = MarkdownToolbarElement;\n    window.customElements.define('markdown-toolbar', MarkdownToolbarElement);\n}\nfunction isMultipleLines(string) {\n    return string.trim().split('\\n').length > 1;\n}\nfunction repeat(string, n) {\n    return Array(n + 1).join(string);\n}\nfunction wordSelectionStart(text, i) {\n    let index = i;\n    while (text[index] && text[index - 1] != null && !text[index - 1].match(/\\s/)) {\n        index--;\n    }\n    return index;\n}\nfunction wordSelectionEnd(text, i, multiline) {\n    let index = i;\n    const breakpoint = multiline ? /\\n/ : /\\s/;\n    while (text[index] && !text[index].match(breakpoint)) {\n        index++;\n    }\n    return index;\n}\nlet canInsertText = null;\nfunction insertText(textarea, { text, selectionStart, selectionEnd }) {\n    const originalSelectionStart = textarea.selectionStart;\n    const before = textarea.value.slice(0, originalSelectionStart);\n    const after = textarea.value.slice(textarea.selectionEnd);\n    if (canInsertText === null || canInsertText === true) {\n        textarea.contentEditable = 'true';\n        try {\n            canInsertText = document.execCommand('insertText', false, text);\n        }\n        catch (error) {\n            canInsertText = false;\n        }\n        textarea.contentEditable = 'false';\n    }\n    if (canInsertText && !textarea.value.slice(0, textarea.selectionStart).endsWith(text)) {\n        canInsertText = false;\n    }\n    if (!canInsertText) {\n        try {\n            document.execCommand('ms-beginUndoUnit');\n        }\n        catch (e) {\n        }\n        textarea.value = before + text + after;\n        try {\n            document.execCommand('ms-endUndoUnit');\n        }\n        catch (e) {\n        }\n        textarea.dispatchEvent(new CustomEvent('input', { bubbles: true, cancelable: true }));\n    }\n    if (selectionStart != null && selectionEnd != null) {\n        textarea.setSelectionRange(selectionStart, selectionEnd);\n    }\n    else {\n        textarea.setSelectionRange(originalSelectionStart, textarea.selectionEnd);\n    }\n}\nfunction styleSelectedText(textarea, styleArgs) {\n    const text = textarea.value.slice(textarea.selectionStart, textarea.selectionEnd);\n    let result;\n    if (styleArgs.orderedList || styleArgs.unorderedList) {\n        result = listStyle(textarea, styleArgs);\n    }\n    else if (styleArgs.multiline && isMultipleLines(text)) {\n        result = multilineStyle(textarea, styleArgs);\n    }\n    else {\n        result = blockStyle(textarea, styleArgs);\n    }\n    insertText(textarea, result);\n}\nfunction expandSelectionToLine(textarea) {\n    const lines = textarea.value.split('\\n');\n    let counter = 0;\n    for (let index = 0; index < lines.length; index++) {\n        const lineLength = lines[index].length + 1;\n        if (textarea.selectionStart >= counter && textarea.selectionStart < counter + lineLength) {\n            textarea.selectionStart = counter;\n        }\n        if (textarea.selectionEnd >= counter && textarea.selectionEnd < counter + lineLength) {\n            textarea.selectionEnd = counter + lineLength - 1;\n        }\n        counter += lineLength;\n    }\n}\nfunction expandSelectedText(textarea, prefixToUse, suffixToUse, multiline = false) {\n    if (textarea.selectionStart === textarea.selectionEnd) {\n        textarea.selectionStart = wordSelectionStart(textarea.value, textarea.selectionStart);\n        textarea.selectionEnd = wordSelectionEnd(textarea.value, textarea.selectionEnd, multiline);\n    }\n    else {\n        const expandedSelectionStart = textarea.selectionStart - prefixToUse.length;\n        const expandedSelectionEnd = textarea.selectionEnd + suffixToUse.length;\n        const beginsWithPrefix = textarea.value.slice(expandedSelectionStart, textarea.selectionStart) === prefixToUse;\n        const endsWithSuffix = textarea.value.slice(textarea.selectionEnd, expandedSelectionEnd) === suffixToUse;\n        if (beginsWithPrefix && endsWithSuffix) {\n            textarea.selectionStart = expandedSelectionStart;\n            textarea.selectionEnd = expandedSelectionEnd;\n        }\n    }\n    return textarea.value.slice(textarea.selectionStart, textarea.selectionEnd);\n}\nfunction newlinesToSurroundSelectedText(textarea) {\n    const beforeSelection = textarea.value.slice(0, textarea.selectionStart);\n    const afterSelection = textarea.value.slice(textarea.selectionEnd);\n    const breaksBefore = beforeSelection.match(/\\n*$/);\n    const breaksAfter = afterSelection.match(/^\\n*/);\n    const newlinesBeforeSelection = breaksBefore ? breaksBefore[0].length : 0;\n    const newlinesAfterSelection = breaksAfter ? breaksAfter[0].length : 0;\n    let newlinesToAppend;\n    let newlinesToPrepend;\n    if (beforeSelection.match(/\\S/) && newlinesBeforeSelection < 2) {\n        newlinesToAppend = repeat('\\n', 2 - newlinesBeforeSelection);\n    }\n    if (afterSelection.match(/\\S/) && newlinesAfterSelection < 2) {\n        newlinesToPrepend = repeat('\\n', 2 - newlinesAfterSelection);\n    }\n    if (newlinesToAppend == null) {\n        newlinesToAppend = '';\n    }\n    if (newlinesToPrepend == null) {\n        newlinesToPrepend = '';\n    }\n    return { newlinesToAppend, newlinesToPrepend };\n}\nfunction blockStyle(textarea, arg) {\n    let newlinesToAppend;\n    let newlinesToPrepend;\n    const { prefix, suffix, blockPrefix, blockSuffix, replaceNext, prefixSpace, scanFor, surroundWithNewlines } = arg;\n    const originalSelectionStart = textarea.selectionStart;\n    const originalSelectionEnd = textarea.selectionEnd;\n    let selectedText = textarea.value.slice(textarea.selectionStart, textarea.selectionEnd);\n    let prefixToUse = isMultipleLines(selectedText) && blockPrefix.length > 0 ? `${blockPrefix}\\n` : prefix;\n    let suffixToUse = isMultipleLines(selectedText) && blockSuffix.length > 0 ? `\\n${blockSuffix}` : suffix;\n    if (prefixSpace) {\n        const beforeSelection = textarea.value[textarea.selectionStart - 1];\n        if (textarea.selectionStart !== 0 && beforeSelection != null && !beforeSelection.match(/\\s/)) {\n            prefixToUse = ` ${prefixToUse}`;\n        }\n    }\n    selectedText = expandSelectedText(textarea, prefixToUse, suffixToUse, arg.multiline);\n    let selectionStart = textarea.selectionStart;\n    let selectionEnd = textarea.selectionEnd;\n    const hasReplaceNext = replaceNext.length > 0 && suffixToUse.indexOf(replaceNext) > -1 && selectedText.length > 0;\n    if (surroundWithNewlines) {\n        const ref = newlinesToSurroundSelectedText(textarea);\n        newlinesToAppend = ref.newlinesToAppend;\n        newlinesToPrepend = ref.newlinesToPrepend;\n        prefixToUse = newlinesToAppend + prefix;\n        suffixToUse += newlinesToPrepend;\n    }\n    if (selectedText.startsWith(prefixToUse) && selectedText.endsWith(suffixToUse)) {\n        const replacementText = selectedText.slice(prefixToUse.length, selectedText.length - suffixToUse.length);\n        if (originalSelectionStart === originalSelectionEnd) {\n            let position = originalSelectionStart - prefixToUse.length;\n            position = Math.max(position, selectionStart);\n            position = Math.min(position, selectionStart + replacementText.length);\n            selectionStart = selectionEnd = position;\n        }\n        else {\n            selectionEnd = selectionStart + replacementText.length;\n        }\n        return { text: replacementText, selectionStart, selectionEnd };\n    }\n    else if (!hasReplaceNext) {\n        let replacementText = prefixToUse + selectedText + suffixToUse;\n        selectionStart = originalSelectionStart + prefixToUse.length;\n        selectionEnd = originalSelectionEnd + prefixToUse.length;\n        const whitespaceEdges = selectedText.match(/^\\s*|\\s*$/g);\n        if (arg.trimFirst && whitespaceEdges) {\n            const leadingWhitespace = whitespaceEdges[0] || '';\n            const trailingWhitespace = whitespaceEdges[1] || '';\n            replacementText = leadingWhitespace + prefixToUse + selectedText.trim() + suffixToUse + trailingWhitespace;\n            selectionStart += leadingWhitespace.length;\n            selectionEnd -= trailingWhitespace.length;\n        }\n        return { text: replacementText, selectionStart, selectionEnd };\n    }\n    else if (scanFor.length > 0 && selectedText.match(scanFor)) {\n        suffixToUse = suffixToUse.replace(replaceNext, selectedText);\n        const replacementText = prefixToUse + suffixToUse;\n        selectionStart = selectionEnd = selectionStart + prefixToUse.length;\n        return { text: replacementText, selectionStart, selectionEnd };\n    }\n    else {\n        const replacementText = prefixToUse + selectedText + suffixToUse;\n        selectionStart = selectionStart + prefixToUse.length + selectedText.length + suffixToUse.indexOf(replaceNext);\n        selectionEnd = selectionStart + replaceNext.length;\n        return { text: replacementText, selectionStart, selectionEnd };\n    }\n}\nfunction multilineStyle(textarea, arg) {\n    const { prefix, suffix, surroundWithNewlines } = arg;\n    let text = textarea.value.slice(textarea.selectionStart, textarea.selectionEnd);\n    let selectionStart = textarea.selectionStart;\n    let selectionEnd = textarea.selectionEnd;\n    const lines = text.split('\\n');\n    const undoStyle = lines.every(line => line.startsWith(prefix) && line.endsWith(suffix));\n    if (undoStyle) {\n        text = lines.map(line => line.slice(prefix.length, line.length - suffix.length)).join('\\n');\n        selectionEnd = selectionStart + text.length;\n    }\n    else {\n        text = lines.map(line => prefix + line + suffix).join('\\n');\n        if (surroundWithNewlines) {\n            const { newlinesToAppend, newlinesToPrepend } = newlinesToSurroundSelectedText(textarea);\n            selectionStart += newlinesToAppend.length;\n            selectionEnd = selectionStart + text.length;\n            text = newlinesToAppend + text + newlinesToPrepend;\n        }\n    }\n    return { text, selectionStart, selectionEnd };\n}\nfunction undoOrderedListStyle(text) {\n    const lines = text.split('\\n');\n    const orderedListRegex = /^\\d+\\.\\s+/;\n    const shouldUndoOrderedList = lines.every(line => orderedListRegex.test(line));\n    let result = lines;\n    if (shouldUndoOrderedList) {\n        result = lines.map(line => line.replace(orderedListRegex, ''));\n    }\n    return {\n        text: result.join('\\n'),\n        processed: shouldUndoOrderedList\n    };\n}\nfunction undoUnorderedListStyle(text) {\n    const lines = text.split('\\n');\n    const unorderedListPrefix = '- ';\n    const shouldUndoUnorderedList = lines.every(line => line.startsWith(unorderedListPrefix));\n    let result = lines;\n    if (shouldUndoUnorderedList) {\n        result = lines.map(line => line.slice(unorderedListPrefix.length, line.length));\n    }\n    return {\n        text: result.join('\\n'),\n        processed: shouldUndoUnorderedList\n    };\n}\nfunction makePrefix(index, unorderedList) {\n    if (unorderedList) {\n        return '- ';\n    }\n    else {\n        return `${index + 1}. `;\n    }\n}\nfunction clearExistingListStyle(style, selectedText) {\n    let undoResultOpositeList;\n    let undoResult;\n    let pristineText;\n    if (style.orderedList) {\n        undoResult = undoOrderedListStyle(selectedText);\n        undoResultOpositeList = undoUnorderedListStyle(undoResult.text);\n        pristineText = undoResultOpositeList.text;\n    }\n    else {\n        undoResult = undoUnorderedListStyle(selectedText);\n        undoResultOpositeList = undoOrderedListStyle(undoResult.text);\n        pristineText = undoResultOpositeList.text;\n    }\n    return [undoResult, undoResultOpositeList, pristineText];\n}\nfunction listStyle(textarea, style) {\n    const noInitialSelection = textarea.selectionStart === textarea.selectionEnd;\n    let selectionStart = textarea.selectionStart;\n    let selectionEnd = textarea.selectionEnd;\n    expandSelectionToLine(textarea);\n    const selectedText = textarea.value.slice(textarea.selectionStart, textarea.selectionEnd);\n    const [undoResult, undoResultOpositeList, pristineText] = clearExistingListStyle(style, selectedText);\n    const prefixedLines = pristineText.split('\\n').map((value, index) => {\n        return `${makePrefix(index, style.unorderedList)}${value}`;\n    });\n    const totalPrefixLength = prefixedLines.reduce((previousValue, _currentValue, currentIndex) => {\n        return previousValue + makePrefix(currentIndex, style.unorderedList).length;\n    }, 0);\n    const totalPrefixLengthOpositeList = prefixedLines.reduce((previousValue, _currentValue, currentIndex) => {\n        return previousValue + makePrefix(currentIndex, !style.unorderedList).length;\n    }, 0);\n    if (undoResult.processed) {\n        if (noInitialSelection) {\n            selectionStart = Math.max(selectionStart - makePrefix(0, style.unorderedList).length, 0);\n            selectionEnd = selectionStart;\n        }\n        else {\n            selectionStart = textarea.selectionStart;\n            selectionEnd = textarea.selectionEnd - totalPrefixLength;\n        }\n        return { text: pristineText, selectionStart, selectionEnd };\n    }\n    const { newlinesToAppend, newlinesToPrepend } = newlinesToSurroundSelectedText(textarea);\n    const text = newlinesToAppend + prefixedLines.join('\\n') + newlinesToPrepend;\n    if (noInitialSelection) {\n        selectionStart = Math.max(selectionStart + makePrefix(0, style.unorderedList).length + newlinesToAppend.length, 0);\n        selectionEnd = selectionStart;\n    }\n    else {\n        if (undoResultOpositeList.processed) {\n            selectionStart = Math.max(textarea.selectionStart + newlinesToAppend.length, 0);\n            selectionEnd = textarea.selectionEnd + newlinesToAppend.length + totalPrefixLength - totalPrefixLengthOpositeList;\n        }\n        else {\n            selectionStart = Math.max(textarea.selectionStart + newlinesToAppend.length, 0);\n            selectionEnd = textarea.selectionEnd + newlinesToAppend.length + totalPrefixLength;\n        }\n    }\n    return { text, selectionStart, selectionEnd };\n}\nfunction applyStyle(button, stylesToApply) {\n    const toolbar = button.closest('markdown-toolbar');\n    if (!(toolbar instanceof MarkdownToolbarElement))\n        return;\n    const defaults = {\n        prefix: '',\n        suffix: '',\n        blockPrefix: '',\n        blockSuffix: '',\n        multiline: false,\n        replaceNext: '',\n        prefixSpace: false,\n        scanFor: '',\n        surroundWithNewlines: false,\n        orderedList: false,\n        unorderedList: false,\n        trimFirst: false\n    };\n    const style = Object.assign(Object.assign({}, defaults), stylesToApply);\n    const field = toolbar.field;\n    if (field) {\n        field.focus();\n        styleSelectedText(field, style);\n    }\n}\nexport default MarkdownToolbarElement;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}